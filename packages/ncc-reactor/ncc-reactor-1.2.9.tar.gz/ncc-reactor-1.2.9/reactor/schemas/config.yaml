---
$schema: http://json-schema.org/draft-07/schema#
title: "Reactor Client"

definitions: {}

type: object
required: [elasticsearch]

properties:
  elasticsearch: {$ref: "file:common.yaml#/definitions/elasticsearch"}


  writeback_index:
    type: string
    title: "Writeback index (index prefix for ElasticSearch >= 6.x"
    default: "reactor"
  alert_alias:
    type: string
    title: "Alias for all alert indices"
    default: "reactor_alerts"
  writeback_flush:
    type: integer
    title: "Maximum number of writeback actions to cache before flushing"
    default: 1000
  max_processpool:
    type: integer
    title: "Maximum number of processes to run rules in (capped between 1 and CPU count)"
    default: 0
    minimium: 0


  cluster:
    title: "Settings for a cluster of Reactor nodes"
    type: object
    additional_properties: false
    required: [host, neighbours]
    properties:
      host:
        title: "Hostname that other cluster members will use to connect"
        type: string
        pattern: '^[A-Za-z0-9][A-Za-z0-9\.\-]{1,255}:[0-9]+$'
      neighbours:
        title: "List of neighbour host names"
        type: array
        items:
          type: string
          pattern: '^[A-Za-z0-9][A-Za-z0-9\.\-]{1,255}:[0-9]+$'

      ssl:
        type: object
        title: "TLS connection configuration"
        default: {enabled: false}
        required: [ca_certs, node_cert, node_key]

        properties:
          enabled:
            type: boolean
            title: "Enable TLS connection to ElasticSearch"
            default: true
            examples: [true, false]

          ca_certs:
            type: string
            title: "Path to CA certificate file or directory"
            examples:
              - /var/ssl/reactor/
          node_cert:
            type: string
            title: "Path to node certificate"
            examples:
              - /var/ssl/reactor/cluster-node.crt
          node_key:
            type: string
            title: "Path to node private key"
            examples:
              - /var/ssl/reactor/cluster-node.key


  alert_time_limit:
    default: {days: 2}
    title: "Time limit for an alert to be successfully sent"
    allOf:
      - $ref: "common.yaml#/definitions/timeframe"
  old_query_limit:
    default: {weeks: 1}
    title: "MThe maximum time between queries for Reactor to start at the most recently run query"
    allOf:
      - $ref: "common.yaml#/definitions/timeframe"
  max_aggregation:
    default: 10000
    title: "Maximum number of alerts to aggregate together."
    type: integer
  string_multi_field_name:
    default: ~
    title: "The suffix to use for the subfield for string mutli-fields in Elasticsearch"
    type: [string, 'null']


  reload:
    default: {seconds: 3}
    title: "Duration to wait between checking for rule configuration changes"
    allOf:
      - {$ref: "file:common.yaml#/definitions/timeframe"}
  resend:
    default: {seconds: 30}
    title: "Duration to wait between trying to send pending alerts"
    allOf:
      - {$ref: "file:common.yaml#/definitions/timeframe"}


  loader:
    type: object
    default: {}
    additionalProperties: false
    properties:
      type:
        type: [string, 'null']
        title: "Loader type (either a mapping or `package.module.ClassName`)"
        default: file
        examples:
          - file
          - package.module.ClassName

      config:
        type: object
        title: "Configuration for the loader"
        default: {}


  rule:
    type: object
    title: "Default rule configurations (applied to all rules)"
    description: |
      See {$ref: "file:ruletype.yaml#"} for possible properties.
    default: {}


  notifiers:
    type: object
    title: "Set of notifiers to be fired on uncaught exceptions being raise"
    default: {}
    additionalProperties:
      type: object


  plugins:
    type: object
    title: "Set of plugins to be run alongside Reactor"
    default: {}
    additionalProperties:
      type: object




  mappings:
    type: object
    title: "Set of user friendly mappings for alerters, loaders, and rule types"
    default: {}
    additionalProperties: false
    properties:
      alerter:
        title: "Lookup dictionary of human name to Alerter"
        type: object
        default: {}
        additionalProperties:
          type: string

      enhancement:
        title: "Lookup dictionary of human name to Enhancement"
        type: object
        default: {}
        additionalProperties:
          type: string

      loader:
        title: "Lookup dictionary of human name to RuleLoader"
        type: object
        default: {}
        additionalProperties:
          type: string

      ruletype:
        title: "Lookup dictionary of human name to Rule"
        type: object
        default: {}
        additionalProperties:
          type: string

      notifier:
        title: "Lookup dictionary of human name to Notifier"
        type: object
        default: {}
        additionalProperties:
          type: string

      plugin:
        title: "Lookup dictionary of human name to Plugin"
        type: object
        default: {}
        additionalProperties:
          type: string
...
