{
    "$schema": "http://json-schema.org/draft-06/schema#",
    "$id": "urn:spirent:schema:testcenter-ai:testcase-v1",
    "title": "TestCenter AI Testcase Metadata V1",
    "description": "Definition of TestCenter AI Testcase Metadata, version 1",
    "type": "object",
    "properties": {
        "testcase": {
            "description": "Definition of Testcase",
            "type": "object",
            "properties": {
                "id": {
                    "description": "Unique, immutable test case identifier. Recommended format <test-pack>.<area>.xxx",
                    "type": "string",
                    "examples" : ["sd-wan.path_selection.001"]
                },
                "name": {
                    "description": "Test case name",
                    "type": "string"
                },
                "description": {
                    "description": "Test case description",
                    "type": "string"
                },
                "objective": {
                    "description": "Objective of test case",
                    "type": "string"
                },
                "run_info": {
                    "description": "Information about running this test",
                    "type": "object",
                    "properties": {
                        "runner": {
                            "description": "Test runner that will execute this test",
                            "type": "string",
                            "default": "robot"
                        },
                        "script_module": {
                            "description": "Fully qualified name of script, such as Python module name",
                            "type": "string"
                        },
                        "script_class": {
                            "description": "Name of class implementing test",
                            "type": "string"
                        },
                        "duration": {
                            "description": "Duration (in seconds) that the test case is expected to run on average",
                            "type": "integer"
                        },
                        "timeout": {
                            "description": "Timeout (in seconds) after which test will be terminated",
                            "type": "integer"
                        },
                        "procedure": {
                            "description": "How to run test",
                            "type": "string",
                            "examples" : ["1. Apply configuration 2. Check port link is up 3. Start capture on port 2 4. Send Traffic on port 1 5. Stop capture on port 2 6. Check if Basic Traffic Results match expected results"]
                        },
                        "environment": {
                            "description": "Test environment",
                            "type": "string",
                            "examples" : ["2 ports connected back to back, port1 is under test and port2 is monitoring port"]
                        },
                        "initial_config": {
                            "description": "Initial test configuration",
                            "type": "string",
                            "examples" : ["On one STC port 1, configure one raw streamblock with encapsulation EthII/FCoE. Set frame length=1516. Set Traffic generator to bursts mode with burst size=100. On another STC port 2, capture the packets. Select Port Traffic and Counters, Basic Traffic Results for Result View"]
                        },
                        "expected_results": {
                            "description": "Expected test results",
                            "type": "string",
                            "examples" : ["Total number of captured packets=100, frame sizes =2112, all packets contain FCoE header in which EOF=0x42"]
                        },
                        "equipment": {
                            "description": "Equipment required to run test",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "description": "Equipment type",
                                        "type": "string",
                                        "enum": ["pga", "router", "switch", "network_emulator"]
                                    },
                                    "min_version": {
                                        "description": "Minimum build version for feature being tested",
                                        "type": "string"
                                    },
                                    "count": {
                                        "description": "Number required, such as number of STC ports",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "type",
                                    "count"
                                ]
                            },
                            "minItems": 1
                        }
                    },
                    "required": [
                        "duration",
                        "timeout",
                        "equipment"
                    ]
                },
                "verified_defects": {
                    "description": "Id(s) of defect(s) verified by this test case",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "minItems": 1
                },
                "owner": {
                    "description": "Test case owner, team or person",
                    "type": "object",
                    "properties": {
                        "id": {
                            "description": "Unique id, such as UUID or email",
                            "type": "string"
                        },
                        "name": {
                            "description": "Owner name, for display purposes",
                            "type": "string"
                        }
                    },
                    "required": [
                        "name"
                    ]
                },
                "test_area": {
                    "description": "Test functional area",
                    "type": "string"
                },
                "test_type": {
                    "description": "Test category",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": ["acceptance", "performance", "functional", "conformance" ]
                    },
                    "minItems": 1
                },
                "test_suites": {
                    "description": "Id(s) of test suite(s) that this test case belongs to",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": ["smoke", "nightly", "acceptance", "functional", "performance"]
                    },
                    "minItems": 1
                },
                "version": {
                    "description": "Test case version",
                    "type": "string"
                },
                "dut_target": {
                    "description": "Type(s) of DUT this test case targets",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": ["router", "switch", "sd-wan"]
                    },
                    "minItems": 1
                },
                "test_rank": {
                    "description": "Rank of this test case",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": ["mandatory", "optional", "disabled"]
                    },
                    "minItems": 1
                }
            },
            "required": [
                "id",
                "name",
                "objective",
                "run_info",
                "test_type",
                "dut_target"
            ]
        }
    },
    "required": [
        "testcase"
    ]
}
