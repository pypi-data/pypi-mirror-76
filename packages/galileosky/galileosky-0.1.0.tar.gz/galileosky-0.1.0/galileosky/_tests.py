import struct

import libscrc

from galileosky.tags import tags
from galileosky import Packet


# crc16 = libscrc.modbus(b'1234')      # Calculate ASCII of modbus
# crc16 = libscrc.modbus(b'\x01\x02')  # Calculate HEX of modbus
# crc16 = libscrc.modbus(bytearray( [ 0x01, 0x02 ] ))

sdf = b'\x01\x17\x80\x01\x0A\x02\x46\x03\x33\x35\x36\x38\x39\x36\x30\x33\x33\x39\x33\x32\x37\x39\x30\x04\x81\x00\xBB\xEA'
sdf = b'\x01\x17\x80\x01\x11\x02\xDF\x03\x38\x36\x38\x32\x30\x34\x30\x30\x35\x36\x34\x37\x38\x33\x38\x04\x32\x00\x86\x9C'

def str_to_bytes(s):
    return bytearray([int(s[i:i + 2], base=16) for i in range(0, len(s), 2)])


sdf = str_to_bytes('0117800182021003383632303537303437373435353331043200B548')
# sdf = str_to_bytes('01E783100000204E83FF5C30F300000000000000003300000000340000350040013A413F3042FE0E100100208D83FF5C30F300000000000000003300000000340000350040003A413B2E42080F100200200684FF5C30F300000000000000003300000000340000350040003A412E3042220F100300206B84FF5C30F300000000000000003300000000340000350040003A41453042390F100400207684FF5C30F300000000000000003300000000340000350040003A41DF2D423A0F100500208184FF5C30F300000000000000003300000000340000350040003A415B30423B0F100600208B84FF5C30F300000000000000003300000000340000350040003A412B2E423E0F100700209684FF5C30F300000000000000003300000000340000350040003A41F22D423F0F10080020A184FF5C30F300000000000000003300000000340000350040003A41832E423E0F10090020AC84FF5C30F300000000000000003300000000340000350040003A41493042420F100A0020B784FF5C30F300000000000000003300000000340000350040003A413A3042430F100B0020C284FF5C30F300000000000000003300000000340000350040003A413D3042430F100C0020CD84FF5C30F300000000000000003300000000340000350040003A411F3042450F100D0020D884FF5C30F300000000000000003300000000340000350040003A412A2D42460F100E0020E384FF5C30F300000000000000003300000000340000350040003A41333042480F100F0020EE84FF5C30F300000000000000003300000000340000350040003A41473042480F10100020F984FF5C30F300000000000000003300000000340000350040003A41253042470F101100200485FF5C30F300000000000000003300000000340000350040003A413830424A0F101200200F85FF5C30F300000000000000003300000000340000350040003A410A2E424B0F101300201A85FF5C30F300000000000000003300000000340000350040003A413630424B0F101400202585FF5C30F300000000000000003300000000340000350040003A413C30424F0F101500203085FF5C30F300000000000000003300000000340000350040003A41423042500F101600203B85FF5C30F300000000000000003300000000340000350040003A413C3042500F101700204685FF5C30F300000000000000003300000000340000350040003A41423042500F101800205185FF5C30F300000000000000003300000000340000350040003A414F3042500F101900205C85FF5C30F300000000000000003300000000340000350040003A413D3042510F101A00206785FF5C30F300000000000000003300000000340000350040003A412B3042520FA52D')

print(sdf)
print(bytes(sdf))
header = sdf[:3]
h = struct.unpack_from('<B', header, offset=0)[0]
len_pack = struct.unpack_from('<H', header, offset=1)[0]
length = len_pack & 0b0111111111111111
is_archive = len_pack & 0b1000000000000000 == 0b1000000000000000
# crc16 = struct.unpack('<H', sdf[len(sdf) - 2:])[0]
crc16 = struct.unpack('<H', sdf[-2:])[0]
is_crc = libscrc.modbus(sdf[:len(sdf) - 2]) == crc16
print(h, len_pack, length, is_archive, crc16, is_crc, '\n' + '-' * 80)
body = sdf[3:-2]
offset = 0
while offset < len(body):
    b = body[offset]
    tag = tags[b]
    value = tag.unpack(body, offset=offset + 1)
    offset += tag.size + 1
    print(b, value)


packet = Packet()
packet.add(1, 130)
packet.add(2, 16)
packet.add(3, b'862057047745531')
packet.add(0x04, 50)
assert packet.pack() == sdf
