"""
This module is home to the SecuritySettings class
"""
from pyecobee.ecobee_object import EcobeeObject


class SecuritySettings(EcobeeObject):
    """
    This class has been auto generated by scraping
    https://www.ecobee.com/home/developer/api/documentation/v1/objects/SecuritySettings.shtml

    Attribute names have been generated by converting ecobee property
    names from camelCase to snake_case.

    A getter property has been generated for each attribute.
    A setter property has been generated for each attribute whose value
    of READONLY is "no".

    An __init__ argument without a default value has been generated if
    the value of REQUIRED is "yes".
    An __init__ argument with a default value of None has been generated
    if the value of REQUIRED is "no".
    """

    __slots__ = [
        '_user_access_code',
        '_all_user_access',
        '_program_access',
        '_details_access',
        '_quick_save_access',
        '_vacation_access',
    ]

    attribute_name_map = {
        'user_access_code': 'userAccessCode',
        'userAccessCode': 'user_access_code',
        'all_user_access': 'allUserAccess',
        'allUserAccess': 'all_user_access',
        'program_access': 'programAccess',
        'programAccess': 'program_access',
        'details_access': 'detailsAccess',
        'detailsAccess': 'details_access',
        'quick_save_access': 'quickSaveAccess',
        'quickSaveAccess': 'quick_save_access',
        'vacation_access': 'vacationAccess',
        'vacationAccess': 'vacation_access',
    }

    attribute_type_map = {
        'user_access_code': 'six.text_type',
        'all_user_access': 'bool',
        'program_access': 'bool',
        'details_access': 'bool',
        'quick_save_access': 'bool',
        'vacation_access': 'bool',
    }

    def __init__(
        self,
        user_access_code=None,
        all_user_access=None,
        program_access=None,
        details_access=None,
        quick_save_access=None,
        vacation_access=None,
    ):
        """
        Construct a SecuritySettings instance
        """
        self._user_access_code = user_access_code
        self._all_user_access = all_user_access
        self._program_access = program_access
        self._details_access = details_access
        self._quick_save_access = quick_save_access
        self._vacation_access = vacation_access

    @property
    def user_access_code(self):
        """
        Gets the user_access_code attribute of this SecuritySettings
        instance.

        :return: The value of the user_access_code attribute of this
        SecuritySettings instance.
        :rtype: six.text_type
        """

        return self._user_access_code

    @user_access_code.setter
    def user_access_code(self, user_access_code):
        """
        Sets the user_access_code attribute of this SecuritySettings
        instance.

        :param user_access_code: The user_access_code value to set for
        the user_access_code attribute of this SecuritySettings
        instance.
        :type: six.text_type
        """

        self._user_access_code = user_access_code

    @property
    def all_user_access(self):
        """
        Gets the all_user_access attribute of this SecuritySettings
        instance.

        :return: The value of the all_user_access attribute of this
        SecuritySettings instance.
        :rtype: bool
        """

        return self._all_user_access

    @all_user_access.setter
    def all_user_access(self, all_user_access):
        """
        Sets the all_user_access attribute of this SecuritySettings
        instance.

        :param all_user_access: The all_user_access value to set for the
        all_user_access attribute of this SecuritySettings instance.
        :type: bool
        """

        self._all_user_access = all_user_access

    @property
    def program_access(self):
        """
        Gets the program_access attribute of this SecuritySettings
        instance.

        :return: The value of the program_access attribute of this
        SecuritySettings instance.
        :rtype: bool
        """

        return self._program_access

    @program_access.setter
    def program_access(self, program_access):
        """
        Sets the program_access attribute of this SecuritySettings
        instance.

        :param program_access: The program_access value to set for the
        program_access attribute of this SecuritySettings instance.
        :type: bool
        """

        self._program_access = program_access

    @property
    def details_access(self):
        """
        Gets the details_access attribute of this SecuritySettings
        instance.

        :return: The value of the details_access attribute of this
        SecuritySettings instance.
        :rtype: bool
        """

        return self._details_access

    @details_access.setter
    def details_access(self, details_access):
        """
        Sets the details_access attribute of this SecuritySettings
        instance.

        :param details_access: The details_access value to set for the
        details_access attribute of this SecuritySettings instance.
        :type: bool
        """

        self._details_access = details_access

    @property
    def quick_save_access(self):
        """
        Gets the quick_save_access attribute of this SecuritySettings
        instance.

        :return: The value of the quick_save_access attribute of this
        SecuritySettings instance.
        :rtype: bool
        """

        return self._quick_save_access

    @quick_save_access.setter
    def quick_save_access(self, quick_save_access):
        """
        Sets the quick_save_access attribute of this SecuritySettings
        instance.

        :param quick_save_access: The quick_save_access value to set for
        the quick_save_access attribute of this SecuritySettings
        instance.
        :type: bool
        """

        self._quick_save_access = quick_save_access

    @property
    def vacation_access(self):
        """
        Gets the vacation_access attribute of this SecuritySettings
        instance.

        :return: The value of the vacation_access attribute of this
        SecuritySettings instance.
        :rtype: bool
        """

        return self._vacation_access

    @vacation_access.setter
    def vacation_access(self, vacation_access):
        """
        Sets the vacation_access attribute of this SecuritySettings
        instance.

        :param vacation_access: The vacation_access value to set for the
        vacation_access attribute of this SecuritySettings instance.
        :type: bool
        """

        self._vacation_access = vacation_access
