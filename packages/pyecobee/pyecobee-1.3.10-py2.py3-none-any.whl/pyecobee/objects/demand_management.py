"""
This module is home to the DemandManagement class
"""
from pyecobee.ecobee_object import EcobeeObject


class DemandManagement(EcobeeObject):
    """
    This class has been auto generated by scraping
    https://www.ecobee.com/home/developer/api/documentation/v1/objects/DemandManagement.shtml

    Attribute names have been generated by converting ecobee property
    names from camelCase to snake_case.

    A getter property has been generated for each attribute.
    A setter property has been generated for each attribute whose value
    of READONLY is "no".

    An __init__ argument without a default value has been generated if
    the value of REQUIRED is "yes".
    An __init__ argument with a default value of None has been generated
    if the value of REQUIRED is "no".
    """

    __slots__ = ['_date', '_hour', '_temp_offsets']

    attribute_name_map = {
        'date': 'date',
        'hour': 'hour',
        'temp_offsets': 'tempOffsets',
        'tempOffsets': 'temp_offsets',
    }

    attribute_type_map = {
        'date': 'six.text_type',
        'hour': 'int',
        'temp_offsets': 'List[int]',
    }

    def __init__(self, date, hour, temp_offsets):
        """
        Construct a DemandManagement instance
        """
        self._date = date
        self._hour = hour
        self._temp_offsets = temp_offsets

    @property
    def date(self):
        """
        Gets the date attribute of this DemandManagement instance.

        :return: The value of the date attribute of this
        DemandManagement instance.
        :rtype: six.text_type
        """

        return self._date

    @date.setter
    def date(self, date):
        """
        Sets the date attribute of this DemandManagement instance.

        :param date: The date value to set for the date attribute of
        this DemandManagement instance.
        :type: six.text_type
        """

        self._date = date

    @property
    def hour(self):
        """
        Gets the hour attribute of this DemandManagement instance.

        :return: The value of the hour attribute of this
        DemandManagement instance.
        :rtype: int
        """

        return self._hour

    @hour.setter
    def hour(self, hour):
        """
        Sets the hour attribute of this DemandManagement instance.

        :param hour: The hour value to set for the hour attribute of
        this DemandManagement instance.
        :type: int
        """

        self._hour = hour

    @property
    def temp_offsets(self):
        """
        Gets the temp_offsets attribute of this DemandManagement
        instance.

        :return: The value of the temp_offsets attribute of this
        DemandManagement instance.
        :rtype: List[int]
        """

        return self._temp_offsets

    @temp_offsets.setter
    def temp_offsets(self, temp_offsets):
        """
        Sets the temp_offsets attribute of this DemandManagement
        instance.

        :param temp_offsets: The temp_offsets value to set for the
        temp_offsets attribute of this DemandManagement instance.
        :type: List[int]
        """

        self._temp_offsets = temp_offsets
