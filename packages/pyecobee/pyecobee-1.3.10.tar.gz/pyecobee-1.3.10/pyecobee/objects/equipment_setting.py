"""
This module is home to the EquipmentSetting class
"""
from pyecobee.ecobee_object import EcobeeObject


class EquipmentSetting(EcobeeObject):
    """
    This class has been auto generated by scraping
    https://www.ecobee.com/home/developer/api/documentation/v1/objects/EquipmentSetting.shtml

    Attribute names have been generated by converting ecobee property
    names from camelCase to snake_case.

    A getter property has been generated for each attribute.
    A setter property has been generated for each attribute whose value
    of READONLY is "no".

    An __init__ argument without a default value has been generated if
    the value of REQUIRED is "yes".
    An __init__ argument with a default value of None has been generated
    if the value of REQUIRED is "no".
    """

    __slots__ = [
        '_type',
        '_filter_last_changed',
        '_filter_life',
        '_filter_life_units',
        '_remind_me_date',
        '_enabled',
        '_remind_technician',
    ]

    attribute_name_map = {
        'type': 'type',
        'filter_last_changed': 'filterLastChanged',
        'filterLastChanged': 'filter_last_changed',
        'filter_life': 'filterLife',
        'filterLife': 'filter_life',
        'filter_life_units': 'filterLifeUnits',
        'filterLifeUnits': 'filter_life_units',
        'remind_me_date': 'remindMeDate',
        'remindMeDate': 'remind_me_date',
        'enabled': 'enabled',
        'remind_technician': 'remindTechnician',
        'remindTechnician': 'remind_technician',
    }

    attribute_type_map = {
        'type': 'six.text_type',
        'filter_last_changed': 'six.text_type',
        'filter_life': 'int',
        'filter_life_units': 'six.text_type',
        'remind_me_date': 'six.text_type',
        'enabled': 'bool',
        'remind_technician': 'bool',
    }

    def __init__(
        self,
        type_,
        filter_last_changed=None,
        filter_life=None,
        filter_life_units=None,
        remind_me_date=None,
        enabled=None,
        remind_technician=None,
    ):
        """
        Construct an EquipmentSetting instance
        """
        self._type = type_
        self._filter_last_changed = filter_last_changed
        self._filter_life = filter_life
        self._filter_life_units = filter_life_units
        self._remind_me_date = remind_me_date
        self._enabled = enabled
        self._remind_technician = remind_technician

    @property
    def type(self):
        """
        Gets the type attribute of this EquipmentSetting instance.

        :return: The value of the type attribute of this
        EquipmentSetting instance.
        :rtype: six.text_type
        """

        return self._type

    @property
    def filter_last_changed(self):
        """
        Gets the filter_last_changed attribute of this EquipmentSetting
        instance.

        :return: The value of the filter_last_changed attribute of this
        EquipmentSetting instance.
        :rtype: six.text_type
        """

        return self._filter_last_changed

    @filter_last_changed.setter
    def filter_last_changed(self, filter_last_changed):
        """
        Sets the filter_last_changed attribute of this EquipmentSetting
        instance.

        :param filter_last_changed: The filter_last_changed value to set
        for the filter_last_changed attribute of this EquipmentSetting
        instance.
        :type: six.text_type
        """

        self._filter_last_changed = filter_last_changed

    @property
    def filter_life(self):
        """
        Gets the filter_life attribute of this EquipmentSetting
        instance.

        :return: The value of the filter_life attribute of this
        EquipmentSetting instance.
        :rtype: int
        """

        return self._filter_life

    @filter_life.setter
    def filter_life(self, filter_life):
        """
        Sets the filter_life attribute of this EquipmentSetting
        instance.

        :param filter_life: The filter_life value to set for the
        filter_life attribute of this EquipmentSetting instance.
        :type: int
        """

        self._filter_life = filter_life

    @property
    def filter_life_units(self):
        """
        Gets the filter_life_units attribute of this EquipmentSetting
        instance.

        :return: The value of the filter_life_units attribute of this
        EquipmentSetting instance.
        :rtype: six.text_type
        """

        return self._filter_life_units

    @filter_life_units.setter
    def filter_life_units(self, filter_life_units):
        """
        Sets the filter_life_units attribute of this EquipmentSetting
        instance.

        :param filter_life_units: The filter_life_units value to set for
        the filter_life_units attribute of this EquipmentSetting
        instance.
        :type: six.text_type
        """

        self._filter_life_units = filter_life_units

    @property
    def remind_me_date(self):
        """
        Gets the remind_me_date attribute of this EquipmentSetting
        instance.

        :return: The value of the remind_me_date attribute of this
        EquipmentSetting instance.
        :rtype: six.text_type
        """

        return self._remind_me_date

    @property
    def enabled(self):
        """
        Gets the enabled attribute of this EquipmentSetting instance.

        :return: The value of the enabled attribute of this
        EquipmentSetting instance.
        :rtype: bool
        """

        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """
        Sets the enabled attribute of this EquipmentSetting instance.

        :param enabled: The enabled value to set for the enabled
        attribute of this EquipmentSetting instance.
        :type: bool
        """

        self._enabled = enabled

    @property
    def remind_technician(self):
        """
        Gets the remind_technician attribute of this EquipmentSetting
        instance.

        :return: The value of the remind_technician attribute of this
        EquipmentSetting instance.
        :rtype: bool
        """

        return self._remind_technician

    @remind_technician.setter
    def remind_technician(self, remind_technician):
        """
        Sets the remind_technician attribute of this EquipmentSetting
        instance.

        :param remind_technician: The remind_technician value to set for
        the remind_technician attribute of this EquipmentSetting
        instance.
        :type: bool
        """

        self._remind_technician = remind_technician
