"""
This module is home to the Function class
"""
from pyecobee.ecobee_object import EcobeeObject


class Function(EcobeeObject):
    """
    This class has been auto generated by scraping
    https://www.ecobee.com/home/developer/api/documentation/v1/objects/Function.shtml

    Attribute names have been generated by converting ecobee property
    names from camelCase to snake_case.

    A getter property has been generated for each attribute.
    A setter property has been generated for each attribute whose value
    of READONLY is "no".

    An __init__ argument without a default value has been generated if
    the value of REQUIRED is "yes".
    An __init__ argument with a default value of None has been generated
    if the value of REQUIRED is "no".
    """

    __slots__ = ['_type', '_params']

    attribute_name_map = {'type': 'type', 'params': 'params'}

    attribute_type_map = {
        'type': 'six.text_type',
        'params': 'Dict[six.text_type, object]',
    }

    def __init__(self, type_=None, params=None):
        """
        Construct a Function instance
        """
        self._type = type_
        self._params = params

    @property
    def type(self):
        """
        Gets the type attribute of this Function instance.

        :return: The value of the type attribute of this Function
        instance.
        :rtype: six.text_type
        """

        return self._type

    @type.setter
    def type(self, type_):
        """
        Sets the type attribute of this Function instance.

        :param type: The type value to set for the type attribute of
        this Function instance.
        :type: six.text_type
        """

        self._type = type_

    @property
    def params(self):
        """
        Gets the params attribute of this Function instance.

        :return: The value of the params attribute of this Function
        instance.
        :rtype: Dict[six.text_type, object]
        """

        return self._params

    @params.setter
    def params(self, params):
        """
        Sets the params attribute of this Function instance.

        :param params: The params value to set for the params attribute
        of this Function instance.
        :type: Dict[six.text_type, object]
        """

        self._params = params
