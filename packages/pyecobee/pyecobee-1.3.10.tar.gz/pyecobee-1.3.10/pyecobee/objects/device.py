"""
This module is home to the Device class
"""
from pyecobee.ecobee_object import EcobeeObject


class Device(EcobeeObject):
    """
    This class has been auto generated by scraping
    https://www.ecobee.com/home/developer/api/documentation/v1/objects/Device.shtml

    Attribute names have been generated by converting ecobee property
    names from camelCase to snake_case.

    A getter property has been generated for each attribute.
    A setter property has been generated for each attribute whose value
    of READONLY is "no".

    An __init__ argument without a default value has been generated if
    the value of REQUIRED is "yes".
    An __init__ argument with a default value of None has been generated
    if the value of REQUIRED is "no".
    """

    __slots__ = ['_device_id', '_name', '_sensors', '_outputs']

    attribute_name_map = {
        'device_id': 'deviceId',
        'deviceId': 'device_id',
        'name': 'name',
        'sensors': 'sensors',
        'outputs': 'outputs',
    }

    attribute_type_map = {
        'device_id': 'int',
        'name': 'six.text_type',
        'sensors': 'List[Sensor]',
        'outputs': 'List[Output]',
    }

    def __init__(self, device_id=None, name=None, sensors=None, outputs=None):
        """
        Construct a Device instance
        """
        self._device_id = device_id
        self._name = name
        self._sensors = sensors
        self._outputs = outputs

    @property
    def device_id(self):
        """
        Gets the device_id attribute of this Device instance.

        :return: The value of the device_id attribute of this Device
        instance.
        :rtype: int
        """

        return self._device_id

    @property
    def name(self):
        """
        Gets the name attribute of this Device instance.

        :return: The value of the name attribute of this Device
        instance.
        :rtype: six.text_type
        """

        return self._name

    @property
    def sensors(self):
        """
        Gets the sensors attribute of this Device instance.

        :return: The value of the sensors attribute of this Device
        instance.
        :rtype: List[Sensor]
        """

        return self._sensors

    @property
    def outputs(self):
        """
        Gets the outputs attribute of this Device instance.

        :return: The value of the outputs attribute of this Device
        instance.
        :rtype: List[Output]
        """

        return self._outputs
