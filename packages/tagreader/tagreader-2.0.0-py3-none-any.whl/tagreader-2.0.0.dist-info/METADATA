Metadata-Version: 2.1
Name: tagreader
Version: 2.0.0
Summary: Library for reading from Aspen InfoPlus.21 and OSIsoft PI IMS servers
Home-page: https://github.com/equinor/tagreader-python
Author: Einar S. IdsÃ¸
Author-email: eiids@equinor.com
License: MIT
Keywords: Aspen InfoPlus.21,OSIsoft PI
Platform: Windows
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: Microsoft :: Windows
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Topic :: Scientific/Engineering :: Interface Engine/Protocol Translator
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Utilities
Requires-Python: ~=3.6
Description-Content-Type: text/markdown
Requires-Dist: pandas (>=1.0.0)
Requires-Dist: tables
Requires-Dist: requests
Requires-Dist: requests-kerberos
Requires-Dist: pyodbc ; platform_system == "Windows"


# tagreader #

Tagreader is a Python package for reading trend data from the OSIsoft
PI and Aspen Infoplus.21 IMS systems. It is intended to be easy to use,
and present as similar as possible interfaces to the backend historians.

Queries can be performed using either ODBC or REST API queries. ODBC
queries require the installation of proprietary drivers from AspenTech
and OSIsoft.

Tagreader outputs trend data as Pandas Dataframes, and uses the HDF5
file format to cache results.

## Requirements ##
* Python >= 3.6 with the following packages:
  * pandas >= 1.0.0
  * pytables
  * pyodbc (if using ODBC connections)
  * requests (if using REST-API connections)
* If using ODBC connections, you must also install proprietary drivers for
PI ODBC and/or Aspen IP.21 SQLPlus. These drivers are only available for
Microsoft Windows.

## Installation ##
To install and/or upgrade:
```
pip install --upgrade tagreader
```

## Usage example ##
```
import tagreader
c = tagreader.IMSClient("mysource", "ip21")
print(c.search("mytag%"))
df = s.read_tags(["mytag_1", "mytag_2;with map"], "18.06.2020 08:00:00", "18.06.2020 09:00:00", 60)
```

Also see the [quickstart](https://github.com/equinor/tagreader-python/blob/master/docs/quickstart.ipynb) document at gitlab.


