#pylint: skip-file
# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'data/ui/manager/ui_new_repo_wizard.ui'
#
# Created by: PyQt5 UI code generator 5.7
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_Wizard(object):
    def setupUi(self, Wizard):
        Wizard.setObjectName("Wizard")
        Wizard.resize(559, 504)
        self.page_type = QtWidgets.QWizardPage()
        self.page_type.setObjectName("page_type")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.page_type)
        self.verticalLayout.setObjectName("verticalLayout")
        self.radioButton = QtWidgets.QRadioButton(self.page_type)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.radioButton.setFont(font)
        self.radioButton.setChecked(True)
        self.radioButton.setObjectName("radioButton")
        self.verticalLayout.addWidget(self.radioButton)
        self.label_2 = QtWidgets.QLabel(self.page_type)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_2.sizePolicy().hasHeightForWidth())
        self.label_2.setSizePolicy(sizePolicy)
        self.label_2.setWordWrap(True)
        self.label_2.setObjectName("label_2")
        self.verticalLayout.addWidget(self.label_2)
        self.radioButton_2 = QtWidgets.QRadioButton(self.page_type)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.radioButton_2.setFont(font)
        self.radioButton_2.setObjectName("radioButton_2")
        self.verticalLayout.addWidget(self.radioButton_2)
        self.label_3 = QtWidgets.QLabel(self.page_type)
        self.label_3.setObjectName("label_3")
        self.verticalLayout.addWidget(self.label_3)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout.addItem(spacerItem)
        Wizard.addPage(self.page_type)
        self.page_local_select_directory = QtWidgets.QWizardPage()
        self.page_local_select_directory.setObjectName("page_local_select_directory")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.page_local_select_directory)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.label = QtWidgets.QLabel(self.page_local_select_directory)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        self.label.setWordWrap(True)
        self.label.setObjectName("label")
        self.verticalLayout_3.addWidget(self.label)
        self.formLayout_2 = QtWidgets.QFormLayout()
        self.formLayout_2.setObjectName("formLayout_2")
        self.label_4 = QtWidgets.QLabel(self.page_local_select_directory)
        self.label_4.setObjectName("label_4")
        self.formLayout_2.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_4)
        self.directory = QtWidgets.QLineEdit(self.page_local_select_directory)
        self.directory.setObjectName("directory")
        self.formLayout_2.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.directory)
        self.verticalLayout_3.addLayout(self.formLayout_2)
        self.groupBox = QtWidgets.QGroupBox(self.page_local_select_directory)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox.sizePolicy().hasHeightForWidth())
        self.groupBox.setSizePolicy(sizePolicy)
        self.groupBox.setObjectName("groupBox")
        self.formLayout = QtWidgets.QFormLayout(self.groupBox)
        self.formLayout.setObjectName("formLayout")
        self.label_5 = QtWidgets.QLabel(self.groupBox)
        self.label_5.setObjectName("label_5")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_5)
        self.label_6 = QtWidgets.QLabel(self.groupBox)
        self.label_6.setObjectName("label_6")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_6)
        self.label_7 = QtWidgets.QLabel(self.groupBox)
        self.label_7.setObjectName("label_7")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_7)
        self.label_8 = QtWidgets.QLabel(self.groupBox)
        self.label_8.setObjectName("label_8")
        self.formLayout.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_8)
        self.device_info_type = QtWidgets.QLineEdit(self.groupBox)
        self.device_info_type.setReadOnly(True)
        self.device_info_type.setObjectName("device_info_type")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.device_info_type)
        self.device_info_size = QtWidgets.QLineEdit(self.groupBox)
        self.device_info_size.setReadOnly(True)
        self.device_info_size.setObjectName("device_info_size")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.device_info_size)
        self.device_info_partition_size = QtWidgets.QLineEdit(self.groupBox)
        self.device_info_partition_size.setReadOnly(True)
        self.device_info_partition_size.setObjectName("device_info_partition_size")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.device_info_partition_size)
        self.device_info_free_space = QtWidgets.QLineEdit(self.groupBox)
        self.device_info_free_space.setReadOnly(True)
        self.device_info_free_space.setObjectName("device_info_free_space")
        self.formLayout.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.device_info_free_space)
        self.verticalLayout_3.addWidget(self.groupBox)
        self.groupBox_2 = QtWidgets.QGroupBox(self.page_local_select_directory)
        self.groupBox_2.setObjectName("groupBox_2")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.groupBox_2)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.label_20 = QtWidgets.QLabel(self.groupBox_2)
        self.label_20.setWordWrap(True)
        self.label_20.setObjectName("label_20")
        self.verticalLayout_4.addWidget(self.label_20)
        self.checkBox = QtWidgets.QCheckBox(self.groupBox_2)
        self.checkBox.setObjectName("checkBox")
        self.verticalLayout_4.addWidget(self.checkBox)
        self.verticalLayout_3.addWidget(self.groupBox_2)
        Wizard.addPage(self.page_local_select_directory)
        self.page_remote_configure = QtWidgets.QWizardPage()
        self.page_remote_configure.setObjectName("page_remote_configure")
        self.formLayout_3 = QtWidgets.QFormLayout(self.page_remote_configure)
        self.formLayout_3.setObjectName("formLayout_3")
        self.label_12 = QtWidgets.QLabel(self.page_remote_configure)
        self.label_12.setObjectName("label_12")
        self.formLayout_3.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_12)
        self.ssh_host = QtWidgets.QLineEdit(self.page_remote_configure)
        self.ssh_host.setObjectName("ssh_host")
        self.formLayout_3.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.ssh_host)
        self.label_9 = QtWidgets.QLabel(self.page_remote_configure)
        self.label_9.setObjectName("label_9")
        self.formLayout_3.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_9)
        self.ssh_user = QtWidgets.QLineEdit(self.page_remote_configure)
        self.ssh_user.setClearButtonEnabled(True)
        self.ssh_user.setObjectName("ssh_user")
        self.formLayout_3.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.ssh_user)
        self.label_11 = QtWidgets.QLabel(self.page_remote_configure)
        self.label_11.setObjectName("label_11")
        self.formLayout_3.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_11)
        self.ssh_port = QtWidgets.QSpinBox(self.page_remote_configure)
        self.ssh_port.setMinimum(1)
        self.ssh_port.setMaximum(65535)
        self.ssh_port.setProperty("value", 22)
        self.ssh_port.setObjectName("ssh_port")
        self.formLayout_3.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.ssh_port)
        self.label_13 = QtWidgets.QLabel(self.page_remote_configure)
        self.label_13.setObjectName("label_13")
        self.formLayout_3.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_13)
        self.ssh_identity_file = QtWidgets.QLineEdit(self.page_remote_configure)
        self.ssh_identity_file.setClearButtonEnabled(True)
        self.ssh_identity_file.setObjectName("ssh_identity_file")
        self.formLayout_3.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.ssh_identity_file)
        self.label_10 = QtWidgets.QLabel(self.page_remote_configure)
        self.label_10.setObjectName("label_10")
        self.formLayout_3.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.label_10)
        self.ssh_remote_path = QtWidgets.QLineEdit(self.page_remote_configure)
        self.ssh_remote_path.setObjectName("ssh_remote_path")
        self.formLayout_3.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.ssh_remote_path)
        self.label_14 = QtWidgets.QLabel(self.page_remote_configure)
        self.label_14.setObjectName("label_14")
        self.formLayout_3.setWidget(5, QtWidgets.QFormLayout.LabelRole, self.label_14)
        self.ssh_remote_port = QtWidgets.QLineEdit(self.page_remote_configure)
        self.ssh_remote_port.setClearButtonEnabled(True)
        self.ssh_remote_port.setObjectName("ssh_remote_port")
        self.formLayout_3.setWidget(5, QtWidgets.QFormLayout.FieldRole, self.ssh_remote_port)
        self.label_15 = QtWidgets.QLabel(self.page_remote_configure)
        self.label_15.setObjectName("label_15")
        self.formLayout_3.setWidget(6, QtWidgets.QFormLayout.LabelRole, self.label_15)
        self.ssh_command_line = QtWidgets.QLineEdit(self.page_remote_configure)
        self.ssh_command_line.setReadOnly(True)
        self.ssh_command_line.setObjectName("ssh_command_line")
        self.formLayout_3.setWidget(6, QtWidgets.QFormLayout.FieldRole, self.ssh_command_line)
        self.test_connection = QtWidgets.QPushButton(self.page_remote_configure)
        self.test_connection.setObjectName("test_connection")
        self.formLayout_3.setWidget(7, QtWidgets.QFormLayout.FieldRole, self.test_connection)
        Wizard.addPage(self.page_remote_configure)
        self.page_pruning = QtWidgets.QWizardPage()
        self.page_pruning.setObjectName("page_pruning")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.page_pruning)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.label_21 = QtWidgets.QLabel(self.page_pruning)
        self.label_21.setWordWrap(True)
        self.label_21.setObjectName("label_21")
        self.verticalLayout_5.addWidget(self.label_21)
        self.checkBox_3 = QtWidgets.QCheckBox(self.page_pruning)
        self.checkBox_3.setObjectName("checkBox_3")
        self.verticalLayout_5.addWidget(self.checkBox_3)
        self.widget = PruneWidget(self.page_pruning)
        self.widget.setObjectName("widget")
        self.verticalLayout_5.addWidget(self.widget)
        self.widget.raise_()
        self.checkBox_3.raise_()
        self.label_2.raise_()
        Wizard.addPage(self.page_pruning)
        self.page_encryption = QtWidgets.QWizardPage()
        self.page_encryption.setObjectName("page_encryption")
        self.formLayout_4 = QtWidgets.QFormLayout(self.page_encryption)
        self.formLayout_4.setObjectName("formLayout_4")
        self.label_17 = QtWidgets.QLabel(self.page_encryption)
        self.label_17.setObjectName("label_17")
        self.formLayout_4.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_17)
        self.encryption_mode = QtWidgets.QComboBox(self.page_encryption)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.encryption_mode.sizePolicy().hasHeightForWidth())
        self.encryption_mode.setSizePolicy(sizePolicy)
        self.encryption_mode.setObjectName("encryption_mode")
        self.encryption_mode.addItem("")
        self.encryption_mode.addItem("")
        self.encryption_mode.addItem("")
        self.formLayout_4.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.encryption_mode)
        self.label_18 = QtWidgets.QLabel(self.page_encryption)
        self.label_18.setObjectName("label_18")
        self.formLayout_4.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_18)
        self.encryption_passphrase = QtWidgets.QLineEdit(self.page_encryption)
        self.encryption_passphrase.setEchoMode(QtWidgets.QLineEdit.Password)
        self.encryption_passphrase.setClearButtonEnabled(False)
        self.encryption_passphrase.setObjectName("encryption_passphrase")
        self.formLayout_4.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.encryption_passphrase)
        self.encryption_save_passphrase = QtWidgets.QCheckBox(self.page_encryption)
        self.encryption_save_passphrase.setObjectName("encryption_save_passphrase")
        self.formLayout_4.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.encryption_save_passphrase)
        self.label_19 = QtWidgets.QLabel(self.page_encryption)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_19.sizePolicy().hasHeightForWidth())
        self.label_19.setSizePolicy(sizePolicy)
        self.label_19.setWordWrap(True)
        self.label_19.setObjectName("label_19")
        self.formLayout_4.setWidget(3, QtWidgets.QFormLayout.SpanningRole, self.label_19)
        Wizard.addPage(self.page_encryption)
        self.page_finish = QtWidgets.QWizardPage()
        self.page_finish.setObjectName("page_finish")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.page_finish)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label_16 = QtWidgets.QLabel(self.page_finish)
        self.label_16.setWordWrap(True)
        self.label_16.setObjectName("label_16")
        self.verticalLayout_2.addWidget(self.label_16)
        self.plainTextEdit = QtWidgets.QPlainTextEdit(self.page_finish)
        font = QtGui.QFont()
        font.setFamily("Monospace")
        self.plainTextEdit.setFont(font)
        self.plainTextEdit.setLineWrapMode(QtWidgets.QPlainTextEdit.NoWrap)
        self.plainTextEdit.setReadOnly(True)
        self.plainTextEdit.setObjectName("plainTextEdit")
        self.verticalLayout_2.addWidget(self.plainTextEdit)
        Wizard.addPage(self.page_finish)

        self.retranslateUi(Wizard)
        self.encryption_mode.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(Wizard)

    def retranslateUi(self, Wizard):
        _translate = QtCore.QCoreApplication.translate
        Wizard.setWindowTitle(_translate("Wizard", "Wizard"))
        self.page_type.setTitle(_translate("Wizard", "New repository"))
        self.page_type.setSubTitle(_translate("Wizard", "Select the type of the repository you want to create. If in doubt, a local directory will be the choice you want."))
        self.radioButton.setText(_translate("Wizard", "&Local directory or device"))
        self.label_2.setText(_translate("Wizard", "<html><head/><body><p>A folder which is on a local device, no network involved.</p></body></html>"))
        self.radioButton_2.setText(_translate("Wizard", "Remote server"))
        self.label_3.setText(_translate("Wizard", "<html><head/><body><p>A folder on a server accessible via SSH (SFTP is <span style=\" font-style:italic;\">not</span> sufficient).</p></body></html>"))
        self.page_local_select_directory.setTitle(_translate("Wizard", "Local device"))
        self.page_local_select_directory.setSubTitle(_translate("Wizard", "Select the device and the directory on the device to use."))
        self.label.setText(_translate("Wizard", "<html><head/><body><p>If the device you want to store backups on is removable, connect it now.</p></body></html>"))
        self.label_4.setText(_translate("Wizard", "Directory"))
        self.groupBox.setTitle(_translate("Wizard", "Device information"))
        self.label_5.setText(_translate("Wizard", "Type"))
        self.label_6.setText(_translate("Wizard", "Size"))
        self.label_7.setText(_translate("Wizard", "Partition size"))
        self.label_8.setText(_translate("Wizard", "Free space"))
        self.groupBox_2.setTitle(_translate("Wizard", "Removable device settings"))
        self.label_20.setText(_translate("Wizard", "<html><head/><body><p><span style=\" font-weight:600;\">Note:</span> If the device is not connected when the backup is supposed to run, a notification will inform you that you should plug the device in. Once the device is plugged in, the jobs affecting the device will be scheduled.</p></body></html>"))
        self.checkBox.setToolTip(_translate("Wizard", "<html><head/><body><p>When checked, jobs which are scheduled for the interval during which the device is plugged in are run immediately (with short grace period) instead of at their scheduled time. This is handy for daily backup jobs: simply plug in the device and <span style=\" font-style:italic;\">cuteborg</span> will do its duty.</p></body></html>"))
        self.checkBox.setText(_translate("Wizard", "Allow to run jobs early when the device is being plugged in"))
        self.page_remote_configure.setTitle(_translate("Wizard", "Remote repository"))
        self.page_remote_configure.setSubTitle(_translate("Wizard", "Configure the connection to the remote repository."))
        self.label_12.setText(_translate("Wizard", "Host name"))
        self.label_9.setText(_translate("Wizard", "User"))
        self.label_11.setText(_translate("Wizard", "Port"))
        self.label_13.setText(_translate("Wizard", "Identity file"))
        self.label_10.setText(_translate("Wizard", "Path"))
        self.label_14.setText(_translate("Wizard", "Remote borg executable"))
        self.label_15.setText(_translate("Wizard", "SSH command line"))
        self.test_connection.setText(_translate("Wizard", "Test connection"))
        self.page_pruning.setTitle(_translate("Wizard", "Pruning"))
        self.page_pruning.setSubTitle(_translate("Wizard", "Borg can automatically manage the amount of archives kept. Use the following settings to control the behaviour."))
        self.label_21.setText(_translate("Wizard", "<html><head/><body><p><span style=\" font-weight:600;\">Note:</span> If you choose to use the global settings with the box below, changes to the global settings made <span style=\" font-style:italic;\">after</span> the repository is created will be applied to the repository, too. If you simply want to copy the global settings without future changes to the global settings affecting the repository, uncheck the box below.</p></body></html>"))
        self.checkBox_3.setText(_translate("Wizard", "Use global settings"))
        self.page_encryption.setTitle(_translate("Wizard", "Encryption"))
        self.page_encryption.setSubTitle(_translate("Wizard", "Enable encryption for the repository."))
        self.label_17.setText(_translate("Wizard", "Encryption mode"))
        self.encryption_mode.setItemText(0, _translate("Wizard", "No encryption"))
        self.encryption_mode.setItemText(1, _translate("Wizard", "Save protected key in repository"))
        self.encryption_mode.setItemText(2, _translate("Wizard", "Save protected key only locally"))
        self.label_18.setText(_translate("Wizard", "Passphrase"))
        self.encryption_save_passphrase.setText(_translate("Wizard", "Save passphrase in local keyring"))
        self.label_19.setText(_translate("Wizard", "<html><head/><body><h3>Explanation of the modes</h3><p><span style=\" font-weight:600;\">No encryption:</span> All data is stored without encryption.</p><p>The following options enable client-side encryption: The server never sees file names or file contents in plain-text.</p><p><span style=\" font-weight:600;\">Save protected key in repository:</span> The key is stored inside the repository (in its “config” file). Use this mode if you trust in your good passphrase giving you enough protection. The repository server never sees the plaintext key. This has the advantage that if your local system is unusable, you can still recover using remote repositories with this option.</p><p><span style=\" font-weight:600;\">Save protected key only locally: </span>The key is stored on your local disk (in <span style=\" font-family:\'DejaVu Sans Mono\';\">~/.config/borg/keys/</span>). Use this mode if you want “passphrase and having-the-key” security. <span style=\" font-style:italic;\">Note</span>: If you loose the key stored locally, you cannot recover data from the repository.</p></body></html>"))
        self.page_finish.setTitle(_translate("Wizard", "Finished!"))
        self.page_finish.setSubTitle(_translate("Wizard", "The configuration is finished."))
        self.label_16.setText(_translate("Wizard", "If needed, you can make modifications to the repository configuration below. In case of doubt, simply click continue."))

from qtborg.prune_widget import PruneWidget
