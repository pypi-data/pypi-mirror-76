# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from admobilize.proto.query.v1alpha1 import query_service_pb2 as admobilize_dot_query_dot_v1alpha1_dot_query__service__pb2
from admobilize.proto.query.v1alpha1 import resources_pb2 as admobilize_dot_query_dot_v1alpha1_dot_resources__pb2


class QueryServiceStub(object):
    """Wrapper over BigQuery to abstract and isolate the infrastructure internal
    organization.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateProjectDataset = channel.unary_unary(
                '/admobilize.query.v1alpha1.QueryService/CreateProjectDataset',
                request_serializer=admobilize_dot_query_dot_v1alpha1_dot_query__service__pb2.CreateProjectDatasetRequest.SerializeToString,
                response_deserializer=admobilize_dot_query_dot_v1alpha1_dot_resources__pb2.Project.FromString,
                )
        self.Query = channel.unary_unary(
                '/admobilize.query.v1alpha1.QueryService/Query',
                request_serializer=admobilize_dot_query_dot_v1alpha1_dot_query__service__pb2.QueryRequest.SerializeToString,
                response_deserializer=admobilize_dot_query_dot_v1alpha1_dot_query__service__pb2.QueryResponse.FromString,
                )
        self.ListTables = channel.unary_unary(
                '/admobilize.query.v1alpha1.QueryService/ListTables',
                request_serializer=admobilize_dot_query_dot_v1alpha1_dot_query__service__pb2.ListTablesRequest.SerializeToString,
                response_deserializer=admobilize_dot_query_dot_v1alpha1_dot_query__service__pb2.ListTablesResponse.FromString,
                )
        self.GetTableSchema = channel.unary_unary(
                '/admobilize.query.v1alpha1.QueryService/GetTableSchema',
                request_serializer=admobilize_dot_query_dot_v1alpha1_dot_query__service__pb2.GetTableSchemaRequest.SerializeToString,
                response_deserializer=admobilize_dot_query_dot_v1alpha1_dot_query__service__pb2.GetTableSchemaResponse.FromString,
                )
        self.GetReport = channel.unary_unary(
                '/admobilize.query.v1alpha1.QueryService/GetReport',
                request_serializer=admobilize_dot_query_dot_v1alpha1_dot_query__service__pb2.GetReportRequest.SerializeToString,
                response_deserializer=admobilize_dot_query_dot_v1alpha1_dot_query__service__pb2.GetReportResponse.FromString,
                )


class QueryServiceServicer(object):
    """Wrapper over BigQuery to abstract and isolate the infrastructure internal
    organization.
    """

    def CreateProjectDataset(self, request, context):
        """Creates a new dataset on BigQuery for a given project
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Query(self, request, context):
        """Execute query synchronously and return the results.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListTables(self, request, context):
        """List availabe tables given a project name.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTableSchema(self, request, context):
        """List table schema.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetReport(self, request, context):
        """Execute query and returns a report file.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QueryServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateProjectDataset': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateProjectDataset,
                    request_deserializer=admobilize_dot_query_dot_v1alpha1_dot_query__service__pb2.CreateProjectDatasetRequest.FromString,
                    response_serializer=admobilize_dot_query_dot_v1alpha1_dot_resources__pb2.Project.SerializeToString,
            ),
            'Query': grpc.unary_unary_rpc_method_handler(
                    servicer.Query,
                    request_deserializer=admobilize_dot_query_dot_v1alpha1_dot_query__service__pb2.QueryRequest.FromString,
                    response_serializer=admobilize_dot_query_dot_v1alpha1_dot_query__service__pb2.QueryResponse.SerializeToString,
            ),
            'ListTables': grpc.unary_unary_rpc_method_handler(
                    servicer.ListTables,
                    request_deserializer=admobilize_dot_query_dot_v1alpha1_dot_query__service__pb2.ListTablesRequest.FromString,
                    response_serializer=admobilize_dot_query_dot_v1alpha1_dot_query__service__pb2.ListTablesResponse.SerializeToString,
            ),
            'GetTableSchema': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTableSchema,
                    request_deserializer=admobilize_dot_query_dot_v1alpha1_dot_query__service__pb2.GetTableSchemaRequest.FromString,
                    response_serializer=admobilize_dot_query_dot_v1alpha1_dot_query__service__pb2.GetTableSchemaResponse.SerializeToString,
            ),
            'GetReport': grpc.unary_unary_rpc_method_handler(
                    servicer.GetReport,
                    request_deserializer=admobilize_dot_query_dot_v1alpha1_dot_query__service__pb2.GetReportRequest.FromString,
                    response_serializer=admobilize_dot_query_dot_v1alpha1_dot_query__service__pb2.GetReportResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'admobilize.query.v1alpha1.QueryService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class QueryService(object):
    """Wrapper over BigQuery to abstract and isolate the infrastructure internal
    organization.
    """

    @staticmethod
    def CreateProjectDataset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/admobilize.query.v1alpha1.QueryService/CreateProjectDataset',
            admobilize_dot_query_dot_v1alpha1_dot_query__service__pb2.CreateProjectDatasetRequest.SerializeToString,
            admobilize_dot_query_dot_v1alpha1_dot_resources__pb2.Project.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Query(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/admobilize.query.v1alpha1.QueryService/Query',
            admobilize_dot_query_dot_v1alpha1_dot_query__service__pb2.QueryRequest.SerializeToString,
            admobilize_dot_query_dot_v1alpha1_dot_query__service__pb2.QueryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListTables(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/admobilize.query.v1alpha1.QueryService/ListTables',
            admobilize_dot_query_dot_v1alpha1_dot_query__service__pb2.ListTablesRequest.SerializeToString,
            admobilize_dot_query_dot_v1alpha1_dot_query__service__pb2.ListTablesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTableSchema(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/admobilize.query.v1alpha1.QueryService/GetTableSchema',
            admobilize_dot_query_dot_v1alpha1_dot_query__service__pb2.GetTableSchemaRequest.SerializeToString,
            admobilize_dot_query_dot_v1alpha1_dot_query__service__pb2.GetTableSchemaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/admobilize.query.v1alpha1.QueryService/GetReport',
            admobilize_dot_query_dot_v1alpha1_dot_query__service__pb2.GetReportRequest.SerializeToString,
            admobilize_dot_query_dot_v1alpha1_dot_query__service__pb2.GetReportResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
