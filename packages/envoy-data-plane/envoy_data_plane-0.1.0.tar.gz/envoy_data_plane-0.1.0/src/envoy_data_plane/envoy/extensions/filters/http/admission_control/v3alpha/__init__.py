# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/filters/http/admission_control/v3alpha/admission_control.proto
# plugin: python-betterproto
from dataclasses import dataclass
from datetime import timedelta
from typing import List

import betterproto

from ......config.core import v3 as _____config_core_v3__
from ......type import v3 as _____type_v3__


@dataclass
class AdmissionControl(betterproto.Message):
    # If set to false, the admission control filter will operate as a pass-
    # through filter. If the message is unspecified, the filter will be enabled.
    enabled: _____config_core_v3__.RuntimeFeatureFlag = betterproto.message_field(1)
    success_criteria: "AdmissionControlSuccessCriteria" = betterproto.message_field(
        2, group="evaluation_criteria"
    )
    # The sliding time window over which the success rate is calculated. The
    # window is rounded to the nearest second. Defaults to 120s.
    sampling_window: timedelta = betterproto.message_field(3)
    # Rejection probability is defined by the formula::     max(0, (rq_count -
    # aggression_coefficient * rq_success_count) / (rq_count + 1)) The
    # coefficient dictates how aggressively the admission controller will
    # throttle requests as the success rate drops. Lower values will cause
    # throttling to kick in at higher success rates and result in more aggressive
    # throttling. Any values less than 1.0, will be set to 1.0. If the message is
    # unspecified, the coefficient is 2.0.
    aggression_coefficient: _____config_core_v3__.RuntimeDouble = betterproto.message_field(
        4
    )


@dataclass
class AdmissionControlSuccessCriteria(betterproto.Message):
    """
    Default method of specifying what constitutes a successful request. All
    status codes that indicate a successful request must be explicitly
    specified if not relying on the default values.
    """

    # If HTTP criteria are unspecified, all HTTP status codes below 500 are
    # treated as successful responses. .. note::    The default HTTP codes
    # considered successful by the admission controller are done so due    to the
    # unlikelihood that sending fewer requests would change their behavior (for
    # example:    redirects, unauthorized access, or bad requests won't be
    # alleviated by sending less    traffic).
    http_criteria: "AdmissionControlSuccessCriteriaHttpCriteria" = betterproto.message_field(
        1
    )
    # GRPC status codes to consider as request successes. If unspecified,
    # defaults to: Ok, Cancelled, Unknown, InvalidArgument, NotFound,
    # AlreadyExists, Unauthenticated, FailedPrecondition, OutOfRange,
    # PermissionDenied, and Unimplemented. .. note::    The default gRPC codes
    # that are considered successful by the admission controller are    chosen
    # because of the unlikelihood that sending fewer requests will change the
    # behavior.
    grpc_criteria: "AdmissionControlSuccessCriteriaGrpcCriteria" = betterproto.message_field(
        2
    )


@dataclass
class AdmissionControlSuccessCriteriaHttpCriteria(betterproto.Message):
    # Status code ranges that constitute a successful request. Configurable codes
    # are in the range [100, 600).
    http_success_status: List[_____type_v3__.Int32Range] = betterproto.message_field(1)


@dataclass
class AdmissionControlSuccessCriteriaGrpcCriteria(betterproto.Message):
    # Status codes that constitute a successful request. Mappings can be found
    # at: https://github.com/grpc/grpc/blob/master/doc/statuscodes.md.
    grpc_success_status: List[int] = betterproto.uint32_field(1)
