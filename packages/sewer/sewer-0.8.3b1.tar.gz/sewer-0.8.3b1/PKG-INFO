Metadata-Version: 2.1
Name: sewer
Version: 0.8.3b1
Summary: Sewer is a programmatic Lets Encrypt(ACME) client
Home-page: https://github.com/komuw/sewer
Author: komuW
Author-email: komuw05@gmail.com
Maintainer: mmaney
License: MIT
Description: ## Sewer          
        
        [![Codacy Badge](https://api.codacy.com/project/badge/Grade/ccf655afb3974e9698025cbb65949aa2)](https://www.codacy.com/app/komuW/sewer?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=komuW/sewer&amp;utm_campaign=Badge_Grade)
        [![CircleCI](https://circleci.com/gh/komuw/sewer.svg?style=svg)](https://circleci.com/gh/komuw/sewer)
        [![codecov](https://codecov.io/gh/komuW/sewer/branch/master/graph/badge.svg)](https://codecov.io/gh/komuW/sewer)
        [![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/komuw/sewer)
        
        
        Sewer is a Let's Encrypt(ACME) client.  
        It's name is derived from Kenyan hip hop artiste, Kitu Sewer.  
        
        - The current release is [0.8.3](https://komuw.github.io/sewer/notes/0.8.3-notes).
        - More history in the [CHANGELOG](https://komuw.github.io/sewer/CHANGELOG).
        
        > **NB:** sewer is mostly compatible with CPython back to 3.5, but f-strings
        in particular keep trying to creep in.  As of 0.8.3 none of the core code
        nor included drivers require f-strings, but they've been showing up in
        recent contributions and are already in a fair bit of test code.  _Expect to
        need at least 3.6+ for sewer 0.9._ I would prefer to maintain 3.5
        compatibility until then, but it's not currently tested in CI.  I will be
        happy to accept patches for any issues that show up.  â€” @mmaney
        
        ## Features
        - Obtain or renew SSL/TLS certificates from [Let's Encrypt](https://letsencrypt.org)
        - Supports acme version 2 (current RFC including post-as-get).
        - Support for SAN certificates.
        - Supports [wildcard certificates](https://komuw.github.io/sewer/wildcards).
        - Bundling certificates.
        - Supports [DNS and HTTP](https://komuw.github.io/sewer/UnifiedProvider) challenges
          - List of currently supported
            [DNS services and BYO-service notes](https://komuw.github.io/sewer/dns-01)
          - HTTP challenges are a new feature, no operational drivers in the tree
            yet.  [See usage and BYO-service notes](https://komuw.github.io/sewer/http-01)
        - sewer is both a [command-line program](https://komuw.github.io/sewer/sewer-cli)
          and a [Python library](https://komuw.github.io/sewer/sewer-as-a-library) for custom use
        - Well written(if I have to say so myself):
          - [Good test coverage](https://codecov.io/gh/komuW/sewer)
          - [Passing continuous integration](https://circleci.com/gh/komuW/sewer)
          - [High grade statically analyzed code](https://www.codacy.com/app/komuW/sewer/dashboard)
          - type hinting to support mypy verification is a recently begun WIP
        
        ## Installation
        
        ```shell
        pip3 install sewer
        
        # with All DNS Provider support, include aliyun, Hurricane Electric, Aurora, ACME ...
        # pip3 install sewer[alldns]
        
        # with Cloudflare support
        # pip3 install sewer[cloudflare]
        
        # with Aliyun support
        # pip3 install sewer[aliyun]
        
        # with HE DNS(Hurricane Electric DNS) support
        # pip3 install sewer[hurricane]
        
        # with Aurora DNS Support
        # pip3 install sewer[aurora]
        
        # with ACME DNS Support
        # pip3 install sewer[acmedns]
        
        # with Rackspace DNS Support
        # pip3 install sewer[rackspace]
        
        # with DNSPod DNS Support
        # pip3 install sewer[dnspod]
        
        # with DuckDNS DNS Support
        # pip3 install sewer[duckdns]
        
        # with ClouDNS DNS Support
        # pip3 install sewer[cloudns]
        
        # with AWS Route 53 DNS Support
        # pip3 install sewer[route53]
        
        # with PowerDNS DNS Support
        # pip3 install sewer[powerdns]
        ```
        
        sewer(since version 0.5.0) is now python3 only. To install the (now unsupported) python2 version, run;
        
        ```shell
        pip install sewer==0.3.0
        ```
        Sewer is in active development and it's API ~~may~~ will change in backward incompatible ways.
        [https://pypi.python.org/pypi/sewer](https://pypi.python.org/pypi/sewer)
        
        ## Development setup
        
        See the how to contribute [documentation](https://github.com/komuw/sewer/blob/master/.github/CONTRIBUTING.md)
        
        ## FAQ
        - Why another ACME client?          
          I wanted an ACME client that I could use to programmatically(as a library) acquire/get certificates. However I could not 
          find anything satisfactory for use in Python code.
        - Why is it called Sewer?
          I really like the Kenyan hip hop artiste going by the name of Kitu Sewer.                            
        
Keywords: letsencrypt,ACME,dns-01,http-01,RFC8555
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Build Tools
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Security
Classifier: Topic :: System :: Installation/Setup
Classifier: Topic :: System :: Networking
Classifier: Topic :: System :: Systems Administration
Classifier: Topic :: Utilities
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Description-Content-Type: text/markdown
Provides-Extra: acmedns
Provides-Extra: duckdns
Provides-Extra: dev
Provides-Extra: aliyun
Provides-Extra: dnspod
Provides-Extra: rackspace
Provides-Extra: aurora
Provides-Extra: alldns
Provides-Extra: test
Provides-Extra: cloudns
Provides-Extra: cloudflare
Provides-Extra: route53
Provides-Extra: unbound_ssh
Provides-Extra: hurricane
Provides-Extra: gandi
Provides-Extra: powerdns
