# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['confused_argparse']

package_data = \
{'': ['*']}

setup_kwargs = {
    'name': 'confused-argparse',
    'version': '0.2.2',
    'description': "'My standard' goto package for all my scripts/apps. Get argparse cli and configuration management in ONE LINE per parameter ;-)",
    'long_description': '# confused-argparse\n\n[![Build Status](https://travis-ci.com/cruisen/confused-argparse.svg?branch=master)](https://travis-ci.com/cruisen/confused-argparse)\n[![Coverage](https://coveralls.io/repos/github/cruisen/confused-argparse/badge.svg?branch=master)](https://coveralls.io/github/cruisen/confused-argparse?branch=master)\n[![Python Version](https://img.shields.io/pypi/pyversions/confused-argparse.svg)](https://pypi.org/project/confused-argparse/)\n[![wemake-python-styleguide](https://img.shields.io/badge/style-wemake-000000.svg)](https://github.com/wemake-services/wemake-python-styleguide)\n\n> Note: VERY Beta, please wait for relase 1.0, since it is not even complete yet\n\n"My standard" goto package for all my scripts/apps. Get argparse cli and configuration management in ONE LINE per parameter ;-) \n\nWith minimal boilerplate to handle:\n- System, default and script level configuration management files with *confuse* using *YAML* \n- *OS enviroment* does overwite settings from *YAML*\n- Automagic *argparse* CLI creation and handling. Will overwrite all settings from *YAML* and *os enviroment*\n- Setting the *logging* level\n\nAnd:\n- Creating the user default and script level *YAML* files at first run\n- Optional: Saving state at exit\n- and so much more ...\n\nSee:\n- [confused-argparse](https://pypi.org/project/confused-argparse/) THIS PACKAGE\n\n- [venv](https://docs.python.org/3/library/venv.html) for python virtual enviroment\n\n- [confuse](https://confuse.readthedocs.io/en/latest/) for handling configuration *TOML* files\n- [argparse](https://docs.python.org/3/library/argparse.html) for creating a *CLI parser*\n- [os.environ](https://docs.python.org/3/library/os.html) for reading *enviroment* variables\n- [logging](https://docs.python.org/3/library/logging.html) for *logging* to console\n- [YAML](https://en.wikipedia.org/wiki/YAML) for saving configuration data\n\n\n## Install:\n- bash Shell:\n```bash\n$ python3 -m venv /path/to/new/virtual/environment\n$ cd /path/to/new/virtual/environment\n$ source ./bin/activate\n$ pip install confused-argparse\n```\n\n## First Excample\n- PROGNAME.py:\n```python\nimport confused-argparse\nca=confused-argparse.set_var()\nca(\'input_file\', str, \'Input file: Read from a local file\')\n```\n\nBehind the scenes:\n- If `input_file` was set in any of the *YAML* files, it will already have a value (Actually views of values, see *confuse*)\n- If `input_file` was set in the *os enviroment*, `input_file` will be set accrodingly, overriting the *YAML* setting\n- If `--input_file` was set via the *command line* interface with `python3 PROGNAME.py --input_file my_file.txt`, overriting the *YAML* and *os enviroment* setting to *my_file.txt*\n\nIn the bash shell:\n\n```bash\n$ python3 PROGNAME.py -h\n\nusage: PROGNAME.py [-h] [--input_file INPUT_FILE]\n\noptional arguments:\n  -h, --help                  show this help message and exit\n  --input_file INPUT_FILE     Input file: Read from a local file\n```\n\n---\n\n## Next level:\n\n- PROGNAME.py:\n```python\nimport confused-argparse\nca = confused-argparse.set_var(standard=True, description=\'My App: Solves a problem\')\nca(\'input_file\', str, \'Input file: Read from a local file\', group=\'I/O\')\n```\n\nBehind the scenes:\n- `standard=True`:\n  - There are a number of standard argparse options already set, like `--verbose`, `--debug`, `--cron`\n  - Scans and read the values defined in the *os enviroment*, case independant, so also the enviroment variable `VERBOSE`\n  - For excample: `--verbose` will set the logging level to *INFO*\n- `description=\'My App: Solves a problem\'`\n  - argparse will print this\n- `group=\'I/O\'`:\n  - *argparse* will group options with this optional parameter\n\n```bash\n$ python3 PROGNAME.py -h\n\nusage: PROGNAME.py [-h] [--input_file INPUT_FILE] [--list_defaults] [--debug] [--verbose] [--cron]\n\nMy App: Solves a problem\n\noptional arguments:\n  -h, --help                  show this help message and exit\n\nI/O:\n  --input_file INPUT_FILE     Input file: Read from a local file [str]=\'\'\n\nDebug options:\nNote: Will override \n  --list_defaults             List: List all Vars in dict with there Defaults [bool]=False\n  --debug                     Debug: Logging DEBUG Messages (if not --cron, overrides --verbose) [bool]=False\n  --verbose                   Verbose: Logging INFO Messages (if not --cron) [bool]=False\n  --cron                      Called from Cronjob [bool]=False\n```\n\n---\n\n## Want more?\n\nSee Documentation. (Soon)\n\n\n## Pull Requests?\n\n- Will be welcomed, when we reached the first *beta*\n- Note: The confused-argparse [github repository](https://github.com/cruisen/confused-argparse) is still private/closed\n\n## DEV\n- Supports latest [python3.7+](https://www.python.org/)\n\n- [poetry](https://python-poetry.org/) for managing dependencies and build & publish to [pypy](https://pypi.org/)\n- [wemake-python-package](https://github.com/wemake-services/wemake-python-package) for steting up a out of the box ready building enviroment\n  - Minor tweaks to `.gitignore` and `Makefile`\n- [git](https://en.wikipedia.org/wiki/Git) for version management on [github](https://github.com/)\n- [gnu make](https://www.gnu.org/software/make/) for runing tests and building docs\n\n- [jupyter](https://jupyter.org/) for quick tests and some development\n- [sphinx](https://www.sphinx-doc.org/en/master/) and [readthedocs.org](https://readthedocs.org/) for documentation\n- [travis](https://travis-ci.org/) or [Github Actions](https://github.com/marketplace?type=actions) as the default CI\n- [@dependabot](https://dependabot.com/) for always up-to-date dependencies\n- [mypy](https://mypy.readthedocs.io/en/stable/) for optional static typing\n- [pytest](https://docs.pytest.org/en/stable/) for testing\n- [flake8](https://pypi.org/project/flake8/) and [wemake-python-styleguide](https://github.com/wemake-services/wemake-python-package) for linting\n\n## License\n\n[MIT](https://github.com/cruisen/confused-argparse/blob/master/LICENSE)\n\n(c) 2020 Nikolai von Krusenstiern\n\n\n## Credits\n\nThis project was generated with [`wemake-python-package`](https://github.com/wemake-services/wemake-python-package). Current template version is: [69435b231f7f398474073ac6dd14868dd3edf2c1](https://github.com/wemake-services/wemake-python-package/tree/69435b231f7f398474073ac6dd14868dd3edf2c1). See what is [updated](https://github.com/wemake-services/wemake-python-package/compare/69435b231f7f398474073ac6dd14868dd3edf2c1...master) since then.\n\n',
    'author': None,
    'author_email': None,
    'maintainer': None,
    'maintainer_email': None,
    'url': 'https://github.com/cruisen/confused-argparse',
    'packages': packages,
    'package_data': package_data,
    'python_requires': '>=3.6,<4.0',
}


setup(**setup_kwargs)
