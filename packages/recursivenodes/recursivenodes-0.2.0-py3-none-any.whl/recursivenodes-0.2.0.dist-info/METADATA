Metadata-Version: 2.1
Name: recursivenodes
Version: 0.2.0
Summary: Recursively defined interpolation nodes for the simplex
Home-page: https://tisaac.gitlab.io/recursivenodes/
Author: Toby Isaac
Author-email: tisaac@cc.gatech.edu
License: MIT
Project-URL: Bug Tracker, https://gitlab.com/tisaac/recursivenodes/issues
Project-URL: Source Code, https://gitlab.com/tisaac/recursivenodes/
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Intended Audience :: Science/Research
Classifier: Natural Language :: English
Classifier: Topic :: Scientific/Engineering :: Mathematics
Requires-Python: >=3.6
Description-Content-Type: text/markdown
Requires-Dist: numpy
Provides-Extra: all
Requires-Dist: matplotlib ; extra == 'all'
Requires-Dist: pytest ; extra == 'all'
Requires-Dist: coverage ; extra == 'all'
Requires-Dist: sphinx ; extra == 'all'
Requires-Dist: sphinxcontrib-bibtex ; extra == 'all'
Requires-Dist: sphinxcontrib-tikz ; extra == 'all'
Requires-Dist: scipy ; extra == 'all'
Provides-Extra: doc
Requires-Dist: matplotlib ; extra == 'doc'
Requires-Dist: sphinx ; extra == 'doc'
Requires-Dist: sphinxcontrib-bibtex ; extra == 'doc'
Requires-Dist: sphinxcontrib-tikz ; extra == 'doc'
Provides-Extra: lebesgue
Requires-Dist: scipy ; extra == 'lebesgue'
Provides-Extra: test
Requires-Dist: matplotlib ; extra == 'test'
Requires-Dist: pytest ; extra == 'test'
Requires-Dist: coverage ; extra == 'test'

# `recursivenodes`: Recursive, parameter-free, explicitly defined interpolation nodes for simplices

This package includes one module level function, `recursive_nodes()`, which returns
nodes for polynomial interpolation on the simplex in arbitrary dimensions.

The nodes have a few nice properties: they are explicitly constructed and fully
symmetric, and their traces on edges are Lobatto-Gauss-Legendre nodes (or any
other node set you wish to use).  Among explicitly constructed nodes, they
appear to have the best interpolation properties.  You can find more details in
the [documentation](https://tisaac.gitlab.io/recursivenodes), and even more in the
[preprint](https://arxiv.org/abs/2002.09421).

```bibtex
@misc{isaac2020recursive,
    title={Recursive, parameter-free, explicitly defined interpolation nodes for simplices},
    author={Tobin Isaac},
    year={2020},
    eprint={2002.09421},
    archivePrefix={arXiv},
    primaryClass={math.NA}
}
```

## Requirements:

- Only `numpy` is needed for `recursive_nodes()`.
- The `lebesgue` submodules requires `scipy`.
- Testing requires `coverage`, `pytest` and `matplotlib`.
- Building documentation additionally requires `sphinx`, `sphinxcontrib-bibtex`, and `sphinxcontrib-tikz`.


