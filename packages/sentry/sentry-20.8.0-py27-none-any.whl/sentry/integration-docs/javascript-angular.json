{
  "html": "<p>On its own, <code>@sentry/browser</code> will report any uncaught exceptions triggered from your application. Additionally, you can configure <code>@sentry/browser</code> to catch any Angular-specific exceptions reported through the <a href=\"https://angular.io/api/core/ErrorHandler\">@angular/core/ErrorHandler</a> component. This is also a great opportunity to collect user feedback by using <code>Sentry.showReportDialog</code>.</p>\n<p>First, install <code>@sentry/browser</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash highlight\"><code class=\"language-bash\"><span class=\"token comment\"># Using yarn</span>\n<span class=\"token function\">yarn</span> <span class=\"token function\">add</span> @sentry/browser\n\n<span class=\"token comment\"># Using npm</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> @sentry/browser</code></pre></div>\n<p>Then initialize a new Sentry instance and configure Angular with the <code>ErrorHandler</code> provided and explained below:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript highlight\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> BrowserModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@angular/platform-browser\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> NgModule<span class=\"token punctuation\">,</span> ErrorHandler<span class=\"token punctuation\">,</span> Injectable <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@angular/core\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> HttpErrorResponse <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@angular/common/http\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> environment <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../environments/environment\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AppComponent <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./app.component\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> Sentry <span class=\"token keyword\">from</span> <span class=\"token string\">\"@sentry/browser\"</span><span class=\"token punctuation\">;</span>\n\nSentry<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  dsn<span class=\"token operator\">:</span> <span class=\"token string\">\"___PUBLIC_DSN___\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// TryCatch has to be configured to disable XMLHttpRequest wrapping, as we are going to handle</span>\n  <span class=\"token comment\">// http module exceptions manually in Angular's ErrorHandler and we don't want it to capture the same error twice.</span>\n  <span class=\"token comment\">// Please note that TryCatch configuration requires at least @sentry/browser v5.16.0.</span>\n  integrations<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Sentry<span class=\"token punctuation\">.</span>Integrations<span class=\"token punctuation\">.</span>TryCatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    XMLHttpRequest<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Injectable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SentryErrorHandler</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ErrorHandler</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">extractError</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Try to unwrap zone.js error.</span>\n    <span class=\"token comment\">// https://github.com/angular/angular/blob/master/packages/core/src/util/errors.ts</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error <span class=\"token operator\">&amp;&amp;</span> error<span class=\"token punctuation\">.</span>ngOriginalError<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      error <span class=\"token operator\">=</span> error<span class=\"token punctuation\">.</span>ngOriginalError<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// We can handle messages and Error objects directly.</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> error <span class=\"token operator\">===</span> <span class=\"token string\">\"string\"</span> <span class=\"token operator\">||</span> error <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> error<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// If it's http module error, extract as much information from it as we can.</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">HttpErrorResponse</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// The `error` property of http exception can be either an `Error` object, which we can use directly...</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>error <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> error<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token comment\">// ... or an`ErrorEvent`, which can provide us with the message but no stack...</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>error <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">ErrorEvent</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> error<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token comment\">// ...or the request body itself, which we can use as a message instead.</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> error<span class=\"token punctuation\">.</span>error <span class=\"token operator\">===</span> <span class=\"token string\">\"string\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Server returned code </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>error<span class=\"token punctuation\">.</span>status<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> with body \"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>error<span class=\"token punctuation\">.</span>error<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\"</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token comment\">// If we don't have any detailed information, fallback to the request message itself.</span>\n      <span class=\"token keyword\">return</span> error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Skip if there's no error, and let user decide what to do with it.</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleError</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> extractedError <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">extractError</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token string\">\"Handled unknown error\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Capture handled exception and send it to Sentry.</span>\n    <span class=\"token keyword\">const</span> eventId <span class=\"token operator\">=</span> Sentry<span class=\"token punctuation\">.</span><span class=\"token function\">captureException</span><span class=\"token punctuation\">(</span>extractedError<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// When in development mode, log the error to console for immediate feedback.</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>environment<span class=\"token punctuation\">.</span>production<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>extractedError<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Optionally show user dialog to provide details on what happened.</span>\n    Sentry<span class=\"token punctuation\">.</span><span class=\"token function\">showReportDialog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> eventId <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n@<span class=\"token function\">NgModule</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  declarations<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppComponent<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  imports<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>BrowserModule<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> provide<span class=\"token operator\">:</span> ErrorHandler<span class=\"token punctuation\">,</span> useClass<span class=\"token operator\">:</span> SentryErrorHandler <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  bootstrap<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppComponent<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>When using your own <code>ErrorHandler</code>, make sure that whenever you use <code>HttpInterceptor</code> alongside it,\nthe interceptor doesn't modify the error captured originally.\nThe same goes for writing your own API services with built-in <code>http</code> methods.</p>\n<p>For example, the service below makes it impossible for the SDK to extract the correct data, because the full, original error <code>e</code> is not propagated.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js highlight\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ApiService</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">http</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>http <span class=\"token operator\">=</span> http<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">formatErrors</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Captured service error'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">throwError</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>http\n      <span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">catchError</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>formatErrors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Instead, make sure that you always rethrow or directly pass the original error. For example:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js highlight\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ApiService</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">http</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>http <span class=\"token operator\">=</span> http<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>http\n      <span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">catchError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">throwError</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"angularjs-1x\" style=\"position:relative;\">AngularJS 1.x</h2>\n<p>If you're using <code>AngularJS 1.x</code>, you can use Sentry's AngularJS integration.</p>\n<p>First, install <code>@sentry/browser</code> and <code>@sentry/integrations</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash highlight\"><code class=\"language-bash\"><span class=\"token comment\"># Using yarn</span>\n<span class=\"token function\">yarn</span> <span class=\"token function\">add</span> @sentry/browser @sentry/integrations\n\n<span class=\"token comment\"># Using npm</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> @sentry/browser @sentry/integrations</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript highlight\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> angular <span class=\"token keyword\">from</span> <span class=\"token string\">'angular'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> Sentry <span class=\"token keyword\">from</span> <span class=\"token string\">'@sentry/browser'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Angular <span class=\"token keyword\">as</span> AngularIntegration <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@sentry/integrations'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Make sure to call Sentry.init after importing AngularJS.</span>\n<span class=\"token comment\">// You can also pass {angular: AngularInstance} to the Integrations.Angular() constructor.</span>\nSentry<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  dsn<span class=\"token operator\">:</span> <span class=\"token string\">'___PUBLIC_DSN___'</span><span class=\"token punctuation\">,</span>\n  integrations<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">AngularIntegration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Finally require ngSentry as a dependency in your application module.</span>\nangular<span class=\"token punctuation\">.</span><span class=\"token function\">module</span><span class=\"token punctuation\">(</span><span class=\"token string\">'yourApplicationModule'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'ngSentry'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>In case you're using the CDN version or the Loader, Sentry provides a standalone file for every integration:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html highlight\"><code class=\"language-html\"><span class=\"token comment\">&lt;!-- Note that we now also provide a es6 build only --&gt;</span>\n<span class=\"token comment\">&lt;!-- &lt;script src=\"https://browser.sentry-cdn.com/5.20.1/bundle.es6.min.js\" integrity=\"sha384-vX2xdItiRzNmed/VJFb8J4h2p35hYqkdTI9+xNOueKEcr7iipZy17fplNS0ikHL0\" crossorigin=\"anonymous\"&gt;&lt;/script&gt; --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>https://browser.sentry-cdn.com/5.20.1/bundle.min.js<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">integrity</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>sha384-O8HdAJg1h8RARFowXd2J/r5fIWuinSBtjhwQoPesfVILeXzGpJxvyY/77OaPPXUo<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">crossorigin</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>anonymous<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token comment\">&lt;!-- If you include the integration it will be available under Sentry.Integrations.Angular --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>https://browser.sentry-cdn.com/5.20.1/angular.min.js<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">crossorigin</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>anonymous<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  Sentry<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    dsn<span class=\"token operator\">:</span> <span class=\"token string\">'___PUBLIC_DSN___'</span><span class=\"token punctuation\">,</span>\n    integrations<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sentry<span class=\"token punctuation\">.</span>Integrations<span class=\"token punctuation\">.</span>Angular</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<!-- TODO-ADD-VERIFICATION-EXAMPLE -->", 
  "link": "https://docs.sentry.io/platforms/javascript/angular/", 
  "id": "javascript-angular", 
  "name": "Angular"
}
