{"version":3,"sources":["webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/components/sentryDocumentTitle.tsx","webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/components/navTabs.tsx","webpack:///./app/components/links/listLink.tsx","webpack:///./app/data/platforms.tsx","webpack:///./app/components/platformPicker.jsx","webpack:///./app/views/projectInstall/overview.jsx"],"names":["SettingsPageHeading","this","props","icon","title","action","tabs","noTitleStyles","TitleAndActions","Icon","Title","styled","Action","React","Component","defaultProps","p","space","StyledSettingsPageHeading","SentryDocumentTitle","_title","objSlug","children","recreateRoute","to","options","lastRootIndex","routeIndex","routes","params","location","stepBack","paths","map","path","indexOf","findLastIndex","slice","baseRoute","search","hash","fullRoute","join","replaceRouterParams","NavTabs","underlined","className","tabProps","mergedClassName","classnames","ListLink","isActive","query","index","context","router","pathname","getClassName","_classNames","activeClassName","classNames","carriedProps","omit","onlyActiveOnIndex","displayName","contextTypes","PropTypes","object","isRequired","otherPlatform","integrations","link","type","id","name","t","concat","platforms","platform","i","language","PLATFORM_CATEGORIES","categoryList","PlatformPicker","keydown","state","category","filter","noAutoFilter","split","logSearch","debounce","analytics","toLowerCase","num_results","platformList","length","searchInput","createRef","e","target","current","focus","preventDefault","setPlatform","listProps","listClassName","Fragment","NavContainer","CategoryNav","key","onClick","setState","SearchBar","size","ref","value","label","placeholder","onChange","PlatformList","PlatformCard","data-test-id","selected","onClear","stopPropagation","tct","href","currentCategory","find","filtered","includes","showOther","theme","borderLight","inputStyles","gray600","StyledPlatformIconTile","PlatformIconTile","ClearButton","isCircled","borderless","gray700","ProjectInstallOverview","redirectToDocs","orgId","projectId","installUrl","isGettingStarted","browserHistory","push","toggleDsn","showDsn","keyList","issueStreamLink","dsn","DsnInfo","DsnContainer","DsnValue","priority","docLink","window","AsyncComponent","withOrganization"],"mappings":"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","file":"ProjectInstallOverview.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'app/styles/space';\nimport {HeaderTitle} from 'app/styles/organization';\n\ntype Props = {\n  // The title\n  title: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n\n  className?: string;\n\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // Actions on opposite end of title bar from the title\n  action?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass SettingsPageHeading extends React.Component<Props> {\n  static propTypes = {\n    icon: PropTypes.node,\n    title: PropTypes.node.isRequired,\n    action: PropTypes.node,\n    tabs: PropTypes.node,\n    // Disables font styles in the title. Allows for more custom titles.\n    noTitleStyles: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          {icon && <Icon>{icon}</Icon>}\n          {title && (\n            <Title tabs={tabs} styled={noTitleStyles}>\n              <HeaderTitle>{title}</HeaderTitle>\n            </Title>\n          )}\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p =>\n    p.tabs\n      ? `${space(4)} ${space(2)} ${space(2)} 0`\n      : `${space(4)} ${space(2)} ${space(4)} 0`};\n  flex: 1;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst StyledSettingsPageHeading = styled(SettingsPageHeading)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default StyledSettingsPageHeading;\n","import React, {FunctionComponent} from 'react';\nimport DocumentTitle from 'react-document-title';\n\ntype DocumentTitleProps = {\n  // Main page title\n  title: string;\n  // Organization or project slug to give title some context\n  objSlug: string;\n  children?: React.ReactNode;\n};\n\nconst SentryDocumentTitle: FunctionComponent<DocumentTitleProps> = (\n  props: DocumentTitleProps\n) => {\n  const _title = `${props.title} - ${props.objSlug} - Sentry`;\n  return <DocumentTitle title={_title}>{props.children}</DocumentTitle>;\n};\n\nexport default SentryDocumentTitle;\n","import {Location} from 'history';\nimport {PlainRoute} from 'react-router/lib/Route';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'app/utils/replaceRouterParams';\n\ntype Options = {\n  routes: PlainRoute[];\n  location: Location;\n\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(to: string | PlainRoute, options: Options): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\ntype Props = {\n  underlined?: boolean;\n  className?: string;\n};\n\ntype NavProps = Omit<React.HTMLProps<HTMLUListElement>, keyof Props> & Props;\n\nfunction NavTabs(props: NavProps) {\n  const {underlined, className, ...tabProps} = props;\n  const mergedClassName = classnames('nav nav-tabs', className, {\n    'border-bottom': underlined,\n  });\n  return <ul className={mergedClassName} {...tabProps} />;\n}\n\nNavTabs.propTypes = {\n  underlined: PropTypes.bool,\n};\n\nexport default NavTabs;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport omit from 'lodash/omit';\nimport {Link} from 'react-router';\nimport classNames from 'classnames';\nimport {LocationDescriptor} from 'history';\n\ntype DefaultProps = {\n  index: boolean;\n  activeClassName: string;\n};\n\ntype Props = DefaultProps & {\n  to: LocationDescriptor;\n  className?: string;\n  query?: string;\n  onClick?: () => void;\n  // If supplied by parent component, decides whether link element\n  // is \"active\" or not ... overriding default behavior of strict\n  // route matching\n  isActive?: (location: LocationDescriptor, indexOnly?: boolean) => boolean;\n};\n\nclass ListLink extends React.Component<Props> {\n  static displayName = 'ListLink';\n\n  static contextTypes = {\n    router: PropTypes.object.isRequired,\n  };\n\n  static defaultProps: DefaultProps = {\n    activeClassName: 'active',\n    index: false,\n  };\n\n  isActive = () => {\n    const {isActive, to, query, index} = this.props;\n\n    return (isActive || this.context.router.isActive)({pathname: to, query}, index);\n  };\n\n  getClassName = () => {\n    const _classNames = {};\n    const {className, activeClassName} = this.props;\n\n    if (className) {\n      _classNames[className] = true;\n    }\n\n    if (this.isActive()) {\n      _classNames[activeClassName] = true;\n    }\n\n    return classNames(_classNames);\n  };\n\n  render() {\n    const {index, children} = this.props;\n    const carriedProps = omit(this.props, 'activeClassName', 'isActive', 'index');\n\n    return (\n      <li className={this.getClassName()}>\n        <Link {...carriedProps} onlyActiveOnIndex={index}>\n          {children}\n        </Link>\n      </li>\n    );\n  }\n}\n\nexport default ListLink;\n","/* eslint import/no-unresolved:0 import/order:0 */\nimport {PlatformIntegration} from 'app/types';\nimport {platforms} from 'integration-docs-platforms';\nimport {t} from 'app/locale';\n\nconst otherPlatform = {\n  integrations: [\n    {\n      link: 'https://docs.sentry.io/clients/',\n      type: 'language',\n      id: 'other',\n      name: t('Other'),\n    },\n  ],\n  id: 'other',\n  name: t('Other'),\n};\n\nexport default ([] as PlatformIntegration[]).concat(\n  [],\n  ...[...platforms, otherPlatform].map(platform =>\n    platform.integrations.map(i => ({...i, language: platform.id}))\n  )\n);\n","import debounce from 'lodash/debounce';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport keydown from 'react-keydown';\nimport styled from '@emotion/styled';\n\nimport {analytics} from 'app/utils/analytics';\nimport {inputStyles} from 'app/styles/input';\nimport {t, tct} from 'app/locale';\nimport Button from 'app/components/button';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport ExternalLink from 'app/components/links/externalLink';\nimport ListLink from 'app/components/links/listLink';\nimport NavTabs from 'app/components/navTabs';\nimport PlatformIconTile from 'app/components/platformIconTile';\nimport categoryList from 'app/data/platformCategories';\nimport platforms from 'app/data/platforms';\nimport space from 'app/styles/space';\nimport {IconClose, IconSearch, IconProject} from 'app/icons';\n\nconst PLATFORM_CATEGORIES = categoryList.concat({id: 'all', name: t('All')});\n\nclass PlatformPicker extends React.Component {\n  static propTypes = {\n    setPlatform: PropTypes.func.isRequired,\n    platform: PropTypes.string,\n    showOther: PropTypes.bool,\n    listClassName: PropTypes.string,\n    listProps: PropTypes.object,\n    noAutoFilter: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    showOther: true,\n  };\n\n  state = {\n    category: PLATFORM_CATEGORIES[0].id,\n    filter: this.props.noAutoFilter ? '' : (this.props.platform || '').split('-')[0],\n  };\n\n  get platformList() {\n    const {category} = this.state;\n    const currentCategory = categoryList.find(({id}) => id === category);\n\n    const subsetMatch = ({id}) => id.includes(this.state.filter.toLowerCase());\n    const categoryMatch = platform =>\n      category === 'all' || currentCategory.platforms.includes(platform.id);\n\n    const filtered = platforms.filter(this.state.filter ? subsetMatch : categoryMatch);\n\n    return this.props.showOther ? filtered : filtered.filter(({id}) => id !== 'other');\n  }\n\n  logSearch = debounce(() => {\n    if (this.state.filter) {\n      analytics('platformpicker.search', {\n        query: this.state.filter.toLowerCase(),\n        num_results: this.platformList.length,\n      });\n    }\n  }, 300);\n\n  @keydown('/')\n  focusSearch(e) {\n    if (e.target !== this.searchInput.current) {\n      this.searchInput.current.focus();\n      e.preventDefault();\n    }\n  }\n\n  searchInput = React.createRef();\n\n  render() {\n    const platformList = this.platformList;\n    const {setPlatform, listProps, listClassName} = this.props;\n    const {filter, category} = this.state;\n\n    return (\n      <React.Fragment>\n        <NavContainer>\n          <CategoryNav>\n            {PLATFORM_CATEGORIES.map(({id, name}) => (\n              <ListLink\n                key={id}\n                onClick={e => {\n                  analytics('platformpicker.select_tab', {category: id});\n                  this.setState({category: id, filter: ''});\n                  e.preventDefault();\n                }}\n                to=\"\"\n                isActive={() => id === (filter ? 'all' : category)}\n              >\n                {name}\n              </ListLink>\n            ))}\n          </CategoryNav>\n          <SearchBar>\n            <IconSearch size=\"xs\" />\n            <input\n              type=\"text\"\n              ref={this.searchInput}\n              value={filter}\n              label={t('Filter Platforms')}\n              placeholder={t('Filter Platforms')}\n              onChange={e => this.setState({filter: e.target.value}, this.logSearch)}\n            />\n          </SearchBar>\n        </NavContainer>\n        <PlatformList className={listClassName} {...listProps}>\n          {platformList.map(platform => (\n            <PlatformCard\n              data-test-id={`platform-${platform.id}`}\n              key={platform.id}\n              platform={platform}\n              selected={this.props.platform === platform.id}\n              onClear={e => {\n                setPlatform('');\n                e.stopPropagation();\n              }}\n              onClick={() => {\n                analytics('platformpicker.select_platform', {platform: platform.id});\n                setPlatform(platform.id);\n              }}\n            />\n          ))}\n        </PlatformList>\n        {platformList.length === 0 && (\n          <EmptyMessage\n            icon={<IconProject size=\"xl\" />}\n            title={t(\"We don't have an SDK for that yet!\")}\n          >\n            {tct(\n              `Not finding your platform? You can still create your project,\n              but looks like we don't have an official SDK for your platform\n              yet. However, there's a rich ecosystem of community supported\n              SDKs (including Perl, CFML, Clojure, and ActionScript). Try\n              [search:searching for Sentry clients] or contacting support.`,\n              {\n                search: (\n                  <ExternalLink href=\"https://github.com/search?q=-org%3Agetsentry+topic%3Asentry&type=Repositories\" />\n                ),\n              }\n            )}\n          </EmptyMessage>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nconst NavContainer = styled('div')`\n  border-bottom: 1px solid ${p => p.theme.borderLight};\n  margin-bottom: ${space(2)};\n  display: grid;\n  grid-template-columns: 1fr 300px;\n  align-items: start;\n`;\n\nconst SearchBar = styled('div')`\n  ${inputStyles};\n  padding: 0 8px;\n  color: ${p => p.theme.gray600};\n  display: flex;\n  align-items: center;\n  font-size: 15px;\n\n  input {\n    border: none;\n    background: none;\n    padding: 2px 4px;\n    width: 100%;\n    /* Ensure a consistent line height to keep the input the desired height */\n    line-height: 24px;\n\n    &:focus {\n      outline: none;\n    }\n  }\n`;\n\nconst CategoryNav = styled(NavTabs)`\n  margin: 0;\n  margin-top: 4px;\n`;\n\nconst PlatformList = styled('div')`\n  display: grid;\n  grid-gap: ${space(1)};\n  grid-template-columns: repeat(auto-fill, 112px);\n  margin-bottom: ${space(2)};\n`;\n\nconst StyledPlatformIconTile = styled(PlatformIconTile)`\n  width: 56px;\n  height: 56px;\n  font-size: 42px;\n  line-height: 58px;\n  text-align: center;\n  margin: ${space(2)};\n  border-radius: 5px;\n`;\n\nconst ClearButton = styled(p => (\n  <Button {...p} icon={<IconClose isCircled size=\"xs\" />} size=\"xsmall\" borderless />\n))`\n  position: absolute;\n  top: -6px;\n  right: -6px;\n  height: 22px;\n  width: 22px;\n  border-radius: 50%;\n  background: #fff;\n  color: ${p => p.theme.gray700};\n`;\n\nconst PlatformCard = styled(({platform, selected, onClear, ...props}) => (\n  <div {...props}>\n    <StyledPlatformIconTile platform={platform.id} />\n    <h3>{platform.name}</h3>\n    {selected && <ClearButton onClick={onClear} />}\n  </div>\n))`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 0 0 14px;\n  border-radius: 4px;\n  cursor: pointer;\n  background: ${p => p.selected && '#ecf5fd'};\n\n  &:hover {\n    background: #ebebef;\n  }\n\n  h3 {\n    display: block;\n    width: 100%;\n    text-align: center;\n    font-size: 15px;\n    margin: 0;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    line-height: 1.2;\n  }\n`;\n\nexport default PlatformPicker;\n","import {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport React from 'react';\n\nimport {t, tct} from 'app/locale';\nimport AsyncComponent from 'app/components/asyncComponent';\nimport AutoSelectText from 'app/components/autoSelectText';\nimport SentryDocumentTitle from 'app/components/sentryDocumentTitle';\nimport Button from 'app/components/button';\nimport ExternalLink from 'app/components/links/externalLink';\nimport PlatformPicker from 'app/components/platformPicker';\nimport SentryTypes from 'app/sentryTypes';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\nimport recreateRoute from 'app/utils/recreateRoute';\nimport space from 'app/styles/space';\nimport withOrganization from 'app/utils/withOrganization';\n\nclass ProjectInstallOverview extends AsyncComponent {\n  static propTypes = {\n    organization: SentryTypes.Organization.isRequired,\n  };\n\n  get isGettingStarted() {\n    return window.location.href.indexOf('getting-started') > 0;\n  }\n\n  getEndpoints() {\n    const {orgId, projectId} = this.props.params;\n    return [['keyList', `/projects/${orgId}/${projectId}/keys/`]];\n  }\n\n  redirectToDocs = platform => {\n    const {orgId, projectId} = this.props.params;\n\n    const installUrl = this.isGettingStarted\n      ? `/organizations/${orgId}/projects/${projectId}/getting-started/${platform}/`\n      : recreateRoute(`install/${platform}/`, {\n          ...this.props,\n          stepBack: -3,\n        });\n\n    browserHistory.push(installUrl);\n  };\n\n  toggleDsn = () => {\n    this.setState(state => ({showDsn: !state.showDsn}));\n  };\n\n  render() {\n    const {orgId, projectId} = this.props.params;\n    const {keyList} = this.state;\n\n    const issueStreamLink = `/organizations/${orgId}/issues/#welcome`;\n\n    const dsn = !!keyList?.length ? keyList[0].dsn : {};\n\n    return (\n      <div>\n        <SentryDocumentTitle title={t('Error Tracking')} objSlug={projectId} />\n        <SettingsPageHeader title={t('Configure your application')} />\n        <TextBlock>\n          {t(\n            'Get started by selecting the platform or language that powers your application.'\n          )}\n        </TextBlock>\n\n        {this.state.showDsn ? (\n          <DsnInfo>\n            <DsnContainer>\n              <strong>{t('DSN')}</strong>\n              <DsnValue>{dsn.public}</DsnValue>\n            </DsnContainer>\n\n            <Button priority=\"primary\" to={issueStreamLink}>\n              {t('Got it! Take me to the Issue Stream.')}\n            </Button>\n          </DsnInfo>\n        ) : (\n          <p>\n            <small>\n              {tct('Already have things setup? [link:Get your DSN]', {\n                link: <Button priority=\"link\" onClick={this.toggleDsn} />,\n              })}\n              .\n            </small>\n          </p>\n        )}\n        <PlatformPicker setPlatform={this.redirectToDocs} showOther={false} />\n        <p>\n          {tct(\n            `For a complete list of client integrations, please see\n             [docLink:our in-depth documentation].`,\n            {docLink: <ExternalLink href=\"https://docs.sentry.io\" />}\n          )}\n        </p>\n      </div>\n    );\n  }\n}\n\nconst DsnValue = styled(p => (\n  <code {...p}>\n    <AutoSelectText>{p.children}</AutoSelectText>\n  </code>\n))`\n  overflow: hidden;\n`;\n\nconst DsnInfo = styled('div')`\n  margin-bottom: ${space(3)};\n`;\n\nconst DsnContainer = styled('div')`\n  display: grid;\n  grid-template-columns: max-content 1fr;\n  grid-gap: ${space(1.5)} ${space(2)};\n  align-items: center;\n  margin-bottom: ${space(2)};\n`;\n\nexport default withOrganization(ProjectInstallOverview);\n"],"sourceRoot":""}