{"version":3,"sources":["webpack:///./app/components/links/linkWithConfirmation.tsx","webpack:///./app/components/resultGrid.jsx","webpack:///./app/views/admin/adminRelays.jsx"],"names":["LinkWithConfirmation","this","props","className","disabled","title","children","otherProps","href","classNames","React","PureComponent","Filter","getCurrentLabel","selected","options","filter","item","value","name","getDefaultItem","query","$","extend","location","cursor","queryKey","key","isActive","to","pathname","path","getSelector","map","filterQuery","length","Component","SortBy","getCurrentSortLabel","getSortBySelector","sortBy","ResultGrid","createReactClass","displayName","getDefaultProps","endpoint","method","columns","sortOptions","filters","defaultSort","keyForRow","row","id","columnsForRow","defaultParams","per_page","hasPagination","hasSearch","getInitialState","queryParams","rows","loading","error","pageLinks","Object","assign","componentWillMount","fetchData","componentWillReceiveProps","nextProps","setState","remountComponent","refresh","state","api","request","data","success","_","jqXHR","getResponseHeader","onSearch","e","targetQueryParams","jQuery","preventDefault","browserHistory","push","onQueryChange","evt","target","renderLoading","colSpan","renderError","renderNoResults","renderResults","render","onSubmit","type","placeholder","style","width","autoComplete","onChange","size","keys","filterKey","withApi","prettyDate","x","moment","format","AdminRelays","onDelete","getRow","relayId","publicKey","textAlign","firstSeen","lastSeen","message","t","onConfirm"],"mappings":"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","file":"AdminRelays.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\nimport Button from 'app/components/button';\nimport Confirm from 'app/components/confirm';\n\ntype Props = {\n  message: React.ReactNode;\n  title: string;\n  onConfirm: () => void;\n  disabled?: boolean;\n  className?: string;\n  priority?: React.ComponentProps<typeof Button>['priority'];\n};\n\n/**\n * <Confirm> is a more generic version of this component\n */\nclass LinkWithConfirmation extends React.PureComponent<Props> {\n  render() {\n    const {className, disabled, title, children, ...otherProps} = this.props;\n    return (\n      <Confirm {...otherProps} disabled={disabled}>\n        <a href=\"#\" className={classNames(className || '', {disabled})} title={title}>\n          {children}\n        </a>\n      </Confirm>\n    );\n  }\n}\n\nexport default LinkWithConfirmation;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport createReactClass from 'create-react-class';\nimport $ from 'jquery';\nimport {browserHistory} from 'react-router';\n\nimport withApi from 'app/utils/withApi';\nimport DropdownLink from 'app/components/dropdownLink';\nimport MenuItem from 'app/components/menuItem';\nimport Pagination from 'app/components/pagination';\nimport {IconSearch} from 'app/icons';\n\nclass Filter extends React.Component {\n  static propTypes = {\n    name: PropTypes.string.isRequired,\n    queryKey: PropTypes.string.isRequired,\n    options: PropTypes.array.isRequired,\n    path: PropTypes.string.isRequired,\n    value: PropTypes.any,\n  };\n\n  getCurrentLabel = () => {\n    const selected = this.props.options.filter(\n      item => item[0] === (this.props.value || '')\n    )[0];\n    if (selected) {\n      return this.props.name + ': ' + selected[1];\n    }\n    return this.props.name + ': ' + 'Any';\n  };\n\n  getDefaultItem = () => {\n    const query = $.extend({}, this.props.location.query, {\n      cursor: '',\n    });\n    delete query[this.props.queryKey];\n\n    return (\n      <MenuItem\n        key=\"\"\n        isActive={this.props.value === '' || !this.props.value}\n        to={{pathname: this.props.path, query}}\n      >\n        Any\n      </MenuItem>\n    );\n  };\n\n  getSelector = () => (\n    <DropdownLink title={this.getCurrentLabel()}>\n      {this.getDefaultItem()}\n      {this.props.options.map(item => {\n        const filterQuery = {};\n        filterQuery[this.props.queryKey] = item[0];\n        filterQuery.cursor = '';\n        const query = $.extend({}, this.props.location.query, filterQuery);\n        return (\n          <MenuItem\n            key={item[0]}\n            isActive={this.props.value === item[0]}\n            to={{pathname: this.props.path, query}}\n          >\n            {item[1]}\n          </MenuItem>\n        );\n      })}\n    </DropdownLink>\n  );\n\n  render() {\n    return (\n      <div className=\"filter-options\">\n        {this.props.options.length === 1 ? (\n          <strong>{this.getCurrentLabel()}</strong>\n        ) : (\n          this.getSelector()\n        )}\n      </div>\n    );\n  }\n}\n\nclass SortBy extends React.Component {\n  static propTypes = {\n    options: PropTypes.array.isRequired,\n    path: PropTypes.string.isRequired,\n    location: PropTypes.object,\n    value: PropTypes.any,\n  };\n\n  getCurrentSortLabel = () =>\n    this.props.options.filter(item => item[0] === this.props.value)[0][1];\n\n  getSortBySelector = () => (\n    <DropdownLink title={this.getCurrentSortLabel()} className=\"sorted-by\">\n      {this.props.options.map(item => {\n        const query = $.extend({}, this.props.location.query, {\n          sortBy: item[0],\n          cursor: '',\n        });\n        return (\n          <MenuItem\n            isActive={this.props.value === item[0]}\n            key={item[0]}\n            to={{pathname: this.props.path, query}}\n          >\n            {item[1]}\n          </MenuItem>\n        );\n      })}\n    </DropdownLink>\n  );\n\n  render() {\n    if (this.props.options.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"sort-options\">\n        Showing results sorted by\n        {this.props.options.length === 1 ? (\n          <strong className=\"sorted-by\">{this.getCurrentSortLabel()}</strong>\n        ) : (\n          this.getSortBySelector()\n        )}\n      </div>\n    );\n  }\n}\n\nconst ResultGrid = createReactClass({\n  displayName: 'ResultGrid',\n\n  propTypes: {\n    api: PropTypes.object,\n    columns: PropTypes.array,\n    columnsForRow: PropTypes.func,\n    defaultSort: PropTypes.string,\n    defaultParams: PropTypes.object,\n    endpoint: PropTypes.string,\n    filters: PropTypes.object,\n    hasPagination: PropTypes.bool,\n    hasSearch: PropTypes.bool,\n    keyForRow: PropTypes.func,\n    location: PropTypes.object,\n    method: PropTypes.string,\n    options: PropTypes.array,\n    path: PropTypes.string,\n    sortOptions: PropTypes.array,\n  },\n\n  getDefaultProps() {\n    return {\n      path: '',\n      endpoint: '',\n      method: 'GET',\n      columns: [],\n      sortOptions: [],\n      filters: {},\n      defaultSort: '',\n      keyForRow: function(row) {\n        return row.id;\n      },\n      columnsForRow: function() {\n        return [];\n      },\n      defaultParams: {\n        per_page: 50,\n      },\n      hasPagination: true,\n      hasSearch: false,\n    };\n  },\n\n  getInitialState() {\n    const queryParams = (this.props.location || {}).query || {};\n\n    return {\n      rows: [],\n      loading: true,\n      error: false,\n      pageLinks: null,\n      query: queryParams.query || '',\n      sortBy: queryParams.sortBy || this.props.defaultSort,\n      filters: Object.assign({}, queryParams),\n    };\n  },\n\n  componentWillMount() {\n    this.fetchData();\n  },\n\n  componentWillReceiveProps(nextProps) {\n    const queryParams = (nextProps.location || {}).query || {};\n    this.setState(\n      {\n        query: queryParams.query || '',\n        sortBy: queryParams.sortBy || this.props.defaultSort,\n        filters: Object.assign({}, queryParams),\n        pageLinks: null,\n        loading: true,\n        error: false,\n      },\n      this.fetchData\n    );\n  },\n\n  remountComponent() {\n    this.setState(this.getInitialState(), this.fetchData);\n  },\n\n  refresh() {\n    this.setState(\n      {\n        loading: true,\n      },\n      this.fetchData()\n    );\n  },\n\n  fetchData() {\n    // TODO(dcramer): this should explicitly allow filters/sortBy/cursor/perPage\n    const queryParams = $.extend(\n      {},\n      this.props.defaultParams,\n      {sortBy: this.state.sortBy},\n      (this.props.location || {}).query || {}\n    );\n\n    this.props.api.request(this.props.endpoint, {\n      method: this.props.method,\n      data: queryParams,\n      success: (data, _, jqXHR) => {\n        this.setState({\n          loading: false,\n          error: false,\n          rows: data,\n          pageLinks: jqXHR.getResponseHeader('Link'),\n        });\n      },\n      error: () => {\n        this.setState({\n          loading: false,\n          error: true,\n        });\n      },\n    });\n  },\n\n  onSearch(e) {\n    const location = this.props.location || {};\n    const {query} = this.state;\n    const targetQueryParams = jQuery.extend({}, location.query || {}, {\n      query,\n      cursor: '',\n    });\n\n    e.preventDefault();\n\n    browserHistory.push({\n      pathname: this.props.path,\n      query: targetQueryParams,\n    });\n  },\n\n  onQueryChange(evt) {\n    this.setState({query: evt.target.value});\n  },\n\n  renderLoading() {\n    return (\n      <tr>\n        <td colSpan={this.props.columns.length}>\n          <div className=\"loading\">\n            <div className=\"loading-indicator\" />\n            <div className=\"loading-message\">Hold on to your butts!</div>\n          </div>\n        </td>\n      </tr>\n    );\n  },\n\n  renderError() {\n    return (\n      <tr>\n        <td colSpan={this.props.columns.length}>\n          <div className=\"alert-block alert-error\">Something bad happened :(</div>\n        </td>\n      </tr>\n    );\n  },\n\n  renderNoResults() {\n    return (\n      <tr>\n        <td colSpan={this.props.columns.length}>No results found.</td>\n      </tr>\n    );\n  },\n\n  renderResults() {\n    return this.state.rows.map(row => (\n      <tr key={this.props.keyForRow(row)}>{this.props.columnsForRow(row)}</tr>\n    ));\n  },\n\n  render() {\n    const {filters} = this.props;\n    return (\n      <div className=\"result-grid\">\n        <div className=\"table-options\">\n          {this.props.hasSearch && (\n            <div className=\"result-grid-search\">\n              <form onSubmit={this.onSearch}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control input-search\"\n                    placeholder=\"search\"\n                    style={{width: 300}}\n                    name=\"query\"\n                    autoComplete=\"off\"\n                    value={this.state.query}\n                    onChange={this.onQueryChange}\n                  />\n                  <button type=\"submit\" className=\"btn btn-sm btn-primary\">\n                    <IconSearch size=\"xs\" />\n                  </button>\n                </div>\n              </form>\n            </div>\n          )}\n          <SortBy\n            options={this.props.sortOptions}\n            value={this.state.sortBy}\n            path={this.props.path}\n            location={this.props.location}\n          />\n          {Object.keys(filters).map(filterKey => (\n            <Filter\n              key={filterKey}\n              queryKey={filterKey}\n              value={this.state.filters[filterKey]}\n              path={this.props.path}\n              location={this.props.location}\n              {...filters[filterKey]}\n            />\n          ))}\n        </div>\n\n        <table className=\"table table-grid\">\n          <thead>\n            <tr>{this.props.columns}</tr>\n          </thead>\n          <tbody>\n            {this.state.loading\n              ? this.renderLoading()\n              : this.state.error\n              ? this.renderError()\n              : this.state.rows.length === 0\n              ? this.renderNoResults()\n              : this.renderResults()}\n          </tbody>\n        </table>\n        {this.props.hasPagination && this.state.pageLinks && (\n          <Pagination pageLinks={this.state.pageLinks} />\n        )}\n      </div>\n    );\n  },\n});\n\nexport {ResultGrid};\n\nexport default withApi(ResultGrid);\n","/* eslint-disable react/jsx-key */\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport moment from 'moment';\nimport createReactClass from 'create-react-class';\n\nimport {t} from 'app/locale';\nimport withApi from 'app/utils/withApi';\nimport ResultGrid from 'app/components/resultGrid';\nimport LinkWithConfirmation from 'app/components/links/linkWithConfirmation';\n\nconst prettyDate = function(x) {\n  return moment(x).format('ll LTS');\n};\n\nconst AdminRelays = createReactClass({\n  displayName: 'GroupEventDetails',\n\n  propTypes: {\n    api: PropTypes.object,\n  },\n\n  getInitialState() {\n    return {\n      loading: false,\n    };\n  },\n\n  onDelete(key) {\n    this.setState({\n      loading: true,\n    });\n    this.props.api.request(`/relays/${key}/`, {\n      method: 'DELETE',\n      success: () => {\n        this.setState({\n          loading: false,\n        });\n      },\n      error: () => {\n        this.setState({\n          loading: false,\n        });\n      },\n    });\n  },\n\n  getRow(row) {\n    return [\n      <td>\n        <strong>{row.relayId}</strong>\n      </td>,\n      <td>{row.publicKey}</td>,\n      <td style={{textAlign: 'right'}}>{prettyDate(row.firstSeen)}</td>,\n      <td style={{textAlign: 'right'}}>{prettyDate(row.lastSeen)}</td>,\n      <td style={{textAlign: 'right'}}>\n        <span className=\"editor-tools\">\n          <LinkWithConfirmation\n            className=\"danger\"\n            title=\"Remove\"\n            message={t('Are you sure you wish to delete this relay?')}\n            onConfirm={() => this.onDelete(row.id)}\n          >\n            {t('Remove')}\n          </LinkWithConfirmation>\n        </span>\n      </td>,\n    ];\n  },\n\n  render() {\n    const columns = [\n      <th style={{width: 350, textAlign: 'left'}}>Relay</th>,\n      <th>Public Key</th>,\n      <th style={{width: 150, textAlign: 'right'}}>First seen</th>,\n      <th style={{width: 150, textAlign: 'right'}}>Last seen</th>,\n      <th />,\n    ];\n\n    return (\n      <div>\n        <h3>{t('Relays')}</h3>\n        <ResultGrid\n          path=\"/manage/relays/\"\n          endpoint=\"/relays/\"\n          method=\"GET\"\n          columns={columns}\n          columnsForRow={this.getRow}\n          hasSearch={false}\n          sortOptions={[\n            ['firstSeen', 'First seen'],\n            ['lastSeen', 'Last seen'],\n            ['relayId', 'Relay ID'],\n          ]}\n          defaultSort=\"firstSeen\"\n          {...this.props}\n        />\n      </div>\n    );\n  },\n});\n\nexport {AdminRelays};\n\nexport default withApi(AdminRelays);\n"],"sourceRoot":""}