{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/components/alertLink.tsx","webpack:///./app/actionCreators/integrations.tsx","webpack:///./app/components/repositoryRow.tsx","webpack:///./app/views/settings/organizationRepositories/organizationRepositories.tsx","webpack:///./app/views/settings/organizationRepositories/index.jsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","SettingsPageHeading","props","icon","action","tabs","noTitleStyles","TitleAndActions","Icon","Title","styled","Action","React","Component","defaultProps","p","space","StyledSettingsPageHeading","routeTitleGen","routeName","orgSlug","withSentry","tmpl","AlertLink","size","priority","children","onClick","withoutMarginBottom","openInNewTab","to","href","StyledLink","IconWrapper","AlertLinkText","IconLink","direction","linkProps","omit","theme","alert","backgroundLight","gray700","border","Client","deleteRepository","client","orgId","repositoryId","addLoadingMessage","promise","requestPromise","method","then","clearIndicators","addErrorMessage","t","cancelDeleteRepository","data","status","applyRepositoryAddComplete","repo","message","tct","name","addSuccessMessage","errorData","text","responseJSON","errors","__all__","migrateRepository","integration","integrationId","id","addRepository","installation","identifier","provider","key","RepositoryRow","cancelDelete","api","repository","onRepositoryChange","deleteRepo","RepositoryStatus","PENDING_DELETION","DELETION_IN_PROGRESS","DISABLED","HIDDEN","showProvider","isActive","access","hasAccess","StyledPanelItem","RepositoryTitleAndUrl","RepositoryTitle","getStatusLabel","StyledButton","disabled","data-test-id","url","replace","onConfirm","label","ACTIVE","PanelItem","Button","OrganizationRepositories","itemList","params","hasItemList","length","className","link","map","description","OrganizationRepositoriesContainer","state","forEach","item","setState","onAddRepo","push","sortArray","query","Fragment","itemListPageLinks","pageLinks"],"mappings":"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","file":"OrganizationRepositories.js","sourcesContent":["import DocumentTitle from 'react-document-title';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'app/styles/space';\nimport {HeaderTitle} from 'app/styles/organization';\n\ntype Props = {\n  // The title\n  title: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n\n  className?: string;\n\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // Actions on opposite end of title bar from the title\n  action?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass SettingsPageHeading extends React.Component<Props> {\n  static propTypes = {\n    icon: PropTypes.node,\n    title: PropTypes.node.isRequired,\n    action: PropTypes.node,\n    tabs: PropTypes.node,\n    // Disables font styles in the title. Allows for more custom titles.\n    noTitleStyles: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          {icon && <Icon>{icon}</Icon>}\n          {title && (\n            <Title tabs={tabs} styled={noTitleStyles}>\n              <HeaderTitle>{title}</HeaderTitle>\n            </Title>\n          )}\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p =>\n    p.tabs\n      ? `${space(4)} ${space(2)} ${space(2)} 0`\n      : `${space(4)} ${space(2)} ${space(4)} 0`};\n  flex: 1;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst StyledSettingsPageHeading = styled(SettingsPageHeading)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default StyledSettingsPageHeading;\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true\n): string {\n  const tmpl = `${routeName} - ${orgSlug}`;\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import styled from '@emotion/styled';\nimport React from 'react';\nimport omit from 'lodash/omit';\n\nimport Link from 'app/components/links/link';\nimport ExternalLink from 'app/components/links/externalLink';\nimport {IconChevron} from 'app/icons';\nimport space from 'app/styles/space';\n\ntype Size = 'small' | 'normal';\ntype Priority = 'info' | 'warning' | 'success' | 'error' | 'muted';\n\ntype LinkProps = React.ComponentPropsWithoutRef<typeof Link>;\n\ntype OtherProps = {\n  icon?: string | React.ReactNode;\n  onClick?: (e: React.MouseEvent) => void;\n};\n\ntype DefaultProps = {\n  size: Size;\n  priority: Priority;\n  withoutMarginBottom: boolean;\n  openInNewTab: boolean;\n  href?: string;\n};\n\ntype Props = OtherProps & DefaultProps & Partial<Pick<LinkProps, 'to'>>;\n\ntype StyledLinkProps = DefaultProps &\n  Partial<Pick<LinkProps, 'to'>> &\n  Omit<LinkProps, 'to' | 'size'>;\n\nclass AlertLink extends React.Component<Props> {\n  static defaultProps: DefaultProps = {\n    priority: 'warning',\n    size: 'normal',\n    withoutMarginBottom: false,\n    openInNewTab: false,\n  };\n\n  render() {\n    const {\n      size,\n      priority,\n      icon,\n      children,\n      onClick,\n      withoutMarginBottom,\n      openInNewTab,\n      to,\n      href,\n    } = this.props;\n\n    return (\n      <StyledLink\n        to={to}\n        href={href}\n        onClick={onClick}\n        size={size}\n        priority={priority}\n        withoutMarginBottom={withoutMarginBottom}\n        openInNewTab={openInNewTab}\n      >\n        {icon && <IconWrapper>{icon}</IconWrapper>}\n        <AlertLinkText>{children}</AlertLinkText>\n        <IconLink>\n          <IconChevron direction=\"right\" />\n        </IconLink>\n      </StyledLink>\n    );\n  }\n}\n\nexport default AlertLink;\n\nconst StyledLink = styled(({openInNewTab, to, href, ...props}: StyledLinkProps) => {\n  const linkProps = omit(props, ['withoutMarginBottom', 'priority', 'size']);\n  if (href) {\n    return <ExternalLink {...linkProps} href={href} openInNewTab={openInNewTab} />;\n  }\n\n  return <Link {...linkProps} to={to || ''} />;\n})`\n  display: flex;\n  background-color: ${p => p.theme.alert[p.priority].backgroundLight};\n  color: ${p => p.theme.gray700};\n  border: 1px dashed ${p => p.theme.alert[p.priority].border};\n  padding: ${p => (p.size === 'small' ? `${space(1)} ${space(1.5)}` : space(2))};\n  margin-bottom: ${p => (p.withoutMarginBottom ? 0 : space(3))};\n  border-radius: 0.25em;\n  transition: 0.2s border-color;\n\n  &.focus-visible {\n    outline: none;\n    box-shadow: ${p => p.theme.alert[p.priority].border}7f 0 0 0 2px;\n  }\n`;\n\nconst IconWrapper = styled('span')`\n  display: flex;\n  margin: ${space(0.5)} ${space(1.5)} ${space(0.5)} 0;\n`;\n\nconst IconLink = styled(IconWrapper)`\n  margin: ${space(0.5)} 0;\n`;\n\nconst AlertLinkText = styled('div')`\n  line-height: 1.5;\n  flex-grow: 1;\n`;\n","import {Client} from 'app/api';\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n  clearIndicators,\n} from 'app/actionCreators/indicator';\nimport {t, tct} from 'app/locale';\nimport {Integration, Repository} from 'app/types';\n\nconst api = new Client();\n\n/**\n * Removes an integration from a project.\n *\n * @param {String} orgId Organization Slug\n * @param {String} projectId Project Slug\n * @param {Object} integration The organization integration to remove\n */\nexport function removeIntegrationFromProject(\n  orgId: string,\n  projectId: string,\n  integration: Integration\n) {\n  const endpoint = `/projects/${orgId}/${projectId}/integrations/${integration.id}/`;\n  addLoadingMessage();\n\n  return api.requestPromise(endpoint, {method: 'DELETE'}).then(\n    () => {\n      addSuccessMessage(t('Disabled %s for %s', integration.name, projectId));\n    },\n    () => {\n      addErrorMessage(t('Failed to disable %s for %s', integration.name, projectId));\n    }\n  );\n}\n\n/**\n * Add an integration to a project\n *\n * @param {String} orgId Organization Slug\n * @param {String} projectId Project Slug\n * @param {Object} integration The organization integration to add\n */\nexport function addIntegrationToProject(\n  orgId: string,\n  projectId: string,\n  integration: Integration\n) {\n  const endpoint = `/projects/${orgId}/${projectId}/integrations/${integration.id}/`;\n  addLoadingMessage();\n\n  return api.requestPromise(endpoint, {method: 'PUT'}).then(\n    () => {\n      addSuccessMessage(t('Enabled %s for %s', integration.name, projectId));\n    },\n    () => {\n      addErrorMessage(t('Failed to enabled %s for %s', integration.name, projectId));\n    }\n  );\n}\n\n/**\n * Delete a respository\n *\n * @param {Object} client ApiClient\n * @param {String} orgId Organization Slug\n * @param {String} repositoryId Repository ID\n */\nexport function deleteRepository(client: Client, orgId: string, repositoryId: string) {\n  addLoadingMessage();\n  const promise = client.requestPromise(\n    `/organizations/${orgId}/repos/${repositoryId}/`,\n    {\n      method: 'DELETE',\n    }\n  );\n  promise.then(\n    () => clearIndicators(),\n    () => addErrorMessage(t('Unable to delete repository.'))\n  );\n  return promise;\n}\n\n/**\n * Cancel the deletion of a respository\n *\n * @param {Object} client ApiClient\n * @param {String} orgId Organization Slug\n * @param {String} repositoryId Repository ID\n */\nexport function cancelDeleteRepository(\n  client: Client,\n  orgId: string,\n  repositoryId: string\n) {\n  addLoadingMessage();\n  const promise = client.requestPromise(\n    `/organizations/${orgId}/repos/${repositoryId}/`,\n    {\n      method: 'PUT',\n      data: {status: 'visible'},\n    }\n  );\n  promise.then(\n    () => clearIndicators(),\n    () => addErrorMessage(t('Unable to cancel deletion.'))\n  );\n  return promise;\n}\n\nfunction applyRepositoryAddComplete(promise: Promise<Repository>) {\n  promise.then(\n    (repo: Repository) => {\n      const message = tct('[repo] has been successfully added.', {\n        repo: repo.name,\n      });\n      addSuccessMessage(message);\n    },\n    errorData => {\n      const text = errorData.responseJSON.errors\n        ? errorData.responseJSON.errors.__all__\n        : t('Unable to add repository.');\n      addErrorMessage(text);\n    }\n  );\n  return promise;\n}\n\n/**\n * Migrate a repository to a new integration.\n *\n * @param {Object} client ApiClient\n * @param {String} orgId Organization Slug\n * @param {String} repositoryId Repository ID\n * @param {Object} integration Integration provider data.\n */\nexport function migrateRepository(\n  client: Client,\n  orgId: string,\n  repositoryId: string,\n  integration: Integration\n) {\n  const data = {integrationId: integration.id};\n  addLoadingMessage();\n  const promise = client.requestPromise(\n    `/organizations/${orgId}/repos/${repositoryId}/`,\n    {\n      data,\n      method: 'PUT',\n    }\n  );\n  return applyRepositoryAddComplete(promise);\n}\n\n/**\n * Add a repository\n *\n * @param {Object} client ApiClient\n * @param {String} orgId Organization Slug\n * @param {String} name Repository identifier/name to add\n * @param {Object} integration Integration provider data.\n */\nexport function addRepository(\n  client: Client,\n  orgId: string,\n  name: string,\n  integration: Integration\n) {\n  const data = {\n    installation: integration.id,\n    identifier: name,\n    provider: `integrations:${integration.provider.key}`,\n  };\n  addLoadingMessage();\n  const promise = client.requestPromise(`/organizations/${orgId}/repos/`, {\n    method: 'POST',\n    data,\n  });\n  return applyRepositoryAddComplete(promise);\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {Client} from 'app/api';\nimport {PanelItem} from 'app/components/panels';\nimport {Repository, RepositoryStatus} from 'app/types';\nimport {deleteRepository, cancelDeleteRepository} from 'app/actionCreators/integrations';\nimport {t} from 'app/locale';\nimport Access from 'app/components/acl/access';\nimport Button from 'app/components/button';\nimport Confirm from 'app/components/confirm';\nimport {IconDelete} from 'app/icons';\nimport space from 'app/styles/space';\nimport Tooltip from 'app/components/tooltip';\n\ntype DefaultProps = {\n  showProvider?: boolean;\n};\n\ntype Props = DefaultProps & {\n  repository: Repository;\n  api: Client;\n  orgId: string;\n  onRepositoryChange?: (data: {id: string; status: RepositoryStatus}) => void;\n};\n\nclass RepositoryRow extends React.Component<Props> {\n  static defaultProps: DefaultProps = {\n    showProvider: false,\n  };\n\n  getStatusLabel(repo: Repository) {\n    switch (repo.status) {\n      case RepositoryStatus.PENDING_DELETION:\n        return 'Deletion Queued';\n      case RepositoryStatus.DELETION_IN_PROGRESS:\n        return 'Deletion in Progress';\n      case RepositoryStatus.DISABLED:\n        return 'Disabled';\n      case RepositoryStatus.HIDDEN:\n        return 'Disabled';\n      default:\n        return null;\n    }\n  }\n\n  cancelDelete = () => {\n    const {api, orgId, repository, onRepositoryChange} = this.props;\n    cancelDeleteRepository(api, orgId, repository.id).then(\n      data => {\n        if (onRepositoryChange) {\n          onRepositoryChange(data);\n        }\n      },\n      () => {}\n    );\n  };\n\n  deleteRepo = () => {\n    const {api, orgId, repository, onRepositoryChange} = this.props;\n    deleteRepository(api, orgId, repository.id).then(\n      data => {\n        if (onRepositoryChange) {\n          onRepositoryChange(data);\n        }\n      },\n      () => {}\n    );\n  };\n\n  get isActive() {\n    return this.props.repository.status === RepositoryStatus.ACTIVE;\n  }\n\n  render() {\n    const {repository, showProvider} = this.props;\n    const isActive = this.isActive;\n\n    return (\n      <Access access={['org:integrations']}>\n        {({hasAccess}) => (\n          <StyledPanelItem status={repository.status}>\n            <RepositoryTitleAndUrl>\n              <RepositoryTitle>\n                <strong>{repository.name}</strong>\n                {!isActive && <small> &mdash; {this.getStatusLabel(repository)}</small>}\n                {repository.status === RepositoryStatus.PENDING_DELETION && (\n                  <StyledButton\n                    size=\"xsmall\"\n                    onClick={this.cancelDelete}\n                    disabled={!hasAccess}\n                    data-test-id=\"repo-cancel\"\n                  >\n                    {t('Cancel')}\n                  </StyledButton>\n                )}\n              </RepositoryTitle>\n              <div>\n                {showProvider && <small>{repository.provider.name}</small>}\n                {showProvider && repository.url && <span>&nbsp;&mdash;&nbsp;</span>}\n                {repository.url && (\n                  <small>\n                    <a href={repository.url}>{repository.url.replace('https://', '')}</a>\n                  </small>\n                )}\n              </div>\n            </RepositoryTitleAndUrl>\n\n            <Tooltip\n              title={t(\n                'You must be an organization owner, manager or admin to remove a repository.'\n              )}\n              disabled={hasAccess}\n            >\n              <Confirm\n                disabled={\n                  !hasAccess ||\n                  (!isActive && repository.status !== RepositoryStatus.DISABLED)\n                }\n                onConfirm={this.deleteRepo}\n                message={t(\n                  'Are you sure you want to remove this repository? All associated commit data will be removed in addition to the repository.'\n                )}\n              >\n                <Button\n                  size=\"xsmall\"\n                  icon={<IconDelete size=\"xs\" />}\n                  label={t('delete')}\n                  disabled={!hasAccess}\n                />\n              </Confirm>\n            </Tooltip>\n          </StyledPanelItem>\n        )}\n      </Access>\n    );\n  }\n}\n\nconst StyledPanelItem = styled(PanelItem)<{status: RepositoryStatus}>`\n  /* shorter top padding because of title lineheight */\n  padding: ${space(1)} ${space(2)} ${space(2)};\n  justify-content: space-between;\n  align-items: center;\n  flex: 1;\n\n  ${p =>\n    p.status === RepositoryStatus.DISABLED &&\n    `\n    filter: grayscale(1);\n    opacity: 0.4;\n  `};\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst StyledButton = styled(Button)`\n  margin-left: ${space(1)};\n`;\n\nconst RepositoryTitleAndUrl = styled('div')`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst RepositoryTitle = styled('div')`\n  margin-bottom: ${space(1)};\n  /* accomodate cancel button height */\n  line-height: 26px;\n`;\n\nexport default RepositoryRow;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {Params} from 'react-router/lib/Router';\n\nimport {Repository, RepositoryStatus} from 'app/types';\nimport {Client} from 'app/api';\nimport {t, tct} from 'app/locale';\nimport AlertLink from 'app/components/alertLink';\nimport Button from 'app/components/button';\nimport RepositoryRow from 'app/components/repositoryRow';\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport {IconCommit} from 'app/icons';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\n\ntype Props = {\n  itemList: Repository[];\n  onRepositoryChange: (data: {id: string; status: RepositoryStatus}) => void;\n  api: Client;\n  params: Params;\n};\n\nconst OrganizationRepositories = ({itemList, onRepositoryChange, api, params}: Props) => {\n  const {orgId} = params;\n  const hasItemList = itemList && itemList.length > 0;\n\n  return (\n    <div>\n      <SettingsPageHeader title={t('Repositories')} />\n      <AlertLink to={`/settings/${orgId}/integrations/`}>\n        {t(\n          'Want to add a repository to start tracking commits? Install or configure your version control integration here.'\n        )}\n      </AlertLink>\n      {!hasItemList && (\n        <div className=\"m-b-2\">\n          <TextBlock>\n            {t(\n              'Connecting a repository allows Sentry to capture commit data via webhooks. ' +\n                'This enables features like suggested assignees and resolving issues via commit message. ' +\n                \"Once you've connected a repository, you can associate commits with releases via the API.\"\n            )}\n            &nbsp;\n            {tct('See our [link:documentation] for more details.', {\n              link: <a href=\"https://docs.sentry.io/learn/releases/\" />,\n            })}\n          </TextBlock>\n        </div>\n      )}\n\n      {hasItemList ? (\n        <Panel>\n          <PanelHeader>{t('Added Repositories')}</PanelHeader>\n          <PanelBody>\n            <div>\n              {itemList.map(repo => (\n                <RepositoryRow\n                  key={repo.id}\n                  repository={repo}\n                  api={api}\n                  showProvider\n                  orgId={orgId}\n                  onRepositoryChange={onRepositoryChange}\n                />\n              ))}\n            </div>\n          </PanelBody>\n        </Panel>\n      ) : (\n        <Panel>\n          <EmptyMessage\n            icon={<IconCommit size=\"xl\" />}\n            title={t('Sentry is better with commit data')}\n            description={t(\n              'Adding one or more repositories will enable enhanced releases and the ability to resolve Sentry Issues via git message.'\n            )}\n            action={\n              <Button href=\"https://docs.sentry.io/learn/releases/\">\n                {t('Learn more')}\n              </Button>\n            }\n          />\n        </Panel>\n      )}\n    </div>\n  );\n};\n\nOrganizationRepositories.propTypes = {\n  itemList: PropTypes.array,\n  api: PropTypes.object,\n  onRepositoryChange: PropTypes.func,\n};\n\nexport default OrganizationRepositories;\n","import React from 'react';\n\nimport {sortArray} from 'app/utils';\nimport AsyncView from 'app/views/asyncView';\nimport Pagination from 'app/components/pagination';\nimport {t} from 'app/locale';\nimport routeTitleGen from 'app/utils/routeTitle';\n\nimport OrganizationRepositories from './organizationRepositories';\n\nexport default class OrganizationRepositoriesContainer extends AsyncView {\n  getEndpoints() {\n    const {orgId} = this.props.params;\n    return [\n      ['itemList', `/organizations/${orgId}/repos/`, {query: {status: ''}}],\n      ['repoConfig', `/organizations/${orgId}/config/repos/`],\n    ];\n  }\n\n  // Callback used by child component to signal state change\n  onRepositoryChange = data => {\n    const itemList = this.state.itemList;\n    itemList.forEach(item => {\n      if (item.id === data.id) {\n        item.status = data.status;\n      }\n    });\n    this.setState({itemList});\n  };\n\n  onAddRepo = repo => {\n    const itemList = this.state.itemList;\n    itemList.push(repo);\n    this.setState({\n      itemList: sortArray(itemList, item => item.name),\n    });\n  };\n\n  getTitle() {\n    const {orgId} = this.props.params;\n    return routeTitleGen(t('Repositories'), orgId, false);\n  }\n\n  renderBody() {\n    return (\n      <React.Fragment>\n        <OrganizationRepositories\n          {...this.props}\n          {...this.state}\n          api={this.api}\n          onAddRepo={this.onAddRepo}\n          onRepositoryChange={this.onRepositoryChange}\n        />\n        {this.state.itemListPageLinks && (\n          <Pagination pageLinks={this.state.itemListPageLinks} {...this.props} />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n"],"sourceRoot":""}