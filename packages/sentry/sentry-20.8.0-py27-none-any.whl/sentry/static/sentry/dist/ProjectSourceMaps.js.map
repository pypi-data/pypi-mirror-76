{"version":3,"sources":["webpack:///./app/views/settings/projectSourceMaps/index.tsx"],"names":["ProjectSourceMapsContainer","type","t","this","props","children","project","organization","features","renderDisabled","renderNoAccess","React","isValidElement","cloneElement","Component","withOrganization"],"mappings":"yfAmBMA,E,oSAEF,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAOC,KAAK,WAAWC,YAAE,6C,+BAKtB,MACmCC,KAAKC,MAAxCC,EADA,EACAA,SAAUC,EADV,EACUA,QAASC,EADnB,EACmBA,aAE1B,OACE,YAAC,IAAD,CACEC,SAAU,CAAC,yBACXD,aAAcA,EACdE,eAAgBN,KAAKO,gBAEpBC,IAAMC,eAAeP,IACpBM,IAAME,aAAaR,EAAU,CAACE,eAAcD,iB,GAnBbK,IAAMG,WAAzCd,E,yCAyBSe,sBAAiBf","file":"ProjectSourceMaps.js","sourcesContent":["import React from 'react';\nimport {RouteComponentProps} from 'react-router/lib/Router';\n\nimport {t} from 'app/locale';\nimport {PageContent} from 'app/styles/organization';\nimport Feature from 'app/components/acl/feature';\nimport Alert from 'app/components/alert';\nimport withOrganization from 'app/utils/withOrganization';\nimport {Organization, Project} from 'app/types';\n\ntype RouteParams = {\n  orgId: string;\n};\n\ntype Props = RouteComponentProps<RouteParams, {}> & {\n  organization: Organization;\n  project: Project;\n};\n\nclass ProjectSourceMapsContainer extends React.Component<Props> {\n  renderNoAccess() {\n    return (\n      <PageContent>\n        <Alert type=\"warning\">{t(\"You don't have access to this feature\")}</Alert>\n      </PageContent>\n    );\n  }\n\n  render() {\n    const {children, project, organization} = this.props;\n\n    return (\n      <Feature\n        features={['artifacts-in-settings']}\n        organization={organization}\n        renderDisabled={this.renderNoAccess}\n      >\n        {React.isValidElement(children) &&\n          React.cloneElement(children, {organization, project})}\n      </Feature>\n    );\n  }\n}\n\nexport default withOrganization(ProjectSourceMapsContainer);\n"],"sourceRoot":""}