{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/components/dateTime.tsx","webpack:///./app/views/settings/components/forms/textCopyInput.jsx","webpack:///./app/components/alertLink.tsx","webpack:///./app/views/settings/account/apiTokenRow.jsx","webpack:///./app/views/settings/account/apiTokens.jsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","SettingsPageHeading","props","icon","action","tabs","noTitleStyles","TitleAndActions","Icon","Title","styled","Action","React","Component","defaultProps","p","space","StyledSettingsPageHeading","DateTime","getFormat","clock24Hours","dateOnly","timeOnly","seconds","shortDate","timeAndDate","date","utc","carriedProps","user","ConfigStore","get","options","format","moment","tz","timezone","Wrapper","StyledInput","inputStyles","theme","gray100","rtl","OverflowContainer","StyledCopyButton","Button","TextCopyInput","handleCopyClick","e","textRef","current","onCopy","handleSelectText","children","stopPropagation","node","ReactDOM","findDOMNode","setSelectionRange","value","length","selectText","createRef","style","inputValue","readOnly","ref","onClick","hideUnsupported","type","size","AlertLink","priority","withoutMarginBottom","openInNewTab","to","href","StyledLink","IconWrapper","AlertLinkText","IconLink","direction","linkProps","omit","alert","backgroundLight","gray700","border","ApiTokenRow","handleRemove","onRemove","token","StyledPanelItem","Controls","InputWrapper","getDynamicText","fixed","isCircled","t","Details","ScopesWrapper","Heading","ScopeList","scopes","join","Time","dateCreated","Date","PanelItem","fontSizeRelativeSmaller","fontSizeMedium","gray600","ApiTokens","handleRemoveToken","addLoadingMessage","oldTokenList","state","tokenList","setState","filter","tk","a","api","requestPromise","method","data","addSuccessMessage","addErrorMessage","loading","error","organization","isEmpty","data-test-id","slug","tct","link","map","key","withOrganization"],"mappings":"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","file":"ApiTokensIndex.js","sourcesContent":["import DocumentTitle from 'react-document-title';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'app/styles/space';\nimport {HeaderTitle} from 'app/styles/organization';\n\ntype Props = {\n  // The title\n  title: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n\n  className?: string;\n\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // Actions on opposite end of title bar from the title\n  action?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass SettingsPageHeading extends React.Component<Props> {\n  static propTypes = {\n    icon: PropTypes.node,\n    title: PropTypes.node.isRequired,\n    action: PropTypes.node,\n    tabs: PropTypes.node,\n    // Disables font styles in the title. Allows for more custom titles.\n    noTitleStyles: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          {icon && <Icon>{icon}</Icon>}\n          {title && (\n            <Title tabs={tabs} styled={noTitleStyles}>\n              <HeaderTitle>{title}</HeaderTitle>\n            </Title>\n          )}\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p =>\n    p.tabs\n      ? `${space(4)} ${space(2)} ${space(2)} 0`\n      : `${space(4)} ${space(2)} ${space(4)} 0`};\n  flex: 1;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst StyledSettingsPageHeading = styled(SettingsPageHeading)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default StyledSettingsPageHeading;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport moment from 'moment-timezone';\n\nimport ConfigStore from 'app/stores/configStore';\n\ntype DefaultProps = {\n  seconds: boolean;\n};\n\ntype Props = DefaultProps & {\n  date: moment.MomentInput;\n  dateOnly?: boolean;\n  timeOnly?: boolean;\n  shortDate?: boolean;\n  timeAndDate?: boolean;\n  utc?: boolean;\n};\n\nclass DateTime extends React.Component<Props> {\n  static propTypes = {\n    date: PropTypes.any.isRequired,\n    dateOnly: PropTypes.bool,\n    timeOnly: PropTypes.bool,\n    shortDate: PropTypes.bool,\n    seconds: PropTypes.bool,\n    timeAndDate: PropTypes.bool,\n    utc: PropTypes.bool,\n  };\n\n  static defaultProps: DefaultProps = {\n    seconds: true,\n  };\n\n  getFormat = ({clock24Hours}: {clock24Hours: boolean}): string => {\n    const {dateOnly, timeOnly, seconds, shortDate, timeAndDate} = this.props;\n\n    // October 26, 2017\n    if (dateOnly) {\n      return 'LL';\n    }\n\n    // Oct 26, 2017 11:30:30 AM\n    if (timeAndDate) {\n      return 'MMM DD, LT';\n    }\n\n    // 4:57 PM\n    if (timeOnly) {\n      return 'LT';\n    }\n\n    if (shortDate) {\n      return 'MM/DD/YYYY';\n    }\n\n    if (clock24Hours) {\n      return 'MMMM D YYYY HH:mm:ss z';\n    }\n\n    // Oct 26, 2017 11:30:30 AM\n    if (seconds) {\n      return 'll LTS z';\n    }\n\n    // Default is Oct 26, 2017 11:30 AM\n    return 'lll';\n  };\n\n  render() {\n    const {\n      date,\n      utc,\n      seconds: _seconds,\n      shortDate: _shortDate,\n      dateOnly: _dateOnly,\n      timeOnly: _timeOnly,\n      timeAndDate: _timeAndDate,\n      ...carriedProps\n    } = this.props;\n    const user = ConfigStore.get('user');\n    const options = user?.options;\n    const format = this.getFormat(options);\n\n    return (\n      <time {...carriedProps}>\n        {utc\n          ? moment.utc(date).format(format)\n          : moment.tz(date, options?.timezone ?? '').format(format)}\n      </time>\n    );\n  }\n}\n\nexport default DateTime;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport styled from '@emotion/styled';\n\nimport {inputStyles} from 'app/styles/input';\nimport {selectText} from 'app/utils/selectText';\nimport Button from 'app/components/button';\nimport Clipboard from 'app/components/clipboard';\nimport {IconCopy} from 'app/icons';\n\nconst Wrapper = styled('div')`\n  display: flex;\n`;\n\nconst StyledInput = styled('input')`\n  ${inputStyles};\n  background-color: ${p => p.theme.gray100};\n  border-right-width: 0;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  direction: ${p => (p.rtl ? 'rtl' : 'ltr')};\n\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.gray100};\n    border-right-width: 0;\n  }\n`;\n\nconst OverflowContainer = styled('div')`\n  flex-grow: 1;\n  border: none;\n`;\n\nconst StyledCopyButton = styled(Button)`\n  flex-shrink: 1;\n  border-radius: 0 0.25em 0.25em 0;\n  box-shadow: none;\n`;\n\nclass TextCopyInput extends React.Component {\n  static propTypes = {\n    /**\n     * Text to copy\n     */\n    children: PropTypes.string.isRequired,\n    /**\n     * CSS style object\n     */\n    style: PropTypes.object,\n    onCopy: PropTypes.func,\n    /**\n     * Always show the ending of a long overflowing text in input\n     */\n    rtl: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    onCopy: () => {},\n  };\n\n  constructor(props) {\n    super(props);\n    this.textRef = React.createRef();\n  }\n\n  // Select text when copy button is clicked\n  handleCopyClick = e => {\n    if (!this.textRef.current) {\n      return;\n    }\n\n    const {onCopy} = this.props;\n\n    this.handleSelectText();\n\n    onCopy(this.props.children, e);\n\n    e.stopPropagation();\n  };\n\n  handleSelectText = () => {\n    const {rtl} = this.props;\n\n    if (!this.textRef.current) {\n      return;\n    }\n\n    // We use findDOMNode here because `this.textRef` is not a dom node,\n    // it's a ref to AutoSelectText\n    const node = ReactDOM.findDOMNode(this.textRef.current); // eslint-disable-line react/no-find-dom-node\n\n    if (rtl) {\n      // we don't want to select the first character - \\u202A, nor the last - \\u202C\n      node.setSelectionRange(1, node.value.length - 1);\n    } else {\n      selectText(node);\n    }\n  };\n\n  render() {\n    const {style, children, rtl} = this.props;\n\n    /**\n     * We are using direction: rtl; to always show the ending of a long overflowing text in input.\n     *\n     * This however means that the trailing characters with BiDi class O.N. ('Other Neutrals') goes to the other side.\n     * Hello! becomes !Hello and vice versa. This is a problem for us when we want to show path in this component, because\n     * /user/local/bin becomes user/local/bin/. Wrapping in unicode characters for left-to-righ embedding solves this,\n     * however we need to be aware of them when selecting the text - we are solving that by offseting the selectionRange.\n     */\n    const inputValue = rtl ? '\\u202A' + children + '\\u202C' : children;\n\n    return (\n      <Wrapper>\n        <OverflowContainer>\n          <StyledInput\n            readOnly\n            ref={this.textRef}\n            style={style}\n            value={inputValue}\n            onClick={this.handleSelectText}\n            rtl={rtl}\n          />\n        </OverflowContainer>\n        <Clipboard hideUnsupported onClick={this.handleCopyClick} value={children}>\n          <StyledCopyButton type=\"button\" size=\"xsmall\" onClick={this.handleCopyClick}>\n            <IconCopy />\n          </StyledCopyButton>\n        </Clipboard>\n      </Wrapper>\n    );\n  }\n}\n\nexport default TextCopyInput;\n","import styled from '@emotion/styled';\nimport React from 'react';\nimport omit from 'lodash/omit';\n\nimport Link from 'app/components/links/link';\nimport ExternalLink from 'app/components/links/externalLink';\nimport {IconChevron} from 'app/icons';\nimport space from 'app/styles/space';\n\ntype Size = 'small' | 'normal';\ntype Priority = 'info' | 'warning' | 'success' | 'error' | 'muted';\n\ntype LinkProps = React.ComponentPropsWithoutRef<typeof Link>;\n\ntype OtherProps = {\n  icon?: string | React.ReactNode;\n  onClick?: (e: React.MouseEvent) => void;\n};\n\ntype DefaultProps = {\n  size: Size;\n  priority: Priority;\n  withoutMarginBottom: boolean;\n  openInNewTab: boolean;\n  href?: string;\n};\n\ntype Props = OtherProps & DefaultProps & Partial<Pick<LinkProps, 'to'>>;\n\ntype StyledLinkProps = DefaultProps &\n  Partial<Pick<LinkProps, 'to'>> &\n  Omit<LinkProps, 'to' | 'size'>;\n\nclass AlertLink extends React.Component<Props> {\n  static defaultProps: DefaultProps = {\n    priority: 'warning',\n    size: 'normal',\n    withoutMarginBottom: false,\n    openInNewTab: false,\n  };\n\n  render() {\n    const {\n      size,\n      priority,\n      icon,\n      children,\n      onClick,\n      withoutMarginBottom,\n      openInNewTab,\n      to,\n      href,\n    } = this.props;\n\n    return (\n      <StyledLink\n        to={to}\n        href={href}\n        onClick={onClick}\n        size={size}\n        priority={priority}\n        withoutMarginBottom={withoutMarginBottom}\n        openInNewTab={openInNewTab}\n      >\n        {icon && <IconWrapper>{icon}</IconWrapper>}\n        <AlertLinkText>{children}</AlertLinkText>\n        <IconLink>\n          <IconChevron direction=\"right\" />\n        </IconLink>\n      </StyledLink>\n    );\n  }\n}\n\nexport default AlertLink;\n\nconst StyledLink = styled(({openInNewTab, to, href, ...props}: StyledLinkProps) => {\n  const linkProps = omit(props, ['withoutMarginBottom', 'priority', 'size']);\n  if (href) {\n    return <ExternalLink {...linkProps} href={href} openInNewTab={openInNewTab} />;\n  }\n\n  return <Link {...linkProps} to={to || ''} />;\n})`\n  display: flex;\n  background-color: ${p => p.theme.alert[p.priority].backgroundLight};\n  color: ${p => p.theme.gray700};\n  border: 1px dashed ${p => p.theme.alert[p.priority].border};\n  padding: ${p => (p.size === 'small' ? `${space(1)} ${space(1.5)}` : space(2))};\n  margin-bottom: ${p => (p.withoutMarginBottom ? 0 : space(3))};\n  border-radius: 0.25em;\n  transition: 0.2s border-color;\n\n  &.focus-visible {\n    outline: none;\n    box-shadow: ${p => p.theme.alert[p.priority].border}7f 0 0 0 2px;\n  }\n`;\n\nconst IconWrapper = styled('span')`\n  display: flex;\n  margin: ${space(0.5)} ${space(1.5)} ${space(0.5)} 0;\n`;\n\nconst IconLink = styled(IconWrapper)`\n  margin: ${space(0.5)} 0;\n`;\n\nconst AlertLinkText = styled('div')`\n  line-height: 1.5;\n  flex-grow: 1;\n`;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport {PanelItem} from 'app/components/panels';\nimport {IconSubtract} from 'app/icons';\nimport {t} from 'app/locale';\nimport Button from 'app/components/button';\nimport DateTime from 'app/components/dateTime';\nimport TextCopyInput from 'app/views/settings/components/forms/textCopyInput';\nimport getDynamicText from 'app/utils/getDynamicText';\nimport space from 'app/styles/space';\n\nclass ApiTokenRow extends React.Component {\n  static propTypes = {\n    token: PropTypes.object.isRequired,\n    onRemove: PropTypes.func.isRequired,\n  };\n\n  handleRemove = () => {\n    const {onRemove, token} = this.props;\n    onRemove(token);\n  };\n\n  render() {\n    const {token} = this.props;\n\n    return (\n      <StyledPanelItem>\n        <Controls>\n          <InputWrapper>\n            <TextCopyInput>\n              {getDynamicText({value: token.token, fixed: 'CI_AUTH_TOKEN'})}\n            </TextCopyInput>\n          </InputWrapper>\n          <Button\n            size=\"small\"\n            onClick={this.handleRemove}\n            icon={<IconSubtract isCircled size=\"xs\" />}\n          >\n            {t('Remove')}\n          </Button>\n        </Controls>\n\n        <Details>\n          <ScopesWrapper>\n            <Heading>{t('Scopes')}</Heading>\n            <ScopeList>{token.scopes.join(', ')}</ScopeList>\n          </ScopesWrapper>\n          <div>\n            <Heading>{t('Created')}</Heading>\n            <Time>\n              <DateTime\n                date={getDynamicText({\n                  value: token.dateCreated,\n                  fixed: new Date(1508208080000), //National Pasta Day\n                })}\n              />\n            </Time>\n          </div>\n        </Details>\n      </StyledPanelItem>\n    );\n  }\n}\n\nconst StyledPanelItem = styled(PanelItem)`\n  flex-direction: column;\n  padding: ${space(2)};\n`;\n\nconst Controls = styled('div')`\n  display: flex;\n  align-items: center;\n  margin-bottom: ${space(1)};\n`;\n\nconst InputWrapper = styled('div')`\n  font-size: ${p => p.theme.fontSizeRelativeSmaller};\n  flex: 1;\n  margin-right: ${space(1)};\n`;\n\nconst Details = styled('div')`\n  display: flex;\n  margin-top: ${space(1)};\n`;\n\nconst ScopesWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst ScopeList = styled('div')`\n  font-size: ${p => p.theme.fontSizeRelativeSmaller};\n  line-height: 1.4;\n`;\n\nconst Time = styled('time')`\n  font-size: ${p => p.theme.fontSizeRelativeSmaller};\n  line-height: 1.4;\n`;\n\nconst Heading = styled('div')`\n  font-size: ${p => p.theme.fontSizeMedium};\n  text-transform: uppercase;\n  color: ${p => p.theme.gray600};\n  margin-bottom: ${space(1)};\n`;\n\nexport default ApiTokenRow;\n","import React from 'react';\n\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'app/actionCreators/indicator';\nimport {t, tct} from 'app/locale';\nimport AlertLink from 'app/components/alertLink';\nimport ApiTokenRow from 'app/views/settings/account/apiTokenRow';\nimport AsyncView from 'app/views/asyncView';\nimport Button from 'app/components/button';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\nimport withOrganization from 'app/utils/withOrganization';\n\nexport class ApiTokens extends AsyncView {\n  getTitle() {\n    return t('API Tokens');\n  }\n\n  getDefaultState() {\n    return {\n      loading: true,\n      error: false,\n      tokenList: [],\n    };\n  }\n\n  getEndpoints() {\n    return [['tokenList', '/api-tokens/']];\n  }\n\n  handleRemoveToken = token => {\n    addLoadingMessage();\n    const oldTokenList = this.state.tokenList;\n\n    this.setState(\n      state => ({\n        tokenList: state.tokenList.filter(tk => tk.token !== token.token),\n      }),\n      async () => {\n        try {\n          await this.api.requestPromise('/api-tokens/', {\n            method: 'DELETE',\n            data: {token: token.token},\n          });\n\n          addSuccessMessage(t('Removed token'));\n        } catch (_err) {\n          addErrorMessage(t('Unable to remove token. Please try again.'));\n          this.setState({\n            tokenList: oldTokenList,\n          });\n        }\n      }\n    );\n  };\n\n  renderBody() {\n    const {organization} = this.props;\n    const {tokenList} = this.state;\n\n    const isEmpty = tokenList.length === 0;\n\n    const action = (\n      <Button\n        priority=\"primary\"\n        size=\"small\"\n        to=\"/settings/account/api/auth-tokens/new-token/\"\n        data-test-id=\"create-token\"\n      >\n        {t('Create New Token')}\n      </Button>\n    );\n\n    return (\n      <div>\n        <SettingsPageHeader title=\"Auth Tokens\" action={action} />\n        <AlertLink\n          to={`/settings/${(organization && organization.slug) ||\n            ''}/developer-settings/new-internal`}\n        >\n          {t(\n            \"Auth Tokens are tied to the logged in user, meaning they'll stop working if the user leaves the organization! We suggest using internal integrations to create/manage tokens tied to the organization instead.\"\n          )}\n        </AlertLink>\n        <TextBlock>\n          {t(\n            \"Authentication tokens allow you to perform actions against the Sentry API on behalf of your account. They're the easiest way to get started using the API.\"\n          )}\n        </TextBlock>\n        <TextBlock>\n          {tct(\n            'For more information on how to use the web API, see our [link:documentation].',\n            {\n              link: <a href=\"https://docs.sentry.io/api/\" />,\n            }\n          )}\n        </TextBlock>\n        <TextBlock>\n          <small>\n            psst. Looking for the <strong>DSN</strong> for an SDK? You'll find that under{' '}\n            <strong>[Project] » Settings » Client Keys</strong>.\n          </small>\n        </TextBlock>\n        <Panel>\n          <PanelHeader>{t('Auth Token')}</PanelHeader>\n\n          <PanelBody>\n            {isEmpty && (\n              <EmptyMessage>\n                {t(\"You haven't created any authentication tokens yet.\")}\n              </EmptyMessage>\n            )}\n\n            {!isEmpty &&\n              tokenList.map(token => (\n                <ApiTokenRow\n                  key={token.token}\n                  token={token}\n                  onRemove={this.handleRemoveToken}\n                />\n              ))}\n          </PanelBody>\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default withOrganization(ApiTokens);\n"],"sourceRoot":""}