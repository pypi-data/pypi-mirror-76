{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/forms/textCopyInput.jsx","webpack:///./app/components/navTabs.tsx","webpack:///./app/components/links/listLink.tsx","webpack:///./app/components/avatar/avatarList.tsx","webpack:///./app/views/releasesV2/utils/switchReleasesButton.tsx","webpack:///./app/components/releaseStats.tsx","webpack:///./app/views/releases/detail/utils.jsx","webpack:///./app/views/releases/detail/releaseDetailActions.jsx","webpack:///./app/views/releases/detail/releaseHeader.jsx","webpack:///./app/views/releases/detail/index.jsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","Wrapper","StyledInput","inputStyles","p","theme","gray100","rtl","OverflowContainer","StyledCopyButton","Button","TextCopyInput","props","handleCopyClick","e","textRef","current","onCopy","handleSelectText","children","stopPropagation","node","ReactDOM","findDOMNode","setSelectionRange","value","length","selectText","React","createRef","style","inputValue","readOnly","ref","onClick","hideUnsupported","type","size","Component","defaultProps","NavTabs","underlined","className","tabProps","mergedClassName","classnames","ListLink","isActive","to","query","index","context","router","pathname","getClassName","_classNames","activeClassName","classNames","carriedProps","omit","onlyActiveOnIndex","displayName","contextTypes","PropTypes","object","isRequired","AvatarList","users","avatarSize","maxVisibleAvatars","renderTooltip","typeMembers","tooltipOptions","visibleUsers","slice","numCollapsedUsers","position","AvatarListWrapper","CollapsedUsers","Plus","map","user","StyledAvatar","key","id","email","hasTooltip","Circle","UserAvatar","gray300","gray500","Math","floor","SwitchReleasesButton","orgId","version","switchReleases","switchReleasesVersion","priority","icon","t","ReleaseStats","release","withHeading","commitCount","authorCount","authors","releaseSummary","tn","join","ReleaseSummaryHeading","display","fontSizeSmall","space","deleteRelease","Client","requestPromise","encodeURIComponent","method","getFilesByRepository","fileList","reduce","fbr","file","filename","repoName","author","hasOwnProperty","types","Set","repos","add","ReleaseDetailsActions","handleDelete","organization","redirectPath","slug","addLoadingMessage","then","browserHistory","push","addErrorMessage","gap","onConfirm","message","features","ReleaseHeader","releasePath","links","StyledVersion","anchor","FullVersionWrapper","url","href","date","dateCreated","newGroups","firstEvent","lastEvent","api","link","location","search","Version","ReleaseDetailsContainer","Fragment","OrganizationReleaseDetails","state","params","project","undefined","error","disableLog","disableReport","has404Errors","Object","values","errors","find","resp","status","allProjects","projects","projectsFromSelection","selection","selectedProjects","selectedProjectId","parseInt","filter","Boolean","pick","URL_PARAM","loading","onRetry","fetchData","cloneElement","childContextTypes","withProjects","withOrganization","withGlobalSelection","withProfiler"],"mappings":"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","file":"ReleaseDetail.js","sourcesContent":["import DocumentTitle from 'react-document-title';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport styled from '@emotion/styled';\n\nimport {inputStyles} from 'app/styles/input';\nimport {selectText} from 'app/utils/selectText';\nimport Button from 'app/components/button';\nimport Clipboard from 'app/components/clipboard';\nimport {IconCopy} from 'app/icons';\n\nconst Wrapper = styled('div')`\n  display: flex;\n`;\n\nconst StyledInput = styled('input')`\n  ${inputStyles};\n  background-color: ${p => p.theme.gray100};\n  border-right-width: 0;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  direction: ${p => (p.rtl ? 'rtl' : 'ltr')};\n\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.gray100};\n    border-right-width: 0;\n  }\n`;\n\nconst OverflowContainer = styled('div')`\n  flex-grow: 1;\n  border: none;\n`;\n\nconst StyledCopyButton = styled(Button)`\n  flex-shrink: 1;\n  border-radius: 0 0.25em 0.25em 0;\n  box-shadow: none;\n`;\n\nclass TextCopyInput extends React.Component {\n  static propTypes = {\n    /**\n     * Text to copy\n     */\n    children: PropTypes.string.isRequired,\n    /**\n     * CSS style object\n     */\n    style: PropTypes.object,\n    onCopy: PropTypes.func,\n    /**\n     * Always show the ending of a long overflowing text in input\n     */\n    rtl: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    onCopy: () => {},\n  };\n\n  constructor(props) {\n    super(props);\n    this.textRef = React.createRef();\n  }\n\n  // Select text when copy button is clicked\n  handleCopyClick = e => {\n    if (!this.textRef.current) {\n      return;\n    }\n\n    const {onCopy} = this.props;\n\n    this.handleSelectText();\n\n    onCopy(this.props.children, e);\n\n    e.stopPropagation();\n  };\n\n  handleSelectText = () => {\n    const {rtl} = this.props;\n\n    if (!this.textRef.current) {\n      return;\n    }\n\n    // We use findDOMNode here because `this.textRef` is not a dom node,\n    // it's a ref to AutoSelectText\n    const node = ReactDOM.findDOMNode(this.textRef.current); // eslint-disable-line react/no-find-dom-node\n\n    if (rtl) {\n      // we don't want to select the first character - \\u202A, nor the last - \\u202C\n      node.setSelectionRange(1, node.value.length - 1);\n    } else {\n      selectText(node);\n    }\n  };\n\n  render() {\n    const {style, children, rtl} = this.props;\n\n    /**\n     * We are using direction: rtl; to always show the ending of a long overflowing text in input.\n     *\n     * This however means that the trailing characters with BiDi class O.N. ('Other Neutrals') goes to the other side.\n     * Hello! becomes !Hello and vice versa. This is a problem for us when we want to show path in this component, because\n     * /user/local/bin becomes user/local/bin/. Wrapping in unicode characters for left-to-righ embedding solves this,\n     * however we need to be aware of them when selecting the text - we are solving that by offseting the selectionRange.\n     */\n    const inputValue = rtl ? '\\u202A' + children + '\\u202C' : children;\n\n    return (\n      <Wrapper>\n        <OverflowContainer>\n          <StyledInput\n            readOnly\n            ref={this.textRef}\n            style={style}\n            value={inputValue}\n            onClick={this.handleSelectText}\n            rtl={rtl}\n          />\n        </OverflowContainer>\n        <Clipboard hideUnsupported onClick={this.handleCopyClick} value={children}>\n          <StyledCopyButton type=\"button\" size=\"xsmall\" onClick={this.handleCopyClick}>\n            <IconCopy />\n          </StyledCopyButton>\n        </Clipboard>\n      </Wrapper>\n    );\n  }\n}\n\nexport default TextCopyInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\ntype Props = {\n  underlined?: boolean;\n  className?: string;\n};\n\ntype NavProps = Omit<React.HTMLProps<HTMLUListElement>, keyof Props> & Props;\n\nfunction NavTabs(props: NavProps) {\n  const {underlined, className, ...tabProps} = props;\n  const mergedClassName = classnames('nav nav-tabs', className, {\n    'border-bottom': underlined,\n  });\n  return <ul className={mergedClassName} {...tabProps} />;\n}\n\nNavTabs.propTypes = {\n  underlined: PropTypes.bool,\n};\n\nexport default NavTabs;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport omit from 'lodash/omit';\nimport {Link} from 'react-router';\nimport classNames from 'classnames';\nimport {LocationDescriptor} from 'history';\n\ntype DefaultProps = {\n  index: boolean;\n  activeClassName: string;\n};\n\ntype Props = DefaultProps & {\n  to: LocationDescriptor;\n  className?: string;\n  query?: string;\n  onClick?: () => void;\n  // If supplied by parent component, decides whether link element\n  // is \"active\" or not ... overriding default behavior of strict\n  // route matching\n  isActive?: (location: LocationDescriptor, indexOnly?: boolean) => boolean;\n};\n\nclass ListLink extends React.Component<Props> {\n  static displayName = 'ListLink';\n\n  static contextTypes = {\n    router: PropTypes.object.isRequired,\n  };\n\n  static defaultProps: DefaultProps = {\n    activeClassName: 'active',\n    index: false,\n  };\n\n  isActive = () => {\n    const {isActive, to, query, index} = this.props;\n\n    return (isActive || this.context.router.isActive)({pathname: to, query}, index);\n  };\n\n  getClassName = () => {\n    const _classNames = {};\n    const {className, activeClassName} = this.props;\n\n    if (className) {\n      _classNames[className] = true;\n    }\n\n    if (this.isActive()) {\n      _classNames[activeClassName] = true;\n    }\n\n    return classNames(_classNames);\n  };\n\n  render() {\n    const {index, children} = this.props;\n    const carriedProps = omit(this.props, 'activeClassName', 'isActive', 'index');\n\n    return (\n      <li className={this.getClassName()}>\n        <Link {...carriedProps} onlyActiveOnIndex={index}>\n          {children}\n        </Link>\n      </li>\n    );\n  }\n}\n\nexport default ListLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport {css} from '@emotion/core';\n\nimport {AvatarUser} from 'app/types';\nimport SentryTypes from 'app/sentryTypes';\nimport UserAvatar from 'app/components/avatar/userAvatar';\nimport Tooltip from 'app/components/tooltip';\n\nconst defaultProps = {\n  avatarSize: 28,\n  maxVisibleAvatars: 5,\n  typeMembers: 'users',\n  tooltipOptions: {},\n};\n\ntype DefaultProps = Readonly<typeof defaultProps>;\ntype Mutable<T> = {-readonly [P in keyof T]: T[P]};\n\ntype Props = {\n  className?: string;\n  users: AvatarUser[];\n  renderTooltip?: UserAvatar['props']['renderTooltip'];\n  tooltipOptions: Mutable<UserAvatar['props']['tooltipOptions']>;\n} & DefaultProps;\n\nexport default class AvatarList extends React.Component<Props> {\n  static propTypes = {\n    users: PropTypes.arrayOf(SentryTypes.User).isRequired,\n    avatarSize: PropTypes.number,\n    maxVisibleAvatars: PropTypes.number,\n    renderTooltip: PropTypes.func,\n    tooltipOptions: PropTypes.object,\n    typeMembers: PropTypes.string,\n  };\n\n  static defaultProps = defaultProps;\n\n  render() {\n    const {\n      className,\n      users,\n      avatarSize,\n      maxVisibleAvatars,\n      renderTooltip,\n      typeMembers,\n      tooltipOptions,\n    } = this.props;\n\n    const visibleUsers = users.slice(0, maxVisibleAvatars);\n    const numCollapsedUsers = users.length - visibleUsers.length;\n\n    if (!tooltipOptions.position) {\n      tooltipOptions.position = 'top';\n    }\n\n    return (\n      <AvatarListWrapper className={className}>\n        {!!numCollapsedUsers && (\n          <Tooltip title={`${numCollapsedUsers} other ${typeMembers}`}>\n            <CollapsedUsers size={avatarSize}>\n              {numCollapsedUsers < 99 && <Plus>+</Plus>}\n              {numCollapsedUsers}\n            </CollapsedUsers>\n          </Tooltip>\n        )}\n        {visibleUsers.map(user => (\n          <StyledAvatar\n            key={`${user.id}-${user.email}`}\n            user={user}\n            size={avatarSize}\n            renderTooltip={renderTooltip}\n            tooltipOptions={tooltipOptions}\n            hasTooltip\n          />\n        ))}\n      </AvatarListWrapper>\n    );\n  }\n}\n\n// used in releases list page to do some alignment\nexport const AvatarListWrapper = styled('div')`\n  display: flex;\n  flex-direction: row-reverse;\n`;\n\nconst Circle = css`\n  border-radius: 50%;\n  border: 2px solid white;\n  margin-left: -8px;\n  cursor: default;\n\n  &:hover {\n    z-index: 1;\n  }\n`;\n\nconst StyledAvatar = styled(UserAvatar)`\n  overflow: hidden;\n  ${Circle};\n`;\n\nconst CollapsedUsers = styled('div')<{size: number}>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  text-align: center;\n  font-weight: 600;\n  background-color: ${p => p.theme.gray300};\n  color: ${p => p.theme.gray500};\n  font-size: ${p => Math.floor(p.size / 2.3)}px;\n  width: ${p => p.size}px;\n  height: ${p => p.size}px;\n  ${Circle};\n`;\n\nconst Plus = styled('span')`\n  font-size: 10px;\n  margin-left: 1px;\n  margin-right: -1px;\n`;\n","import React from 'react';\n\nimport {t} from 'app/locale';\nimport Button from 'app/components/button';\nimport {IconReleases} from 'app/icons';\n\nimport {switchReleasesVersion} from './index';\n\ntype Props = {\n  orgId: string; // actual id, not slug\n  version: '1' | '2';\n};\n\nconst SwitchReleasesButton = ({orgId, version}: Props) => {\n  const switchReleases = () => {\n    switchReleasesVersion(version, orgId);\n  };\n\n  if (version === '2') {\n    return (\n      <Button\n        priority=\"primary\"\n        size=\"small\"\n        icon={<IconReleases size=\"sm\" />}\n        onClick={switchReleases}\n      >\n        {t('Go to New Releases')}\n      </Button>\n    );\n  }\n\n  return (\n    <div>\n      <Button priority=\"link\" size=\"small\" onClick={switchReleases}>\n        {t('Go to Legacy Releases')}\n      </Button>\n    </div>\n  );\n};\n\nexport default SwitchReleasesButton;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport {Release} from 'app/types';\nimport AvatarList from 'app/components/avatar/avatarList';\nimport {t, tn} from 'app/locale';\nimport space from 'app/styles/space';\n\ntype Props = {\n  release: Release;\n  withHeading: boolean;\n};\n\nconst ReleaseStats = ({release, withHeading = true}: Props) => {\n  const commitCount = release.commitCount || 0;\n  const authorCount = (release.authors && release.authors.length) || 0;\n  if (commitCount === 0) {\n    return null;\n  }\n\n  const releaseSummary = [\n    tn('%s commit', '%s commits', commitCount),\n    t('by'),\n    tn('%s author', '%s authors', authorCount),\n  ].join(' ');\n\n  return (\n    <div className=\"release-stats\">\n      {withHeading && <ReleaseSummaryHeading>{releaseSummary}</ReleaseSummaryHeading>}\n      <span style={{display: 'inline-block'}}>\n        <AvatarList users={release.authors} avatarSize={25} typeMembers=\"authors\" />\n      </span>\n    </div>\n  );\n};\n\nReleaseStats.propTypes = {\n  release: PropTypes.object,\n};\n\nconst ReleaseSummaryHeading = styled('div')`\n  color: ${p => p.theme.gray500};\n  font-size: ${p => p.theme.fontSizeSmall};\n  line-height: 1.2;\n  font-weight: 600;\n  text-transform: uppercase;\n  margin-bottom: ${space(0.5)};\n`;\n\nexport default ReleaseStats;\n","import {Client} from 'app/api';\n\n/**\n * Delete release version\n *\n * @param {String} orgId Organization slug\n * @param {String} version Version\n * @returns {Promise}\n */\nexport function deleteRelease(orgId, version) {\n  const api = new Client();\n\n  return api.requestPromise(\n    `/organizations/${orgId}/releases/${encodeURIComponent(version)}/`,\n    {\n      method: 'DELETE',\n    }\n  );\n}\n\n/**\n * Convert list of individual file changes into a per-file summary grouped by repository\n *\n * @param {Array<File>} fileList List of files\n * @returns {Object} Object grouped by repository and file name\n */\nexport function getFilesByRepository(fileList) {\n  return fileList.reduce(function(fbr, file) {\n    const {filename, repoName, author, type} = file;\n    if (!fbr.hasOwnProperty(repoName)) {\n      fbr[repoName] = {};\n    }\n    if (!fbr[repoName].hasOwnProperty(filename)) {\n      fbr[repoName][filename] = {\n        authors: {},\n        types: new Set(),\n        repos: new Set(),\n      };\n    }\n\n    fbr[repoName][filename].authors[author.email] = author;\n    fbr[repoName][filename].types.add(type);\n\n    return fbr;\n  }, {});\n}\n","import React from 'react';\nimport {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {t} from 'app/locale';\nimport {addErrorMessage, addLoadingMessage} from 'app/actionCreators/indicator';\nimport SentryTypes from 'app/sentryTypes';\nimport Button from 'app/components/button';\nimport Confirm from 'app/components/confirm';\nimport {IconDelete} from 'app/icons';\nimport Feature from 'app/components/acl/feature';\nimport SwitchReleasesButton from 'app/views/releasesV2/utils/switchReleasesButton';\nimport ButtonBar from 'app/components/buttonBar';\nimport space from 'app/styles/space';\n\nimport {deleteRelease} from './utils';\n\nexport default class ReleaseDetailsActions extends React.Component {\n  static propTypes = {\n    organization: SentryTypes.Organization.isRequired,\n    release: SentryTypes.Release.isRequired,\n  };\n\n  handleDelete = () => {\n    const {organization, release} = this.props;\n    const redirectPath = `/organizations/${organization.slug}/releases/`;\n    addLoadingMessage(t('Deleting Release...'));\n\n    deleteRelease(organization.slug, release.version)\n      .then(() => {\n        browserHistory.push(redirectPath);\n      })\n      .catch(() => {\n        addErrorMessage(\n          t('This release is referenced by active issues and cannot be removed.')\n        );\n      });\n  };\n\n  render() {\n    const {organization} = this.props;\n\n    return (\n      <Wrapper>\n        <ButtonBar gap={1}>\n          <Confirm\n            onConfirm={this.handleDelete}\n            message={t(\n              'Deleting this release is permanent. Are you sure you wish to continue?'\n            )}\n          >\n            <Button size=\"small\" icon={<IconDelete />}>\n              {t('Delete')}\n            </Button>\n          </Confirm>\n\n          <Feature features={['releases-v2']}>\n            <SwitchReleasesButton version=\"2\" orgId={organization.id} />\n          </Feature>\n        </ButtonBar>\n      </Wrapper>\n    );\n  }\n}\n\nconst Wrapper = styled('div')`\n  display: flex;\n  justify-content: flex-start;\n  margin-bottom: ${space(3)};\n`;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport {IconClock} from 'app/icons';\nimport {t} from 'app/locale';\nimport Count from 'app/components/count';\nimport ExternalLink from 'app/components/links/externalLink';\nimport ListLink from 'app/components/links/listLink';\nimport NavTabs from 'app/components/navTabs';\nimport PageHeading from 'app/components/pageHeading';\nimport ReleaseStats from 'app/components/releaseStats';\nimport TextOverflow from 'app/components/textOverflow';\nimport TimeSince from 'app/components/timeSince';\nimport Version from 'app/components/version';\nimport TextCopyInput from 'app/views/settings/components/forms/textCopyInput';\nimport SentryTypes from 'app/sentryTypes';\n\nimport ReleaseDetailsActions from './releaseDetailActions';\n\nexport default class ReleaseHeader extends React.Component {\n  static propTypes = {\n    release: PropTypes.object.isRequired,\n    organization: SentryTypes.Organization.isRequired,\n  };\n\n  static contextTypes = {\n    location: PropTypes.object,\n  };\n\n  render() {\n    const {release, organization} = this.props;\n\n    const releasePath = `/organizations/${\n      organization.slug\n    }/releases/${encodeURIComponent(release.version)}/`;\n\n    const links = [\n      {title: t('Overview'), to: releasePath},\n      {title: t('New Issues'), to: `${releasePath}new-events/`},\n      {title: t('All Issues'), to: `${releasePath}all-events/`},\n      {title: t('Artifacts'), to: `${releasePath}artifacts/`},\n      {title: t('Commits'), to: `${releasePath}commits/`},\n    ];\n\n    return (\n      <div className=\"release-details\">\n        <div className=\"row\">\n          <div className=\"col-sm-4 col-xs-12\">\n            <PageHeading>{t('Release')} </PageHeading>\n            <StyledVersion version={release.version} anchor={false} />\n            <FullVersionWrapper>\n              <TextCopyInput>{release.version}</TextCopyInput>\n            </FullVersionWrapper>\n            {!!release.url && (\n              <div>\n                <ExternalLink href={release.url}>\n                  <TextOverflow>{release.url}</TextOverflow>\n                </ExternalLink>\n              </div>\n            )}\n            <div className=\"release-meta\">\n              <IconClock size=\"11px\" />\n              <TimeSince date={release.dateCreated} />\n            </div>\n          </div>\n          <div className=\"col-sm-2 hidden-xs\">\n            <ReleaseStats release={release} />\n          </div>\n          <div className=\"col-sm-2 hidden-xs\">\n            <div className=\"release-stats\">\n              <h6 className=\"nav-header\">{t('New Issues')}</h6>\n              <span className=\"stream-count\">\n                <Count value={release.newGroups} />\n              </span>\n            </div>\n          </div>\n          <div className=\"col-sm-2 hidden-xs\">\n            <div className=\"release-stats\">\n              <h6 className=\"nav-header\">{t('First Event')}</h6>\n              {release.firstEvent ? (\n                <span className=\"stream-count\">\n                  <TimeSince date={release.firstEvent} />\n                </span>\n              ) : (\n                <span>—</span>\n              )}\n            </div>\n          </div>\n          <div className=\"col-sm-2 hidden-xs\">\n            <div className=\"release-stats\">\n              <h6 className=\"nav-header\">{t('Last Event')}</h6>\n              {release.lastEvent ? (\n                <span className=\"stream-count\">\n                  <TimeSince date={release.lastEvent} />\n                </span>\n              ) : (\n                <span>—</span>\n              )}\n            </div>\n          </div>\n        </div>\n        <ReleaseDetailsActions\n          api={this.api}\n          organization={organization}\n          release={release}\n        />\n        <NavTabs>\n          {links.map(link => (\n            <ListLink\n              key={link.to}\n              to={`${link.to}${this.context.location.search}`}\n              isActive={() => link.to === this.context.location.pathname}\n            >\n              {link.title}\n            </ListLink>\n          ))}\n        </NavTabs>\n      </div>\n    );\n  }\n}\n\nconst StyledVersion = styled(Version)`\n  font-weight: 600;\n  word-break: break-all;\n  line-height: 1.2;\n  display: block;\n  margin: 6px 0;\n`;\n\nconst FullVersionWrapper = styled('div')`\n  width: 285px;\n  max-width: 100%;\n  input {\n    padding-top: 0;\n    padding-bottom: 0;\n    line-height: 1.5;\n  }\n  button > span {\n    padding: 2px 5px;\n  }\n  svg {\n    width: 0.9em;\n    height: 0.9em;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport pick from 'lodash/pick';\nimport {withProfiler} from '@sentry/react';\n\nimport {PageContent} from 'app/styles/organization';\nimport {URL_PARAM} from 'app/constants/globalSelectionHeader';\nimport {tn} from 'app/locale';\nimport Alert from 'app/components/alert';\nimport AsyncView from 'app/views/asyncView';\nimport GlobalSelectionHeader from 'app/components/organizations/globalSelectionHeader';\nimport {IconFlag} from 'app/icons';\nimport LoadingError from 'app/components/loadingError';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport SentryTypes from 'app/sentryTypes';\nimport withGlobalSelection from 'app/utils/withGlobalSelection';\nimport withOrganization from 'app/utils/withOrganization';\nimport withProjects from 'app/utils/withProjects';\n\nimport ReleaseHeader from './releaseHeader';\n\nconst ReleaseDetailsContainer = props => (\n  <React.Fragment>\n    <GlobalSelectionHeader>\n      <OrganizationReleaseDetails {...props} />\n    </GlobalSelectionHeader>\n  </React.Fragment>\n);\n\nclass OrganizationReleaseDetails extends AsyncView {\n  static propTypes = {\n    organization: SentryTypes.Organization,\n    project: SentryTypes.Project,\n    /**\n     * Currently selected values(s)\n     */\n    selection: SentryTypes.GlobalSelection,\n    /**\n     * List of projects to display in project selector\n     */\n    projects: PropTypes.arrayOf(SentryTypes.Project).isRequired,\n  };\n\n  static childContextTypes = {\n    release: PropTypes.object,\n  };\n\n  getChildContext() {\n    return {\n      release: this.state.release,\n    };\n  }\n\n  getTitle() {\n    const {\n      params: {release},\n      organization,\n    } = this.props;\n    return `Release ${release} | ${organization.slug}`;\n  }\n\n  getEndpoints() {\n    const {orgId, release} = this.props.params;\n    const {project} = this.props.location.query;\n    const query = {};\n    if (project !== undefined) {\n      query.project = project;\n    }\n    return [\n      [\n        'release',\n        `/organizations/${orgId}/releases/${encodeURIComponent(release)}/`,\n        {query},\n      ],\n    ];\n  }\n\n  renderError(error, disableLog = false, disableReport = false) {\n    const has404Errors = Object.values(this.state.errors).find(\n      resp => resp && resp.status === 404\n    );\n    if (has404Errors) {\n      // This catches a 404 coming from the release endpoint and displays a custom error message.\n      const {projects: allProjects} = this.props;\n      const {projects: projectsFromSelection} = this.props.selection;\n\n      // It's possible that `allProjects` is not fully loaded yet\n      const selectedProjects = projectsFromSelection\n        .map(selectedProjectId =>\n          allProjects.find(({id}) => parseInt(id, 10) === selectedProjectId)\n        )\n        .filter(Boolean);\n\n      return (\n        <PageContent>\n          <Alert type=\"error\" icon={<IconFlag size=\"md\" />}>\n            {tn(\n              'This release may not be in your selected project',\n              'This release may not be in your selected projects',\n              projectsFromSelection.length\n            )}\n            {selectedProjects.length\n              ? `: ${selectedProjects.map(({slug}) => slug).join(', ')}`\n              : ''}\n          </Alert>\n        </PageContent>\n      );\n    }\n    return super.renderError(error, disableLog, disableReport);\n  }\n\n  renderBody() {\n    const {location, organization} = this.props;\n    const {release} = this.state;\n\n    const query = pick(location.query, Object.values(URL_PARAM));\n\n    if (this.state.loading) {\n      return <LoadingIndicator />;\n    }\n    if (this.state.error) {\n      return <LoadingError onRetry={this.fetchData} />;\n    }\n\n    return (\n      <PageContent>\n        <ReleaseHeader release={release} organization={organization} />\n        {React.cloneElement(this.props.children, {\n          release,\n          query,\n        })}\n      </PageContent>\n    );\n  }\n}\n\nexport default withProjects(\n  withOrganization(withGlobalSelection(withProfiler(ReleaseDetailsContainer)))\n);\n"],"sourceRoot":""}