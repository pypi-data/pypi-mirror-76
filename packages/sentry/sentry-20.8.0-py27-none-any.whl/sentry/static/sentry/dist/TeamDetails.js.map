{"version":3,"sources":["webpack:///./app/components/sentryDocumentTitle.tsx","webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/components/navTabs.tsx","webpack:///./app/components/links/listLink.tsx","webpack:///./app/actionCreators/teams.jsx","webpack:///./app/views/settings/organizationTeams/teamDetails.jsx"],"names":["SentryDocumentTitle","props","_title","title","objSlug","children","recreateRoute","to","options","lastRootIndex","routeIndex","routes","params","location","stepBack","paths","map","path","indexOf","findLastIndex","slice","baseRoute","search","hash","fullRoute","join","replaceRouterParams","NavTabs","underlined","className","tabProps","mergedClassName","classnames","ListLink","isActive","query","index","context","router","pathname","getClassName","_classNames","activeClassName","classNames","this","carriedProps","omit","onlyActiveOnIndex","React","Component","displayName","contextTypes","PropTypes","object","isRequired","defaultProps","doCallback","name","args","fetchTeamDetails","api","TeamActions","fetchDetails","teamId","request","orgId","success","data","fetchDetailsSuccess","error","fetchDetailsError","updateTeamSuccess","updateSuccess","updateTeam","endpoint","update","method","updateError","joinTeam","memberId","id","uniqueId","leaveTeam","createTeam","team","requestPromise","then","createTeamSuccess","addSuccessMessage","tct","slug","organization","err","createTeamError","addErrorMessage","removeTeam","removeTeamSuccess","removeTeamError","TeamDetails","createReactClass","mixins","Reflux","listenTo","TeamStore","getInitialState","getBySlug","loading","initialized","componentDidUpdate","prevProps","fetchData","onTeamStoreUpdate","setState","handleRequestAccess","state","requesting","onTeamChange","browserHistory","replace","render","hasAccess","type","RequestAccessWrapper","teamSlug","disabled","isPending","size","onClick","t","onRetry","routePrefix","hideAvatar","avatarSize","cloneElement","withApi"],"mappings":"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","file":"TeamDetails.js","sourcesContent":["import React, {FunctionComponent} from 'react';\nimport DocumentTitle from 'react-document-title';\n\ntype DocumentTitleProps = {\n  // Main page title\n  title: string;\n  // Organization or project slug to give title some context\n  objSlug: string;\n  children?: React.ReactNode;\n};\n\nconst SentryDocumentTitle: FunctionComponent<DocumentTitleProps> = (\n  props: DocumentTitleProps\n) => {\n  const _title = `${props.title} - ${props.objSlug} - Sentry`;\n  return <DocumentTitle title={_title}>{props.children}</DocumentTitle>;\n};\n\nexport default SentryDocumentTitle;\n","import {Location} from 'history';\nimport {PlainRoute} from 'react-router/lib/Route';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'app/utils/replaceRouterParams';\n\ntype Options = {\n  routes: PlainRoute[];\n  location: Location;\n\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(to: string | PlainRoute, options: Options): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\ntype Props = {\n  underlined?: boolean;\n  className?: string;\n};\n\ntype NavProps = Omit<React.HTMLProps<HTMLUListElement>, keyof Props> & Props;\n\nfunction NavTabs(props: NavProps) {\n  const {underlined, className, ...tabProps} = props;\n  const mergedClassName = classnames('nav nav-tabs', className, {\n    'border-bottom': underlined,\n  });\n  return <ul className={mergedClassName} {...tabProps} />;\n}\n\nNavTabs.propTypes = {\n  underlined: PropTypes.bool,\n};\n\nexport default NavTabs;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport omit from 'lodash/omit';\nimport {Link} from 'react-router';\nimport classNames from 'classnames';\nimport {LocationDescriptor} from 'history';\n\ntype DefaultProps = {\n  index: boolean;\n  activeClassName: string;\n};\n\ntype Props = DefaultProps & {\n  to: LocationDescriptor;\n  className?: string;\n  query?: string;\n  onClick?: () => void;\n  // If supplied by parent component, decides whether link element\n  // is \"active\" or not ... overriding default behavior of strict\n  // route matching\n  isActive?: (location: LocationDescriptor, indexOnly?: boolean) => boolean;\n};\n\nclass ListLink extends React.Component<Props> {\n  static displayName = 'ListLink';\n\n  static contextTypes = {\n    router: PropTypes.object.isRequired,\n  };\n\n  static defaultProps: DefaultProps = {\n    activeClassName: 'active',\n    index: false,\n  };\n\n  isActive = () => {\n    const {isActive, to, query, index} = this.props;\n\n    return (isActive || this.context.router.isActive)({pathname: to, query}, index);\n  };\n\n  getClassName = () => {\n    const _classNames = {};\n    const {className, activeClassName} = this.props;\n\n    if (className) {\n      _classNames[className] = true;\n    }\n\n    if (this.isActive()) {\n      _classNames[activeClassName] = true;\n    }\n\n    return classNames(_classNames);\n  };\n\n  render() {\n    const {index, children} = this.props;\n    const carriedProps = omit(this.props, 'activeClassName', 'isActive', 'index');\n\n    return (\n      <li className={this.getClassName()}>\n        <Link {...carriedProps} onlyActiveOnIndex={index}>\n          {children}\n        </Link>\n      </li>\n    );\n  }\n}\n\nexport default ListLink;\n","import TeamActions from 'app/actions/teamActions';\nimport {tct} from 'app/locale';\nimport {addSuccessMessage, addErrorMessage} from 'app/actionCreators/indicator';\nimport {uniqueId} from 'app/utils/guid';\n\nconst doCallback = (params = {}, name, ...args) => {\n  if (typeof params[name] === 'function') {\n    params[name](...args);\n  }\n};\n\n// Fetch teams for org\nexport function fetchTeams(api, params, options) {\n  TeamActions.fetchAll(params.orgId);\n  return api.request(`/teams/${params.orgId}/`, {\n    success: data => {\n      TeamActions.fetchAllSuccess(params.orgId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.fetchAllError(params.orgId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function fetchTeamDetails(api, params, options) {\n  TeamActions.fetchDetails(params.teamId);\n  return api.request(`/teams/${params.orgId}/${params.teamId}/`, {\n    success: data => {\n      TeamActions.fetchDetailsSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.fetchDetailsError(params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function updateTeamSuccess(teamId, data) {\n  TeamActions.updateSuccess(teamId, data);\n}\n\nexport function updateTeam(api, params, options) {\n  const endpoint = `/teams/${params.orgId}/${params.teamId}/`;\n  TeamActions.update(params.teamId, params.data);\n\n  return api.request(endpoint, {\n    method: 'PUT',\n    data: params.data,\n    success: data => {\n      updateTeamSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.updateError(params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function joinTeam(api, params, options) {\n  const endpoint = `/organizations/${params.orgId}/members/${params.memberId ||\n    'me'}/teams/${params.teamId}/`;\n  const id = uniqueId();\n\n  TeamActions.update(id, params.teamId);\n\n  return api.request(endpoint, {\n    method: 'POST',\n    data: params.data,\n    success: data => {\n      TeamActions.updateSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.updateError(id, params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function leaveTeam(api, params, options) {\n  const endpoint = `/organizations/${params.orgId}/members/${params.memberId ||\n    'me'}/teams/${params.teamId}/`;\n  const id = uniqueId();\n\n  TeamActions.update(id, params.teamId);\n\n  return api.request(endpoint, {\n    method: 'DELETE',\n    success: data => {\n      TeamActions.updateSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.updateError(id, params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function createTeam(api, team, params) {\n  TeamActions.createTeam(team);\n\n  return api\n    .requestPromise(`/organizations/${params.orgId}/teams/`, {\n      method: 'POST',\n      data: team,\n    })\n    .then(\n      data => {\n        TeamActions.createTeamSuccess(data);\n        addSuccessMessage(\n          tct('[team] has been added to the [organization] organization', {\n            team: `#${data.slug}`,\n            organization: params.orgId,\n          })\n        );\n        return data;\n      },\n      err => {\n        TeamActions.createTeamError(team.slug || team.name, err);\n        addErrorMessage(\n          tct('Unable to create [team] in the [organization] organization', {\n            team: `#${team.slug || team.name}`,\n            organization: params.orgId,\n          })\n        );\n        throw err;\n      }\n    );\n}\n\nexport function removeTeam(api, params) {\n  TeamActions.removeTeam(params.teamId);\n\n  return api\n    .requestPromise(`/teams/${params.orgId}/${params.teamId}/`, {\n      method: 'DELETE',\n    })\n    .then(\n      data => {\n        TeamActions.removeTeamSuccess(params.teamId, data);\n        addSuccessMessage(\n          tct('[team] has been removed from the [organization] organization', {\n            team: `#${params.teamId}`,\n            organization: params.orgId,\n          })\n        );\n        return data;\n      },\n      err => {\n        TeamActions.removeTeamError(params.teamId, err);\n        addErrorMessage(\n          tct('Unable to remove [team] from the [organization] organization', {\n            team: `#${params.teamId}`,\n            organization: params.orgId,\n          })\n        );\n        throw err;\n      }\n    );\n}\n","import {browserHistory} from 'react-router';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Reflux from 'reflux';\nimport createReactClass from 'create-react-class';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport {fetchTeamDetails, joinTeam} from 'app/actionCreators/teams';\nimport {t, tct} from 'app/locale';\nimport Alert from 'app/components/alert';\nimport Button from 'app/components/button';\nimport SentryDocumentTitle from 'app/components/sentryDocumentTitle';\nimport IdBadge from 'app/components/idBadge';\nimport ListLink from 'app/components/links/listLink';\nimport LoadingError from 'app/components/loadingError';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport NavTabs from 'app/components/navTabs';\nimport TeamStore from 'app/stores/teamStore';\nimport recreateRoute from 'app/utils/recreateRoute';\nimport withApi from 'app/utils/withApi';\n\nconst TeamDetails = createReactClass({\n  displayName: 'TeamDetails',\n\n  propTypes: {\n    api: PropTypes.object,\n    routes: PropTypes.array,\n  },\n\n  mixins: [Reflux.listenTo(TeamStore, 'onTeamStoreUpdate')],\n\n  getInitialState() {\n    const team = TeamStore.getBySlug(this.props.params.teamId);\n\n    return {\n      loading: !TeamStore.initialized,\n      error: false,\n      team,\n    };\n  },\n\n  componentDidUpdate(prevProps) {\n    const {params} = this.props;\n\n    if (\n      prevProps.params.teamId !== params.teamId ||\n      prevProps.params.orgId !== params.orgId\n    ) {\n      this.fetchData();\n    }\n  },\n\n  onTeamStoreUpdate() {\n    const team = TeamStore.getBySlug(this.props.params.teamId);\n    const loading = !TeamStore.initialized;\n    const error = !loading && !team;\n    this.setState({\n      team,\n      error,\n      loading,\n    });\n  },\n\n  handleRequestAccess() {\n    const {api, params} = this.props;\n    const {team} = this.state;\n\n    if (!team) {\n      return;\n    }\n\n    this.setState({\n      requesting: true,\n    });\n\n    joinTeam(\n      api,\n      {\n        orgId: params.orgId,\n        teamId: team.slug,\n      },\n      {\n        success: () => {\n          addSuccessMessage(\n            tct('You have requested access to [team]', {\n              team: `#${team.slug}`,\n            })\n          );\n          this.setState({\n            requesting: false,\n          });\n        },\n        error: () => {\n          addErrorMessage(\n            tct('Unable to request access to [team]', {\n              team: `#${team.slug}`,\n            })\n          );\n          this.setState({\n            requesting: false,\n          });\n        },\n      }\n    );\n  },\n\n  fetchData() {\n    this.setState({\n      loading: true,\n      error: false,\n    });\n    fetchTeamDetails(this.props.api, this.props.params);\n  },\n\n  onTeamChange(data) {\n    const team = this.state.team;\n    if (data.slug !== team.slug) {\n      const orgId = this.props.params.orgId;\n      browserHistory.replace(`/organizations/${orgId}/teams/${data.slug}/settings/`);\n    } else {\n      this.setState({\n        team: {\n          ...team,\n          ...data,\n        },\n      });\n    }\n  },\n\n  render() {\n    const {params, routes, children} = this.props;\n    const team = this.state.team;\n\n    if (this.state.loading) {\n      return <LoadingIndicator />;\n    } else if (!team || !team.hasAccess) {\n      return (\n        <Alert type=\"warning\">\n          {team ? (\n            <RequestAccessWrapper>\n              {tct('You do not have access to the [teamSlug] team.', {\n                teamSlug: <strong>{`#${team.slug}`}</strong>,\n              })}\n              <Button\n                disabled={this.state.requesting || team.isPending}\n                size=\"small\"\n                onClick={this.handleRequestAccess}\n              >\n                {team.isPending ? t('Request Pending') : t('Request Access')}\n              </Button>\n            </RequestAccessWrapper>\n          ) : (\n            <div>{t('You do not have access to this team.')}</div>\n          )}\n        </Alert>\n      );\n    } else if (this.state.error) {\n      return <LoadingError onRetry={this.fetchData} />;\n    }\n\n    const routePrefix = recreateRoute('', {routes, params, stepBack: -1}); //`/organizations/${orgId}/teams/${teamId}`;\n    return (\n      <div>\n        <SentryDocumentTitle title={t('Team Details')} objSlug={params.orgId} />\n        <h3>\n          <IdBadge hideAvatar team={team} avatarSize={36} />\n        </h3>\n\n        <NavTabs underlined>\n          <ListLink to={`${routePrefix}members/`}>{t('Members')}</ListLink>\n          <ListLink to={`${routePrefix}projects/`}>{t('Projects')}</ListLink>\n          <ListLink to={`${routePrefix}settings/`}>{t('Settings')}</ListLink>\n        </NavTabs>\n\n        {children &&\n          React.cloneElement(children, {\n            team,\n            onTeamChange: this.onTeamChange,\n          })}\n      </div>\n    );\n  },\n});\n\nexport default withApi(TeamDetails);\n\nconst RequestAccessWrapper = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n"],"sourceRoot":""}