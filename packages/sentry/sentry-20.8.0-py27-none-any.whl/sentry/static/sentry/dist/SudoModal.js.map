{"version":3,"sources":["webpack:///./app/components/u2f/u2fContainer.jsx","webpack:///./app/components/modals/sudoModal.jsx"],"names":["U2fContainer","props","state","authenticators","api","Client","this","requestPromise","then","resp","setState","clear","className","length","map","id","other","challenge","key","challengeData","React","Component","SudoModal","args","handleSuccess","closeModal","superuser","router","retryRequest","replace","getCurrentLocation","forceUpdate","Date","busy","handleError","error","handleU2fTap","data","method","err","user","Header","Body","Fragment","closeButton","onHide","t","hasPasswordAuth","css","marginBottom","space","type","icon","size","apiMethod","apiEndpoint","submitLabel","onSubmit","handleSubmit","onSubmitSuccess","onSubmitError","hideErrors","resetOnError","hideFooter","autoFocus","inline","label","flexibleControlStateSize","name","displayMode","onTap","priority","href","encodeURIComponent","location","pathname","SudoModalContainer","createReactClass","displayName","render","ConfigStore","get","withApi","withRouter"],"mappings":"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","file":"SudoModal.js","sourcesContent":["import React from 'react';\n\nimport {Client} from 'app/api';\n\nimport U2fSign from './u2fsign';\n\nclass U2fContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      authenticators: null,\n    };\n    this.api = new Client();\n  }\n\n  componentDidMount() {\n    this.api\n      .requestPromise('/authenticators/')\n      .then(resp => {\n        this.setState({\n          authenticators: resp || [],\n        });\n      })\n      .catch(() => {\n        // ignore errors\n      });\n  }\n\n  componentWillUnmount() {\n    this.api.clear();\n    this.api = null;\n  }\n\n  render() {\n    const {className, authenticators} = this.state;\n    if (authenticators && authenticators.length) {\n      return (\n        <div className={className}>\n          {authenticators.map(({id, ...other}) => {\n            if (id === 'u2f' && other.challenge) {\n              return <U2fSign key={id} {...this.props} challengeData={other.challenge} />;\n            }\n\n            return null;\n          })}\n        </div>\n      );\n    }\n\n    return null;\n  }\n}\n\nexport default U2fContainer;\n","import {withRouter} from 'react-router';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport createReactClass from 'create-react-class';\n\nimport {t} from 'app/locale';\nimport Alert from 'app/components/alert';\nimport withApi from 'app/utils/withApi';\nimport Button from 'app/components/button';\nimport ConfigStore from 'app/stores/configStore';\nimport Form from 'app/views/settings/components/forms/form';\nimport InputField from 'app/views/settings/components/forms/inputField';\nimport {IconFlag} from 'app/icons';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\nimport U2fContainer from 'app/components/u2f/u2fContainer';\nimport space from 'app/styles/space';\n\nclass SudoModal extends React.Component {\n  static propTypes = {\n    api: PropTypes.object,\n    closeModal: PropTypes.func.isRequired,\n    /**\n     * expects a function that returns a Promise\n     */\n    retryRequest: PropTypes.func,\n\n    // User is a superuser without an active su session\n    superuser: PropTypes.bool,\n    router: PropTypes.object,\n    user: PropTypes.object,\n\n    Header: PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n    Body: PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n  };\n\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: false,\n      busy: false,\n    };\n  }\n\n  handleSuccess = () => {\n    const {closeModal, superuser, router, retryRequest} = this.props;\n\n    if (!retryRequest) {\n      closeModal();\n      return;\n    }\n\n    if (superuser) {\n      router.replace({...router.getCurrentLocation(), state: {forceUpdate: new Date()}});\n      return;\n    }\n\n    this.setState(\n      {\n        busy: true,\n      },\n      () => {\n        retryRequest().then(() => {\n          this.setState(\n            {\n              busy: false,\n            },\n            closeModal\n          );\n        });\n      }\n    );\n  };\n\n  handleError = () => {\n    this.setState({\n      busy: false,\n      error: true,\n    });\n  };\n\n  handleU2fTap = data => {\n    this.setState({busy: true});\n    // u2Interface expects this to return a promise\n    return this.props.api\n      .requestPromise('/auth/', {\n        method: 'PUT',\n        data,\n      })\n      .then(() => {\n        this.handleSuccess();\n      })\n      .catch(err => {\n        this.setState({busy: false});\n\n        // u2fInterface relies on this\n        throw err;\n      });\n  };\n\n  render() {\n    const {closeModal, superuser, user, Header, Body} = this.props;\n\n    return (\n      <React.Fragment>\n        <Header closeButton onHide={closeModal}>\n          {t('Confirm Password to Continue')}\n        </Header>\n\n        <Body>\n          {!user.hasPasswordAuth ? (\n            <div>\n              <TextBlock>{t('You will need to reauthenticate to continue.')}</TextBlock>\n              <Button\n                priority=\"primary\"\n                href={`/auth/login/?next=${encodeURIComponent(location.pathname)}`}\n              >\n                {t('Continue')}\n              </Button>\n            </div>\n          ) : (\n            <React.Fragment>\n              <TextBlock css={{marginBottom: space(1)}}>\n                {superuser\n                  ? t(\n                      'You are attempting to access a resource that requires superuser access, please re-authenticate as a superuser.'\n                    )\n                  : t('Help us keep your account safe by confirming your identity.')}\n              </TextBlock>\n\n              {this.state.error && (\n                <Alert css={{marginBottom: 0}} type=\"error\" icon={<IconFlag size=\"md\" />}>\n                  {t('Incorrect password')}\n                </Alert>\n              )}\n\n              <Form\n                apiMethod=\"PUT\"\n                apiEndpoint=\"/auth/\"\n                submitLabel={t('Confirm Password')}\n                onSubmit={this.handleSubmit}\n                onSubmitSuccess={this.handleSuccess}\n                onSubmitError={this.handleError}\n                hideErrors\n                resetOnError\n                hideFooter={!user.hasPasswordAuth}\n              >\n                <InputField\n                  autoFocus\n                  type=\"password\"\n                  inline={false}\n                  label={t('Password')}\n                  flexibleControlStateSize\n                  name=\"password\"\n                  css={{\n                    paddingLeft: 0,\n                    paddingRight: 0,\n                    borderBottom: 'none',\n                  }}\n                />\n                <U2fContainer displayMode=\"sudo\" onTap={this.handleU2fTap} />\n              </Form>\n            </React.Fragment>\n          )}\n        </Body>\n      </React.Fragment>\n    );\n  }\n}\n\nconst SudoModalContainer = createReactClass({\n  displayName: 'SudoModalContainer',\n\n  render() {\n    const user = ConfigStore.get('user');\n    return <SudoModal {...this.props} user={user} />;\n  },\n});\n\nexport default withApi(withRouter(SudoModalContainer));\nexport {SudoModal};\n"],"sourceRoot":""}