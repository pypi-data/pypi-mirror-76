{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/components/switch.tsx","webpack:///./app/views/settings/components/forms/textField.tsx","webpack:///./app/views/settings/components/forms/booleanField.jsx","webpack:///./app/views/settings/components/forms/apiForm.jsx","webpack:///./app/views/settings/components/forms/controls/multipleCheckbox.jsx","webpack:///./app/views/settings/project/serviceHookSettingsForm.jsx","webpack:///./app/views/settings/project/projectCreateServiceHook.jsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","SettingsPageHeading","props","icon","action","tabs","noTitleStyles","TitleAndActions","Icon","Title","styled","Action","React","Component","defaultProps","p","space","StyledSettingsPageHeading","Switch","forwardRef","size","isActive","isLoading","isDisabled","toggle","id","name","className","SwitchButton","ref","type","onClick","undefined","role","aria-checked","data-test-id","Toggle","getSize","getToggleSize","getToggleTop","getTranslateX","theme","borderDark","borderLight","green400","gray400","TextField","BooleanField","handleChange","value","onChange","onBlur","e","newValue","coerceValue","confirm","fieldProps","resetOnError","field","disabled","bind","switchProps","renderMessage","onConfirm","open","InputField","propTypes","PropTypes","shape","true","node","false","ApiForm","context","onSubmit","data","onSuccess","onError","addLoadingMessage","t","api","request","apiEndpoint","method","apiMethod","success","clearIndicators","error","Client","clear","otherProps","MultipleCheckboxWrapper","Label","CheckboxLabel","MultipleCheckbox","selectedValue","target","checked","filter","v","choices","map","choiceValue","choiceLabel","key","width","defined","indexOf","EVENT_CHOICES","ServiceHookSettingsForm","onSubmitSuccess","orgId","projectId","browserHistory","push","initialData","hookId","endpoint","footerStyle","marginTop","paddingRight","submitLabel","label","required","help","inline","ProjectCreateServiceHook","params","events"],"mappings":"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","file":"ProjectCreateServiceHook.js","sourcesContent":["import DocumentTitle from 'react-document-title';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'app/styles/space';\nimport {HeaderTitle} from 'app/styles/organization';\n\ntype Props = {\n  // The title\n  title: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n\n  className?: string;\n\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // Actions on opposite end of title bar from the title\n  action?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass SettingsPageHeading extends React.Component<Props> {\n  static propTypes = {\n    icon: PropTypes.node,\n    title: PropTypes.node.isRequired,\n    action: PropTypes.node,\n    tabs: PropTypes.node,\n    // Disables font styles in the title. Allows for more custom titles.\n    noTitleStyles: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          {icon && <Icon>{icon}</Icon>}\n          {title && (\n            <Title tabs={tabs} styled={noTitleStyles}>\n              <HeaderTitle>{title}</HeaderTitle>\n            </Title>\n          )}\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p =>\n    p.tabs\n      ? `${space(4)} ${space(2)} ${space(2)} 0`\n      : `${space(4)} ${space(2)} ${space(4)} 0`};\n  flex: 1;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst StyledSettingsPageHeading = styled(SettingsPageHeading)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default StyledSettingsPageHeading;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\ntype Props = {\n  forwardRef?: React.Ref<HTMLButtonElement>;\n  className?: string;\n  id?: string;\n  name?: string;\n  size?: 'sm' | 'lg';\n  isActive?: boolean;\n  isLoading?: boolean;\n  isDisabled?: boolean;\n  toggle: React.HTMLProps<HTMLButtonElement>['onClick'];\n};\n\nconst Switch = ({\n  forwardRef,\n  size = 'sm',\n  isActive,\n  isLoading,\n  isDisabled,\n  toggle,\n  id,\n  name,\n  className,\n}: Props) => (\n  <SwitchButton\n    ref={forwardRef}\n    id={id}\n    name={name}\n    type=\"button\"\n    className={className}\n    onClick={isDisabled ? undefined : toggle}\n    role=\"checkbox\"\n    aria-checked={isActive}\n    isLoading={isLoading}\n    isDisabled={isDisabled}\n    isActive={isActive}\n    size={size}\n    data-test-id=\"switch\"\n  >\n    <Toggle isDisabled={isDisabled} isActive={isActive} size={size} />\n  </SwitchButton>\n);\n\nSwitch.propTypes = {\n  id: PropTypes.string,\n  forwardRef: PropTypes.any,\n  size: PropTypes.oneOf(['sm', 'lg']),\n  isActive: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  toggle: PropTypes.func.isRequired,\n};\n\ntype StyleProps = Partial<Props>;\n\nconst getSize = (p: StyleProps) => (p.size === 'sm' ? 16 : 24);\nconst getToggleSize = (p: StyleProps) => getSize(p) - (p.size === 'sm' ? 6 : 10);\nconst getToggleTop = (p: StyleProps) => (p.size === 'sm' ? 2 : 4);\nconst getTranslateX = (p: StyleProps) =>\n  p.isActive ? getToggleTop(p) + getSize(p) : getToggleTop(p);\n\nconst SwitchButton = styled('button')<StyleProps>`\n  display: inline-block;\n  background: none;\n  padding: 0;\n  border: 1px solid ${p => (p.isActive ? p.theme.borderDark : p.theme.borderLight)};\n  position: relative;\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.04);\n  transition: 0.15s border ease;\n  cursor: ${p => (p.isLoading || p.isDisabled ? 'not-allowed' : 'pointer')};\n  pointer-events: ${p => (p.isLoading || p.isDisabled ? 'none' : null)};\n  height: ${getSize}px;\n  width: ${p => getSize(p) * 2}px;\n  border-radius: ${getSize}px;\n\n  &:hover,\n  &:focus {\n    outline: none;\n    border-color: ${p => p.theme.borderDark};\n  }\n\n  &:focus,\n  &.focus-visible {\n    outline: none;\n    box-shadow: rgba(209, 202, 216, 0.5) 0 0 0 3px;\n  }\n`;\n\nconst Toggle = styled('span')<StyleProps>`\n  display: block;\n  position: absolute;\n  border-radius: 50%;\n  transition: 0.25s all ease;\n  top: ${getToggleTop}px;\n  transform: translateX(${getTranslateX}px);\n  width: ${getToggleSize}px;\n  height: ${getToggleSize}px;\n  background: ${p => (p.isActive ? p.theme.green400 : p.theme.gray400)};\n  opacity: ${p => (p.isDisabled ? 0.4 : null)};\n`;\n\nexport default React.forwardRef<HTMLButtonElement, Props>((props, ref) => (\n  <Switch {...props} forwardRef={ref} />\n));\n","import React from 'react';\n\nimport InputField from 'app/views/settings/components/forms/inputField';\n\ntype Props = InputField['props'];\n\nexport default function TextField(props: Omit<Props, 'type'>) {\n  return <InputField {...props} type=\"text\" />;\n}\n\nTextField.propTypes = {...InputField.propTypes};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport InputField from 'app/views/settings/components/forms/inputField';\nimport Switch from 'app/components/switch';\nimport Confirm from 'app/components/confirm';\n\nexport default class BooleanField extends InputField {\n  static propTypes = {\n    ...InputField.propTypes,\n    confirm: PropTypes.shape({\n      true: PropTypes.node,\n      false: PropTypes.node,\n    }),\n  };\n  coerceValue(value) {\n    return value ? true : false;\n  }\n\n  handleChange = (value, onChange, onBlur, e) => {\n    // We need to toggle current value because Switch is not an input\n    const newValue = this.coerceValue(!value);\n    onChange(newValue, e);\n    onBlur(newValue, e);\n  };\n\n  render() {\n    const {confirm, ...fieldProps} = this.props;\n\n    return (\n      <InputField\n        {...fieldProps}\n        resetOnError\n        field={({onChange, onBlur, value, disabled, ...props}) => {\n          // Create a function with required args bound\n          const handleChange = this.handleChange.bind(this, value, onChange, onBlur);\n\n          const switchProps = {\n            size: 'lg',\n            ...props,\n            isActive: !!value,\n            isDisabled: disabled,\n            toggle: handleChange,\n          };\n\n          if (confirm) {\n            return (\n              <Confirm\n                renderMessage={() => confirm[!value]}\n                onConfirm={() => handleChange({})}\n              >\n                {({open}) => (\n                  <Switch\n                    {...switchProps}\n                    toggle={e => {\n                      // If we have a `confirm` prop and enabling switch\n                      // Then show confirm dialog, otherwise propagate change as normal\n                      if (confirm[!value]) {\n                        // Open confirm modal\n                        open();\n                        return;\n                      }\n\n                      handleChange(e);\n                    }}\n                  />\n                )}\n              </Confirm>\n            );\n          }\n\n          return <Switch {...switchProps} />;\n        }}\n      />\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {Client} from 'app/api';\nimport {addLoadingMessage, clearIndicators} from 'app/actionCreators/indicator';\nimport {t} from 'app/locale';\nimport Form from 'app/views/settings/components/forms/form';\n\nexport default class ApiForm extends React.Component {\n  static propTypes = {\n    ...Form.propTypes,\n    onSubmit: PropTypes.func,\n    apiMethod: PropTypes.string.isRequired,\n    apiEndpoint: PropTypes.string.isRequired,\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    this.api = new Client();\n  }\n\n  componentWillUnmount() {\n    this.api.clear();\n  }\n\n  onSubmit = (data, onSuccess, onError) => {\n    this.props.onSubmit && this.props.onSubmit(data);\n    addLoadingMessage(t('Saving changes\\u2026'));\n    this.api.request(this.props.apiEndpoint, {\n      method: this.props.apiMethod,\n      data,\n      success: (...args) => {\n        clearIndicators();\n        onSuccess(...args);\n      },\n      error: (...args) => {\n        clearIndicators();\n        onError(...args);\n      },\n    });\n  };\n\n  render() {\n    const {\n      onSubmit: _onSubmit,\n      apiMethod: _apiMethod,\n      apiEndpoint: _apiEndpoint,\n      ...otherProps\n    } = this.props;\n\n    return <Form onSubmit={this.onSubmit} {...otherProps} />;\n  }\n}\n","import {Box} from 'reflexbox';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport {defined} from 'app/utils';\n\nconst MultipleCheckboxWrapper = styled('div')`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Label = styled('label')`\n  font-weight: normal;\n  white-space: nowrap;\n  margin-right: 10px;\n  margin-bottom: 10px;\n  width: 20%;\n`;\n\nconst CheckboxLabel = styled('span')`\n  margin-left: 3px;\n`;\n\nexport default class MultipleCheckbox extends React.Component {\n  static propTypes = {\n    value: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n    onChange: PropTypes.func,\n    disabled: PropTypes.bool,\n    choices: PropTypes.array.isRequired,\n  };\n\n  onChange = (selectedValue, e) => {\n    const {value, onChange} = this.props;\n    let newValue;\n\n    if (typeof onChange !== 'function') {\n      return;\n    }\n\n    if (e.target.checked) {\n      newValue = value ? [...value, selectedValue] : [value];\n    } else {\n      newValue = value.filter(v => v !== selectedValue);\n    }\n\n    onChange(newValue, e);\n  };\n\n  render() {\n    const {disabled, choices, value} = this.props;\n\n    return (\n      <MultipleCheckboxWrapper>\n        {choices.map(([choiceValue, choiceLabel]) => (\n          <Box key={choiceValue} width={[1, 1 / 2, 1 / 3, 1 / 4]}>\n            <Label>\n              <input\n                type=\"checkbox\"\n                value={choiceValue}\n                onChange={this.onChange.bind(this, choiceValue)}\n                disabled={disabled}\n                checked={defined(value) && value.indexOf(choiceValue) !== -1}\n              />\n              <CheckboxLabel>{choiceLabel}</CheckboxLabel>\n            </Label>\n          </Box>\n        ))}\n      </MultipleCheckboxWrapper>\n    );\n  }\n}\n","import {browserHistory} from 'react-router';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {t} from 'app/locale';\nimport ApiForm from 'app/views/settings/components/forms/apiForm';\nimport BooleanField from 'app/views/settings/components/forms/booleanField';\nimport FormField from 'app/views/settings/components/forms/formField';\nimport TextField from 'app/views/settings/components/forms/textField';\nimport MultipleCheckbox from 'app/views/settings/components/forms/controls/multipleCheckbox';\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\n\nconst EVENT_CHOICES = ['event.alert', 'event.created'].map(e => [e, e]);\n\nexport default class ServiceHookSettingsForm extends React.Component {\n  static propTypes = {\n    orgId: PropTypes.string.isRequired,\n    projectId: PropTypes.string.isRequired,\n    hookId: PropTypes.string,\n    initialData: PropTypes.object.isRequired,\n  };\n\n  onSubmitSuccess = () => {\n    const {orgId, projectId} = this.props;\n    browserHistory.push(`/settings/${orgId}/projects/${projectId}/hooks/`);\n  };\n\n  render() {\n    const {initialData, orgId, projectId, hookId} = this.props;\n\n    const endpoint = hookId\n      ? `/projects/${orgId}/${projectId}/hooks/${hookId}/`\n      : `/projects/${orgId}/${projectId}/hooks/`;\n\n    return (\n      <Panel>\n        <ApiForm\n          apiMethod={hookId ? 'PUT' : 'POST'}\n          apiEndpoint={endpoint}\n          initialData={initialData}\n          onSubmitSuccess={this.onSubmitSuccess}\n          footerStyle={{\n            marginTop: 0,\n            paddingRight: 20,\n          }}\n          submitLabel={hookId ? t('Save Changes') : t('Create Hook')}\n        >\n          <PanelHeader>{t('Hook Configuration')}</PanelHeader>\n          <PanelBody>\n            <BooleanField name=\"isActive\" label={t('Active')} />\n            <TextField\n              name=\"url\"\n              label={t('URL')}\n              required\n              help={t('The URL which will receive events.')}\n            />\n            <FormField\n              name=\"events\"\n              choices={EVENT_CHOICES}\n              label={t('Events')}\n              inline={false}\n              help={t('The event types you wish to subscribe to.')}\n            >\n              {({value, onChange}) => (\n                <MultipleCheckbox\n                  onChange={onChange}\n                  value={value}\n                  choices={EVENT_CHOICES}\n                />\n              )}\n            </FormField>\n          </PanelBody>\n        </ApiForm>\n      </Panel>\n    );\n  }\n}\n","import React from 'react';\n\nimport {t} from 'app/locale';\nimport AsyncView from 'app/views/asyncView';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport ServiceHookSettingsForm from 'app/views/settings/project/serviceHookSettingsForm';\n\nexport default class ProjectCreateServiceHook extends AsyncView {\n  renderBody() {\n    const {orgId, projectId} = this.props.params;\n    return (\n      <div className=\"ref-project-create-service-hook\">\n        <SettingsPageHeader title={t('Create Service Hook')} />\n        <ServiceHookSettingsForm\n          {...this.props}\n          orgId={orgId}\n          projectId={projectId}\n          initialData={{events: []}}\n        />\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}