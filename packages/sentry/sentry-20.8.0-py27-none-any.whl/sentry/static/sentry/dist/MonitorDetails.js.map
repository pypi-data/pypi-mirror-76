{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/components/events/errorLevel.tsx","webpack:///./app/utils/logging.tsx","webpack:///./app/components/issues/snoozeAction.tsx","webpack:///./app/components/issues/compactIssue.jsx","webpack:///./app/views/monitors/monitorIcon.jsx","webpack:///./app/components/issueList.jsx","webpack:///./app/views/monitors/checkInIcon.jsx","webpack:///./app/views/monitors/monitorCheckIns.tsx","webpack:///./app/views/monitors/monitorHeaderActions.jsx","webpack:///./app/views/monitors/monitorHeader.jsx","webpack:///./app/views/monitors/monitorIssues.jsx","webpack:///./app/views/monitors/monitorStats.jsx","webpack:///./app/views/monitors/details.jsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","getLevelColor","level","theme","COLORS","error","orange400","info","blue400","warning","orange300","fatal","red400","sample","purple400","ErrorLevel","p","size","logException","ex","context","Sentry","scope","setExtra","window","console","SnoozeTimes","SnoozeAction","state","isModalOpen","toggleModal","props","disabled","setState","closeModal","onSnooze","duration","Fragment","tooltip","className","onClick","t","show","animation","onHide","bsSize","bind","THIRTY_MINUTES","TWO_HOURS","TWENTY_FOUR_HOURS","undefined","type","React","Component","CompactIssueHeader","data","metadata","style","marginRight","culprit","directive","uri","getMessage","value","message","organization","projectId","eventId","basePath","slug","issueLink","id","commentColor","subscriptionDetails","reason","IssueHeaderMetaWrapper","StyledErrorLevel","IconLink","to","status","isBookmarked","isSolid","project","numComments","color","CompactIssue","createReactClass","displayName","mixins","Reflux","listenTo","GroupStore","getInitialState","issue","get","componentWillReceiveProps","nextProps","onGroupChange","itemIds","has","ignoreDuration","onUpdate","addLoadingMessage","api","bulkUpdate","orgId","complete","clearIndicators","render","hasSeen","statsPeriod","toggleSelect","flexDirection","paddingTop","paddingBottom","showActions","topLevelClasses","caret","groupId","children","withApi","withOrganization","space","Link","getBackgroundColor","success","getSize","IssueList","getDefaultProps","pagination","query","noBorder","noMargin","issueIds","loading","pageLinks","componentWillMount","fetchData","location","nextLocation","pathname","search","remountComponent","clear","request","endpoint","method","cursor","_","jqXHR","map","item","getResponseHeader","renderResults","body","renderLoading","renderError","length","panelStyle","border","borderRadius","marginBottom","key","renderEmpty","margin","onRetry","emptyText","icon","MonitorCheckIns","monitor","per_page","ErrorWrapper","checkInList","checkIn","CheckInIconWrapper","TimeSinceWrapper","date","dateCreated","seconds","DivMargin","MonitorHeaderActions","handleDelete","redirectPath","requestPromise","then","browserHistory","push","addErrorMessage","updateMonitor","resp","err","toggleStatus","ButtonContainer","gap","onConfirm","MonitorHeader","name","lastCheckIn","nextCheckIn","MonitorIssues","getIssuesPath","limit","params","MonitorStats","until","Math","floor","Date","getTime","since","resolution","point","_pointIdx","chart","timeLabel","getTimeLabel","y","ok","width","toLocaleString","emptyStats","stats","x","ts","description","points","height","label","barClasses","renderTooltip","MonitorDetails","monitorId"],"mappings":"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","file":"MonitorDetails.js","sourcesContent":["import DocumentTitle from 'react-document-title';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import styled from '@emotion/styled';\n\nimport {Level} from 'app/types';\n\nconst DEFAULT_SIZE = '13px';\n\nfunction getLevelColor({level = '', theme}) {\n  const COLORS = {\n    error: theme.orange400,\n    info: theme.blue400,\n    warning: theme.orange300,\n    fatal: theme.red400,\n    sample: theme.purple400,\n  };\n\n  return `background-color: ${COLORS[level] || theme.orange400};`;\n}\n\ntype Props = {\n  size?: string;\n  level?: Level;\n};\n\nconst ErrorLevel = styled('span')<Props>`\n  padding: 0;\n  position: relative;\n  width: ${p => p.size || DEFAULT_SIZE};\n  height: ${p => p.size || DEFAULT_SIZE};\n  text-indent: -9999em;\n  display: inline-block;\n  border-radius: 50%;\n  flex-shrink: 0;\n\n  ${getLevelColor}\n`;\n\nexport default ErrorLevel;\n","import * as Sentry from '@sentry/react';\n\nexport function logException(ex: Error, context: any): void {\n  Sentry.withScope(scope => {\n    if (context) {\n      scope.setExtra('context', context);\n    }\n\n    Sentry.captureException(ex);\n  });\n  /*eslint no-console:0*/\n  window.console && console.error && console.error(ex);\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Modal from 'react-bootstrap/lib/Modal';\n\nimport {t} from 'app/locale';\n\nenum SnoozeTimes {\n  // all values in minutes\n  THIRTY_MINUTES = 30,\n  TWO_HOURS = 60 * 2,\n  TWENTY_FOUR_HOURS = 60 * 24,\n}\n\ntype SnoozeActionProps = {\n  disabled: boolean;\n  tooltip: string;\n  onSnooze: (duration: SnoozeTimes) => {};\n  className?: string;\n};\n\nclass SnoozeAction extends React.Component<SnoozeActionProps> {\n  static propTypes = {\n    disabled: PropTypes.bool,\n    onSnooze: PropTypes.func.isRequired,\n    tooltip: PropTypes.string,\n  };\n\n  state = {\n    isModalOpen: false,\n  };\n\n  toggleModal = () => {\n    if (this.props.disabled) {\n      return;\n    }\n    this.setState({\n      isModalOpen: !this.state.isModalOpen,\n    });\n  };\n\n  closeModal = () => {\n    this.setState({isModalOpen: false});\n  };\n\n  onSnooze = (duration: SnoozeTimes) => {\n    this.props.onSnooze(duration);\n    this.closeModal();\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <a\n          title={this.props.tooltip}\n          className={this.props.className}\n          onClick={this.toggleModal}\n        >\n          <span>{t('zZz')}</span>\n        </a>\n        <Modal\n          show={this.state.isModalOpen}\n          title={t('Please confirm')}\n          animation={false}\n          onHide={this.closeModal}\n          bsSize=\"sm\"\n        >\n          <div className=\"modal-body\">\n            <h5>{t('How long should we ignore this issue?')}</h5>\n            <ul className=\"nav nav-stacked nav-pills\">\n              <li>\n                <a onClick={this.onSnooze.bind(this, SnoozeTimes.THIRTY_MINUTES)}>\n                  {t('30 minutes')}\n                </a>\n              </li>\n              <li>\n                <a onClick={this.onSnooze.bind(this, SnoozeTimes.TWO_HOURS)}>\n                  {t('2 hours')}\n                </a>\n              </li>\n              <li>\n                <a onClick={this.onSnooze.bind(this, SnoozeTimes.TWENTY_FOUR_HOURS)}>\n                  {t('24 hours')}\n                </a>\n              </li>\n              {/* override click event object w/ undefined to indicate \"no duration\" */}\n              <li>\n                <a onClick={this.onSnooze.bind(this, undefined)}>{t('Forever')}</a>\n              </li>\n            </ul>\n          </div>\n          <div className=\"modal-footer\">\n            <button type=\"button\" className=\"btn btn-default\" onClick={this.closeModal}>\n              {t('Cancel')}\n            </button>\n          </div>\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SnoozeAction;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Reflux from 'reflux';\nimport createReactClass from 'create-react-class';\nimport styled from '@emotion/styled';\n\nimport {PanelItem} from 'app/components/panels';\nimport {addLoadingMessage, clearIndicators} from 'app/actionCreators/indicator';\nimport {IconChat, IconCheckmark, IconEllipsis, IconMute, IconStar} from 'app/icons';\nimport {t} from 'app/locale';\nimport DropdownLink from 'app/components/dropdownLink';\nimport ErrorLevel from 'app/components/events/errorLevel';\nimport GroupChart from 'app/components/stream/groupChart';\nimport GroupStore from 'app/stores/groupStore';\nimport Link from 'app/components/links/link';\nimport SentryTypes from 'app/sentryTypes';\nimport SnoozeAction from 'app/components/issues/snoozeAction';\nimport space from 'app/styles/space';\nimport withApi from 'app/utils/withApi';\nimport withOrganization from 'app/utils/withOrganization';\n\nclass CompactIssueHeader extends React.Component {\n  static propTypes = {\n    organization: SentryTypes.Organization.isRequired,\n    projectId: PropTypes.string,\n    eventId: PropTypes.string,\n    data: PropTypes.object.isRequired,\n  };\n\n  getTitle = () => {\n    const data = this.props.data;\n    const metadata = data.metadata;\n    switch (data.type) {\n      case 'error':\n        return (\n          <span>\n            <span style={{marginRight: 10}}>{metadata.type}</span>\n            <em>{data.culprit}</em>\n            <br />\n          </span>\n        );\n      case 'csp':\n        return (\n          <span>\n            <span style={{marginRight: 10}}>{metadata.directive}</span>\n            <em>{metadata.uri}</em>\n            <br />\n          </span>\n        );\n      case 'default':\n        return <span>{metadata.title}</span>;\n      default:\n        return <span>{data.title}</span>;\n    }\n  };\n\n  getMessage = () => {\n    const data = this.props.data;\n    const metadata = data.metadata;\n    switch (data.type) {\n      case 'error':\n        return metadata.value;\n      case 'csp':\n        return metadata.message;\n      default:\n        return '';\n    }\n  };\n\n  render() {\n    const {data, organization, projectId, eventId} = this.props;\n\n    const basePath = `/organizations/${organization.slug}/issues/`;\n\n    const issueLink = eventId\n      ? `/organizations/${organization.slug}/projects/${projectId}/events/${eventId}/`\n      : `${basePath}${data.id}/`;\n\n    const commentColor =\n      data.subscriptionDetails && data.subscriptionDetails.reason === 'mentioned'\n        ? 'green400'\n        : 'currentColor';\n\n    return (\n      <React.Fragment>\n        <IssueHeaderMetaWrapper>\n          <StyledErrorLevel size=\"12px\" level={data.level} title={data.level} />\n          <h3 className=\"truncate\">\n            <IconLink to={issueLink || ''}>\n              {data.status === 'ignored' && <IconMute size=\"xs\" />}\n              {data.isBookmarked && <IconStar isSolid size=\"xs\" />}\n              {this.getTitle()}\n            </IconLink>\n          </h3>\n        </IssueHeaderMetaWrapper>\n        <div className=\"event-extra\">\n          <span className=\"project-name\">\n            <strong>{data.project.slug}</strong>\n          </span>\n          {data.numComments !== 0 && (\n            <span>\n              <IconLink to={`${basePath}${data.id}/activity/`} className=\"comments\">\n                <IconChat size=\"xs\" color={commentColor} />\n                <span className=\"tag-count\">{data.numComments}</span>\n              </IconLink>\n            </span>\n          )}\n          <span className=\"culprit\">{this.getMessage()}</span>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst CompactIssue = createReactClass({\n  displayName: 'CompactIssue',\n\n  propTypes: {\n    api: PropTypes.object,\n    data: PropTypes.object,\n    id: PropTypes.string,\n    eventId: PropTypes.string,\n    statsPeriod: PropTypes.string,\n    showActions: PropTypes.bool,\n    organization: SentryTypes.Organization.isRequired,\n  },\n\n  mixins: [Reflux.listenTo(GroupStore, 'onGroupChange')],\n\n  getInitialState() {\n    return {\n      issue: this.props.data || GroupStore.get(this.props.id),\n    };\n  },\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.id !== this.props.id) {\n      this.setState({\n        issue: GroupStore.get(this.props.id),\n      });\n    }\n  },\n\n  onGroupChange(itemIds) {\n    if (!itemIds.has(this.props.id)) {\n      return;\n    }\n    const id = this.props.id;\n    const issue = GroupStore.get(id);\n    this.setState({\n      issue,\n    });\n  },\n\n  onSnooze(duration) {\n    const data = {\n      status: 'ignored',\n    };\n\n    if (duration) {\n      data.ignoreDuration = duration;\n    }\n\n    this.onUpdate(data);\n  },\n\n  onUpdate(data) {\n    const issue = this.state.issue;\n    addLoadingMessage(t('Saving changes\\u2026'));\n\n    this.props.api.bulkUpdate(\n      {\n        orgId: this.props.organization.slug,\n        projectId: issue.project.slug,\n        itemIds: [issue.id],\n        data,\n      },\n      {\n        complete: () => {\n          clearIndicators();\n        },\n      }\n    );\n  },\n\n  render() {\n    const issue = this.state.issue;\n    const {id, organization} = this.props;\n\n    let className = 'issue';\n    if (issue.isBookmarked) {\n      className += ' isBookmarked';\n    }\n    if (issue.hasSeen) {\n      className += ' hasSeen';\n    }\n    if (issue.status === 'resolved') {\n      className += ' isResolved';\n    }\n    if (issue.status === 'ignored') {\n      className += ' isIgnored';\n    }\n\n    if (this.props.statsPeriod) {\n      className += ' with-graph';\n    }\n\n    return (\n      <PanelItem\n        className={className}\n        onClick={this.toggleSelect}\n        flexDirection=\"column\"\n        style={{paddingTop: '12px', paddingBottom: '6px'}}\n      >\n        <CompactIssueHeader\n          data={issue}\n          organization={organization}\n          projectId={issue.project.slug}\n          eventId={this.props.eventId}\n        />\n        {this.props.statsPeriod && (\n          <div className=\"event-graph\">\n            <GroupChart\n              id={id}\n              statsPeriod={this.props.statsPeriod}\n              data={this.props.data}\n            />\n          </div>\n        )}\n        {this.props.showActions && (\n          <div className=\"more-menu-container align-right\">\n            <DropdownLink\n              topLevelClasses=\"more-menu\"\n              className=\"more-menu-toggle\"\n              caret={false}\n              title={<IconEllipsis size=\"xs\" />}\n            >\n              <li>\n                <IconLink\n                  onClick={this.onUpdate.bind(this, {\n                    status: issue.status !== 'resolved' ? 'resolved' : 'unresolved',\n                  })}\n                >\n                  <IconCheckmark size=\"xs\" />\n                </IconLink>\n              </li>\n              <li>\n                <IconLink\n                  onClick={this.onUpdate.bind(this, {isBookmarked: !issue.isBookmarked})}\n                >\n                  <IconStar isSolid size=\"xs\" />\n                </IconLink>\n              </li>\n              <li>\n                <SnoozeAction\n                  orgId={organization.slug}\n                  groupId={id}\n                  onSnooze={this.onSnooze}\n                />\n              </li>\n            </DropdownLink>\n          </div>\n        )}\n        {this.props.children}\n      </PanelItem>\n    );\n  },\n});\n\nexport {CompactIssue};\nexport default withApi(withOrganization(CompactIssue));\n\nconst IssueHeaderMetaWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledErrorLevel = styled(ErrorLevel)`\n  display: block;\n  margin-right: ${space(1)};\n`;\n\nconst IconLink = styled(Link)`\n  & > svg {\n    margin-right: ${space(0.5)};\n  }\n`;\n","import styled from '@emotion/styled';\n\nconst getBackgroundColor = p => {\n  if (p.color) {\n    return `background: ${p.color};`;\n  }\n\n  return `background: ${\n    p.status === 'error'\n      ? p.theme.error\n      : p.status === 'ok'\n      ? p.theme.success\n      : p.theme.disabled\n  };`;\n};\n\nconst getSize = p => `\n  height: ${p.size}px;\n  width: ${p.size}px;\n`;\n\nexport default styled('div')`\n  display: inline-block;\n  position: relative;\n  border-radius: 50%;\n  ${getSize};\n  ${getBackgroundColor};\n`;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport createReactClass from 'create-react-class';\n\nimport {Panel, PanelBody} from 'app/components/panels';\nimport withApi from 'app/utils/withApi';\nimport CompactIssue from 'app/components/issues/compactIssue';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport {IconSearch} from 'app/icons';\nimport LoadingError from 'app/components/loadingError';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport Pagination from 'app/components/pagination';\nimport space from 'app/styles/space';\nimport {t} from 'app/locale';\n\nconst IssueList = createReactClass({\n  displayName: 'IssueList',\n\n  propTypes: {\n    api: PropTypes.object,\n    endpoint: PropTypes.string.isRequired,\n    emptyText: PropTypes.string,\n    query: PropTypes.object,\n    pagination: PropTypes.bool,\n    renderEmpty: PropTypes.func,\n    statsPeriod: PropTypes.string,\n    showActions: PropTypes.bool,\n    noBorder: PropTypes.bool,\n    noMargin: PropTypes.bool,\n  },\n\n  getDefaultProps() {\n    return {\n      pagination: true,\n      query: {},\n      noBorder: false,\n      noMargin: false,\n    };\n  },\n\n  getInitialState() {\n    return {\n      issueIds: [],\n      loading: true,\n      error: false,\n      pageLinks: null,\n    };\n  },\n\n  componentWillMount() {\n    this.fetchData();\n  },\n\n  componentWillReceiveProps(nextProps) {\n    const location = this.props.location;\n    const nextLocation = nextProps.location;\n    if (!location) {\n      return;\n    }\n\n    if (\n      location.pathname !== nextLocation.pathname ||\n      location.search !== nextLocation.search\n    ) {\n      this.remountComponent();\n    }\n  },\n\n  remountComponent() {\n    this.setState(this.getInitialState(), this.fetchData);\n  },\n\n  fetchData() {\n    const location = this.props.location;\n    this.props.api.clear();\n    this.props.api.request(this.props.endpoint, {\n      method: 'GET',\n      query: {\n        cursor: (location && location.query && location.query.cursor) || '',\n        ...this.props.query,\n      },\n      success: (data, _, jqXHR) => {\n        this.setState({\n          data,\n          loading: false,\n          error: false,\n          issueIds: data.map(item => item.id),\n          pageLinks: jqXHR.getResponseHeader('Link'),\n        });\n      },\n      error: () => {\n        this.setState({\n          loading: false,\n          error: true,\n        });\n      },\n    });\n  },\n\n  renderResults() {\n    let body;\n    const {noBorder, noMargin} = this.props;\n\n    if (this.state.loading) {\n      body = this.renderLoading();\n    } else if (this.state.error) {\n      body = this.renderError();\n    } else if (this.state.issueIds.length > 0) {\n      const panelStyle = noBorder ? {border: 0, borderRadius: 0} : {};\n      if (noMargin) {\n        panelStyle.marginBottom = 0;\n      }\n\n      body = (\n        <Panel style={panelStyle}>\n          <PanelBody className=\"issue-list\">\n            {this.state.data.map(issue => (\n              <CompactIssue\n                key={issue.id}\n                id={issue.id}\n                data={issue}\n                statsPeriod={this.props.statsPeriod}\n                showActions={this.props.showActions}\n              />\n            ))}\n          </PanelBody>\n        </Panel>\n      );\n    } else {\n      body = (this.props.renderEmpty || this.renderEmpty)();\n    }\n\n    return body;\n  },\n\n  renderError() {\n    return (\n      <div style={{margin: `${space(2)} ${space(2)} 0`}}>\n        <LoadingError onRetry={this.fetchData} />\n      </div>\n    );\n  },\n\n  renderLoading() {\n    return (\n      <div style={{margin: '18px 18px 0'}}>\n        <LoadingIndicator />\n      </div>\n    );\n  },\n\n  renderEmpty() {\n    const {emptyText} = this.props;\n    const {noBorder, noMargin} = this.props;\n    const panelStyle = noBorder ? {border: 0, borderRadius: 0} : {};\n    if (noMargin) {\n      panelStyle.marginBottom = 0;\n    }\n\n    return (\n      <Panel style={panelStyle}>\n        <EmptyMessage icon={<IconSearch size=\"xl\" />}>\n          {emptyText ? emptyText : t('Nothing to show here, move along.')}\n        </EmptyMessage>\n      </Panel>\n    );\n  },\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.renderResults()}\n        {this.props.pagination && this.state.pageLinks && (\n          <Pagination pageLinks={this.state.pageLinks} {...this.props} />\n        )}\n      </React.Fragment>\n    );\n  },\n});\n\nexport {IssueList};\n\nexport default withApi(IssueList);\n","import styled from '@emotion/styled';\n\nconst getBackgroundColor = p => {\n  if (p.color) {\n    return `background: ${p.color};`;\n  }\n\n  return `background: ${\n    p.status === 'error'\n      ? p.theme.error\n      : p.status === 'ok'\n      ? p.theme.success\n      : p.theme.disabled\n  };`;\n};\n\nconst getSize = p => `\n  height: ${p.size}px;\n  width: ${p.size}px;\n`;\n\nexport default styled('div')`\n  display: inline-block;\n  position: relative;\n  border-radius: 50%;\n  ${getSize};\n  ${getBackgroundColor};\n`;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport {Monitor} from 'app/views/monitors/types';\nimport {PanelBody, PanelItem} from 'app/components/panels';\nimport AsyncComponent from 'app/components/asyncComponent';\nimport Duration from 'app/components/duration';\nimport TimeSince from 'app/components/timeSince';\nimport space from 'app/styles/space';\n\nimport CheckInIcon from './checkInIcon';\n\ntype CheckIn = {\n  dateCreated: string;\n  duration: number;\n  id: string;\n  status: 'ok' | 'error';\n};\n\ntype Props = {\n  monitor: Monitor;\n} & AsyncComponent['props'];\n\ntype State = {\n  checkInList: CheckIn[];\n} & AsyncComponent['state'];\n\nexport default class MonitorCheckIns extends AsyncComponent<Props, State> {\n  static propTypes = {\n    monitor: PropTypes.object.isRequired,\n  };\n\n  getEndpoints(): [string, string, {query: {per_page: number}}][] {\n    const {monitor} = this.props;\n    return [\n      ['checkInList', `/monitors/${monitor.id}/checkins/`, {query: {per_page: 10}}],\n    ];\n  }\n\n  renderError() {\n    return <ErrorWrapper>{super.renderError()}</ErrorWrapper>;\n  }\n\n  renderBody() {\n    return (\n      <PanelBody>\n        {this.state.checkInList.map(checkIn => (\n          <PanelItem key={checkIn.id}>\n            <CheckInIconWrapper>\n              <CheckInIcon status={checkIn.status} size={16} />\n            </CheckInIconWrapper>\n            <TimeSinceWrapper>\n              <TimeSince date={checkIn.dateCreated} />\n            </TimeSinceWrapper>\n            <div>{checkIn.duration && <Duration seconds={checkIn.duration / 100} />}</div>\n          </PanelItem>\n        ))}\n      </PanelBody>\n    );\n  }\n}\n\nconst DivMargin = styled('div')`\n  margin-right: ${space(2)};\n`;\n\nconst CheckInIconWrapper = styled(DivMargin)`\n  display: flex;\n  align-items: center;\n`;\n\nconst TimeSinceWrapper = styled(DivMargin)``;\n\nconst ErrorWrapper = styled('div')`\n  margin: ${space(3)} ${space(3)} 0;\n`;\n","import {browserHistory} from 'react-router';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  clearIndicators,\n} from 'app/actionCreators/indicator';\nimport {logException} from 'app/utils/logging';\nimport {t} from 'app/locale';\nimport ButtonBar from 'app/components/buttonBar';\nimport Button from 'app/components/button';\nimport Confirm from 'app/components/confirm';\nimport {IconDelete, IconEdit} from 'app/icons';\nimport SentryTypes from 'app/sentryTypes';\nimport withApi from 'app/utils/withApi';\nimport space from 'app/styles/space';\n\nclass MonitorHeaderActions extends React.Component {\n  static propTypes = {\n    api: PropTypes.object.isRequired,\n    monitor: SentryTypes.Monitor.isRequired,\n    orgId: PropTypes.string.isRequired,\n    onUpdate: PropTypes.func,\n  };\n\n  handleDelete = () => {\n    const {api, orgId, monitor} = this.props;\n    const redirectPath = `/organizations/${orgId}/monitors/`;\n    addLoadingMessage(t('Deleting Monitor...'));\n\n    api\n      .requestPromise(`/monitors/${monitor.id}/`, {\n        method: 'DELETE',\n      })\n      .then(() => {\n        browserHistory.push(redirectPath);\n      })\n      .catch(() => {\n        addErrorMessage(t('Unable to remove monitor.'));\n      });\n  };\n\n  updateMonitor = data => {\n    const {api, monitor} = this.props;\n    addLoadingMessage();\n    api\n      .requestPromise(`/monitors/${monitor.id}/`, {\n        method: 'PUT',\n        data,\n      })\n      .then(resp => {\n        clearIndicators();\n        this.props.onUpdate && this.props.onUpdate(resp);\n      })\n      .catch(err => {\n        logException(err);\n        addErrorMessage(t('Unable to update monitor.'));\n      });\n  };\n\n  toggleStatus = () => {\n    const {monitor} = this.props;\n    this.updateMonitor({\n      status: monitor.status === 'disabled' ? 'active' : 'disabled',\n    });\n  };\n\n  render() {\n    const {monitor, orgId} = this.props;\n    return (\n      <ButtonContainer>\n        <ButtonBar gap={1}>\n          <Button\n            size=\"small\"\n            icon={<IconEdit size=\"xs\" />}\n            to={`/organizations/${orgId}/monitors/${monitor.id}/edit/`}\n          >\n            &nbsp;\n            {t('Edit')}\n          </Button>\n          <Button size=\"small\" onClick={this.toggleStatus}>\n            {monitor.status !== 'disabled' ? t('Pause') : t('Enable')}\n          </Button>\n          <Confirm\n            onConfirm={this.handleDelete}\n            message={t(\n              'Deleting this monitor is permanent. Are you sure you wish to continue?'\n            )}\n          >\n            <Button size=\"small\" icon={<IconDelete size=\"xs\" />}>\n              {t('Delete')}\n            </Button>\n          </Confirm>\n        </ButtonBar>\n      </ButtonContainer>\n    );\n  }\n}\n\nconst ButtonContainer = styled('div')`\n  margin-bottom: ${space(3)};\n  display: flex;\n  flex-shrink: 1;\n`;\n\nexport default withApi(MonitorHeaderActions);\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport TimeSince from 'app/components/timeSince';\nimport {t} from 'app/locale';\nimport SentryTypes from 'app/sentryTypes';\n\nimport MonitorHeaderActions from './monitorHeaderActions';\nimport MonitorIcon from './monitorIcon';\n\nexport default class MonitorHeader extends React.Component {\n  static propTypes = {\n    orgId: PropTypes.string.isRequired,\n    monitor: SentryTypes.Monitor.isRequired,\n    onUpdate: PropTypes.func,\n  };\n\n  render() {\n    const {monitor} = this.props;\n\n    return (\n      <div className=\"release-details\">\n        <div className=\"row\">\n          <div className=\"col-sm-6 col-xs-10\">\n            <h3>{monitor.name}</h3>\n            <div className=\"release-meta\">{monitor.id}</div>\n          </div>\n          <div className=\"col-sm-2 hidden-xs\">\n            <h6 className=\"nav-header\">{t('Last Check-in')}</h6>\n            {monitor.lastCheckIn && <TimeSince date={monitor.lastCheckIn} />}\n          </div>\n          <div className=\"col-sm-2 hidden-xs\">\n            <h6 className=\"nav-header\">{t('Next Check-in')}</h6>\n            {monitor.nextCheckIn && <TimeSince date={monitor.nextCheckIn} />}\n          </div>\n          <div className=\"col-sm-2\">\n            <h6 className=\"nav-header\">{t('Status')}</h6>\n            <MonitorIcon status={monitor.status} size={16} />\n          </div>\n        </div>\n        <MonitorHeaderActions\n          orgId={this.props.orgId}\n          monitor={monitor}\n          onUpdate={this.props.onUpdate}\n        />\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport IssueList from 'app/components/issueList';\nimport {t} from 'app/locale';\n\nexport default class MonitorIssues extends Component {\n  static propTypes = {\n    orgId: PropTypes.string.isRequired,\n    monitor: PropTypes.object.isRequired,\n  };\n\n  getIssuesPath() {\n    const {orgId} = this.props;\n    return `/organizations/${orgId}/issues/`;\n  }\n\n  render() {\n    const {monitor, orgId} = this.props;\n\n    return (\n      <IssueList\n        endpoint={this.getIssuesPath()}\n        query={{\n          query: 'monitor.id:\"' + monitor.id + '\"',\n          project: monitor.project.id,\n          limit: 5,\n        }}\n        statsPeriod=\"0\"\n        pagination={false}\n        emptyText={t('No issues found')}\n        showActions={false}\n        noBorder\n        noMargin\n        params={{orgId}}\n      />\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\nimport {Panel, PanelBody} from 'app/components/panels';\nimport {t} from 'app/locale';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport StackedBarChart from 'app/components/stackedBarChart';\n\nexport default class MonitorStats extends AsyncComponent {\n  static propTypes = {\n    monitor: PropTypes.object.isRequired,\n    ...AsyncComponent.PropTypes,\n  };\n\n  getDefaultState() {\n    const until = Math.floor(new Date().getTime() / 1000);\n    const since = until - 3600 * 24 * 30;\n\n    return {\n      since,\n      until,\n    };\n  }\n\n  getEndpoints() {\n    const {monitor} = this.props;\n    return [\n      [\n        'stats',\n        `/monitors/${monitor.id}/stats/`,\n        {\n          query: {\n            since: this.state.since,\n            until: this.state.until,\n            resolution: '1d',\n          },\n        },\n      ],\n    ];\n  }\n\n  renderTooltip(point, _pointIdx, chart) {\n    const timeLabel = chart.getTimeLabel(point);\n    const [error, ok] = point.y;\n\n    return (\n      <div style={{width: '150px'}}>\n        <div className=\"time-label\">{timeLabel}</div>\n        <div className=\"value-label\">\n          {t('%s successful', ok.toLocaleString())}\n          <br />\n          {t('%s failed', error.toLocaleString())}\n        </div>\n      </div>\n    );\n  }\n\n  renderBody() {\n    let emptyStats = true;\n    const stats = this.state.stats.map(p => {\n      if (p.ok || p.error) {\n        emptyStats = false;\n      }\n      return {\n        x: p.ts,\n        y: [p.error, p.ok],\n      };\n    });\n\n    return (\n      <Panel>\n        <PanelBody>\n          {!emptyStats ? (\n            <StackedBarChart\n              points={stats}\n              height={150}\n              label=\"events\"\n              barClasses={['error', 'success']}\n              className=\"standard-barchart\"\n              style={{border: 'none'}}\n              tooltip={this.renderTooltip}\n            />\n          ) : (\n            <EmptyMessage\n              title={t('Nothing recorded in the last 30 days.')}\n              description={t('All check-ins for this monitor.')}\n            />\n          )}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n","import React from 'react';\n\nimport AsyncView from 'app/views/asyncView';\nimport {Panel, PanelHeader} from 'app/components/panels';\nimport {t} from 'app/locale';\n\nimport MonitorCheckIns from './monitorCheckIns';\nimport MonitorHeader from './monitorHeader';\nimport MonitorIssues from './monitorIssues';\nimport MonitorStats from './monitorStats';\n\nclass MonitorDetails extends AsyncView {\n  getEndpoints() {\n    const {params, location} = this.props;\n    return [\n      [\n        'monitor',\n        `/monitors/${params.monitorId}/`,\n        {\n          query: location.query,\n        },\n      ],\n    ];\n  }\n\n  getTitle() {\n    if (this.state.monitor) {\n      return `${this.state.monitor.name} - Monitors - ${this.props.params.orgId}`;\n    }\n    return `Monitors - ${this.props.params.orgId}`;\n  }\n\n  onUpdate = data => {\n    this.setState({\n      monitor: {\n        ...this.state.monitor,\n        ...data,\n      },\n    });\n  };\n\n  renderBody() {\n    const {monitor} = this.state;\n    return (\n      <React.Fragment>\n        <MonitorHeader\n          monitor={monitor}\n          orgId={this.props.params.orgId}\n          onUpdate={this.onUpdate}\n        />\n\n        <MonitorStats monitor={monitor} />\n\n        <Panel style={{paddingBottom: 0}}>\n          <PanelHeader>{t('Related Issues')}</PanelHeader>\n\n          <MonitorIssues monitor={monitor} orgId={this.props.params.orgId} />\n        </Panel>\n\n        <Panel>\n          <PanelHeader>{t('Recent Check-ins')}</PanelHeader>\n\n          <MonitorCheckIns monitor={monitor} />\n        </Panel>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MonitorDetails;\n"],"sourceRoot":""}