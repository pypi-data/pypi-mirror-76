{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/components/events/errorLevel.tsx","webpack:///./app/components/issues/snoozeAction.tsx","webpack:///./app/components/issues/compactIssue.jsx","webpack:///./app/views/userFeedback/utils.tsx","webpack:///./app/views/userFeedback/index.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","getLevelColor","level","theme","COLORS","error","orange400","info","blue400","warning","orange300","fatal","red400","sample","purple400","ErrorLevel","p","size","SnoozeTimes","SnoozeAction","state","isModalOpen","toggleModal","props","disabled","setState","closeModal","onSnooze","duration","Fragment","tooltip","className","onClick","t","show","animation","onHide","bsSize","bind","THIRTY_MINUTES","TWO_HOURS","TWENTY_FOUR_HOURS","undefined","type","React","Component","CompactIssueHeader","data","metadata","style","marginRight","culprit","directive","uri","getMessage","value","message","organization","projectId","eventId","basePath","slug","issueLink","id","commentColor","subscriptionDetails","reason","IssueHeaderMetaWrapper","StyledErrorLevel","IconLink","to","status","isBookmarked","isSolid","project","numComments","color","CompactIssue","createReactClass","displayName","mixins","Reflux","listenTo","GroupStore","getInitialState","issue","get","componentWillReceiveProps","nextProps","onGroupChange","itemIds","has","ignoreDuration","onUpdate","addLoadingMessage","api","bulkUpdate","orgId","complete","clearIndicators","render","hasSeen","statsPeriod","toggleSelect","flexDirection","paddingTop","paddingBottom","showActions","topLevelClasses","caret","groupId","children","withApi","withOrganization","space","Link","getQuery","search","query","qs","pick","Object","values","URL_PARAM","OrganizationUserFeedback","location","params","data-test-id","reportList","map","item","key","eventID","StyledEventUserFeedback","report","issueId","projectIds","renderBody","loading","length","renderResults","renderEmpty","pathname","reportListPageLinks","unresolvedQuery","omit","allIssuesQuery","Header","renderStreamBody","pageLinks","Array","isArray","withProfiler","EventUserFeedback"],"mappings":"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","file":"UserFeedback.js","sourcesContent":["import DocumentTitle from 'react-document-title';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import styled from '@emotion/styled';\n\nimport {Level} from 'app/types';\n\nconst DEFAULT_SIZE = '13px';\n\nfunction getLevelColor({level = '', theme}) {\n  const COLORS = {\n    error: theme.orange400,\n    info: theme.blue400,\n    warning: theme.orange300,\n    fatal: theme.red400,\n    sample: theme.purple400,\n  };\n\n  return `background-color: ${COLORS[level] || theme.orange400};`;\n}\n\ntype Props = {\n  size?: string;\n  level?: Level;\n};\n\nconst ErrorLevel = styled('span')<Props>`\n  padding: 0;\n  position: relative;\n  width: ${p => p.size || DEFAULT_SIZE};\n  height: ${p => p.size || DEFAULT_SIZE};\n  text-indent: -9999em;\n  display: inline-block;\n  border-radius: 50%;\n  flex-shrink: 0;\n\n  ${getLevelColor}\n`;\n\nexport default ErrorLevel;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Modal from 'react-bootstrap/lib/Modal';\n\nimport {t} from 'app/locale';\n\nenum SnoozeTimes {\n  // all values in minutes\n  THIRTY_MINUTES = 30,\n  TWO_HOURS = 60 * 2,\n  TWENTY_FOUR_HOURS = 60 * 24,\n}\n\ntype SnoozeActionProps = {\n  disabled: boolean;\n  tooltip: string;\n  onSnooze: (duration: SnoozeTimes) => {};\n  className?: string;\n};\n\nclass SnoozeAction extends React.Component<SnoozeActionProps> {\n  static propTypes = {\n    disabled: PropTypes.bool,\n    onSnooze: PropTypes.func.isRequired,\n    tooltip: PropTypes.string,\n  };\n\n  state = {\n    isModalOpen: false,\n  };\n\n  toggleModal = () => {\n    if (this.props.disabled) {\n      return;\n    }\n    this.setState({\n      isModalOpen: !this.state.isModalOpen,\n    });\n  };\n\n  closeModal = () => {\n    this.setState({isModalOpen: false});\n  };\n\n  onSnooze = (duration: SnoozeTimes) => {\n    this.props.onSnooze(duration);\n    this.closeModal();\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <a\n          title={this.props.tooltip}\n          className={this.props.className}\n          onClick={this.toggleModal}\n        >\n          <span>{t('zZz')}</span>\n        </a>\n        <Modal\n          show={this.state.isModalOpen}\n          title={t('Please confirm')}\n          animation={false}\n          onHide={this.closeModal}\n          bsSize=\"sm\"\n        >\n          <div className=\"modal-body\">\n            <h5>{t('How long should we ignore this issue?')}</h5>\n            <ul className=\"nav nav-stacked nav-pills\">\n              <li>\n                <a onClick={this.onSnooze.bind(this, SnoozeTimes.THIRTY_MINUTES)}>\n                  {t('30 minutes')}\n                </a>\n              </li>\n              <li>\n                <a onClick={this.onSnooze.bind(this, SnoozeTimes.TWO_HOURS)}>\n                  {t('2 hours')}\n                </a>\n              </li>\n              <li>\n                <a onClick={this.onSnooze.bind(this, SnoozeTimes.TWENTY_FOUR_HOURS)}>\n                  {t('24 hours')}\n                </a>\n              </li>\n              {/* override click event object w/ undefined to indicate \"no duration\" */}\n              <li>\n                <a onClick={this.onSnooze.bind(this, undefined)}>{t('Forever')}</a>\n              </li>\n            </ul>\n          </div>\n          <div className=\"modal-footer\">\n            <button type=\"button\" className=\"btn btn-default\" onClick={this.closeModal}>\n              {t('Cancel')}\n            </button>\n          </div>\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SnoozeAction;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Reflux from 'reflux';\nimport createReactClass from 'create-react-class';\nimport styled from '@emotion/styled';\n\nimport {PanelItem} from 'app/components/panels';\nimport {addLoadingMessage, clearIndicators} from 'app/actionCreators/indicator';\nimport {IconChat, IconCheckmark, IconEllipsis, IconMute, IconStar} from 'app/icons';\nimport {t} from 'app/locale';\nimport DropdownLink from 'app/components/dropdownLink';\nimport ErrorLevel from 'app/components/events/errorLevel';\nimport GroupChart from 'app/components/stream/groupChart';\nimport GroupStore from 'app/stores/groupStore';\nimport Link from 'app/components/links/link';\nimport SentryTypes from 'app/sentryTypes';\nimport SnoozeAction from 'app/components/issues/snoozeAction';\nimport space from 'app/styles/space';\nimport withApi from 'app/utils/withApi';\nimport withOrganization from 'app/utils/withOrganization';\n\nclass CompactIssueHeader extends React.Component {\n  static propTypes = {\n    organization: SentryTypes.Organization.isRequired,\n    projectId: PropTypes.string,\n    eventId: PropTypes.string,\n    data: PropTypes.object.isRequired,\n  };\n\n  getTitle = () => {\n    const data = this.props.data;\n    const metadata = data.metadata;\n    switch (data.type) {\n      case 'error':\n        return (\n          <span>\n            <span style={{marginRight: 10}}>{metadata.type}</span>\n            <em>{data.culprit}</em>\n            <br />\n          </span>\n        );\n      case 'csp':\n        return (\n          <span>\n            <span style={{marginRight: 10}}>{metadata.directive}</span>\n            <em>{metadata.uri}</em>\n            <br />\n          </span>\n        );\n      case 'default':\n        return <span>{metadata.title}</span>;\n      default:\n        return <span>{data.title}</span>;\n    }\n  };\n\n  getMessage = () => {\n    const data = this.props.data;\n    const metadata = data.metadata;\n    switch (data.type) {\n      case 'error':\n        return metadata.value;\n      case 'csp':\n        return metadata.message;\n      default:\n        return '';\n    }\n  };\n\n  render() {\n    const {data, organization, projectId, eventId} = this.props;\n\n    const basePath = `/organizations/${organization.slug}/issues/`;\n\n    const issueLink = eventId\n      ? `/organizations/${organization.slug}/projects/${projectId}/events/${eventId}/`\n      : `${basePath}${data.id}/`;\n\n    const commentColor =\n      data.subscriptionDetails && data.subscriptionDetails.reason === 'mentioned'\n        ? 'green400'\n        : 'currentColor';\n\n    return (\n      <React.Fragment>\n        <IssueHeaderMetaWrapper>\n          <StyledErrorLevel size=\"12px\" level={data.level} title={data.level} />\n          <h3 className=\"truncate\">\n            <IconLink to={issueLink || ''}>\n              {data.status === 'ignored' && <IconMute size=\"xs\" />}\n              {data.isBookmarked && <IconStar isSolid size=\"xs\" />}\n              {this.getTitle()}\n            </IconLink>\n          </h3>\n        </IssueHeaderMetaWrapper>\n        <div className=\"event-extra\">\n          <span className=\"project-name\">\n            <strong>{data.project.slug}</strong>\n          </span>\n          {data.numComments !== 0 && (\n            <span>\n              <IconLink to={`${basePath}${data.id}/activity/`} className=\"comments\">\n                <IconChat size=\"xs\" color={commentColor} />\n                <span className=\"tag-count\">{data.numComments}</span>\n              </IconLink>\n            </span>\n          )}\n          <span className=\"culprit\">{this.getMessage()}</span>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst CompactIssue = createReactClass({\n  displayName: 'CompactIssue',\n\n  propTypes: {\n    api: PropTypes.object,\n    data: PropTypes.object,\n    id: PropTypes.string,\n    eventId: PropTypes.string,\n    statsPeriod: PropTypes.string,\n    showActions: PropTypes.bool,\n    organization: SentryTypes.Organization.isRequired,\n  },\n\n  mixins: [Reflux.listenTo(GroupStore, 'onGroupChange')],\n\n  getInitialState() {\n    return {\n      issue: this.props.data || GroupStore.get(this.props.id),\n    };\n  },\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.id !== this.props.id) {\n      this.setState({\n        issue: GroupStore.get(this.props.id),\n      });\n    }\n  },\n\n  onGroupChange(itemIds) {\n    if (!itemIds.has(this.props.id)) {\n      return;\n    }\n    const id = this.props.id;\n    const issue = GroupStore.get(id);\n    this.setState({\n      issue,\n    });\n  },\n\n  onSnooze(duration) {\n    const data = {\n      status: 'ignored',\n    };\n\n    if (duration) {\n      data.ignoreDuration = duration;\n    }\n\n    this.onUpdate(data);\n  },\n\n  onUpdate(data) {\n    const issue = this.state.issue;\n    addLoadingMessage(t('Saving changes\\u2026'));\n\n    this.props.api.bulkUpdate(\n      {\n        orgId: this.props.organization.slug,\n        projectId: issue.project.slug,\n        itemIds: [issue.id],\n        data,\n      },\n      {\n        complete: () => {\n          clearIndicators();\n        },\n      }\n    );\n  },\n\n  render() {\n    const issue = this.state.issue;\n    const {id, organization} = this.props;\n\n    let className = 'issue';\n    if (issue.isBookmarked) {\n      className += ' isBookmarked';\n    }\n    if (issue.hasSeen) {\n      className += ' hasSeen';\n    }\n    if (issue.status === 'resolved') {\n      className += ' isResolved';\n    }\n    if (issue.status === 'ignored') {\n      className += ' isIgnored';\n    }\n\n    if (this.props.statsPeriod) {\n      className += ' with-graph';\n    }\n\n    return (\n      <PanelItem\n        className={className}\n        onClick={this.toggleSelect}\n        flexDirection=\"column\"\n        style={{paddingTop: '12px', paddingBottom: '6px'}}\n      >\n        <CompactIssueHeader\n          data={issue}\n          organization={organization}\n          projectId={issue.project.slug}\n          eventId={this.props.eventId}\n        />\n        {this.props.statsPeriod && (\n          <div className=\"event-graph\">\n            <GroupChart\n              id={id}\n              statsPeriod={this.props.statsPeriod}\n              data={this.props.data}\n            />\n          </div>\n        )}\n        {this.props.showActions && (\n          <div className=\"more-menu-container align-right\">\n            <DropdownLink\n              topLevelClasses=\"more-menu\"\n              className=\"more-menu-toggle\"\n              caret={false}\n              title={<IconEllipsis size=\"xs\" />}\n            >\n              <li>\n                <IconLink\n                  onClick={this.onUpdate.bind(this, {\n                    status: issue.status !== 'resolved' ? 'resolved' : 'unresolved',\n                  })}\n                >\n                  <IconCheckmark size=\"xs\" />\n                </IconLink>\n              </li>\n              <li>\n                <IconLink\n                  onClick={this.onUpdate.bind(this, {isBookmarked: !issue.isBookmarked})}\n                >\n                  <IconStar isSolid size=\"xs\" />\n                </IconLink>\n              </li>\n              <li>\n                <SnoozeAction\n                  orgId={organization.slug}\n                  groupId={id}\n                  onSnooze={this.onSnooze}\n                />\n              </li>\n            </DropdownLink>\n          </div>\n        )}\n        {this.props.children}\n      </PanelItem>\n    );\n  },\n});\n\nexport {CompactIssue};\nexport default withApi(withOrganization(CompactIssue));\n\nconst IssueHeaderMetaWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledErrorLevel = styled(ErrorLevel)`\n  display: block;\n  margin-right: ${space(1)};\n`;\n\nconst IconLink = styled(Link)`\n  & > svg {\n    margin-right: ${space(0.5)};\n  }\n`;\n","import pick from 'lodash/pick';\nimport * as qs from 'query-string';\n\nimport {URL_PARAM} from 'app/constants/globalSelectionHeader';\n\nconst DEFAULT_STATUS = 'unresolved';\n\n/**\n * Get query for API given the current location.search string\n */\nexport function getQuery(search: string) {\n  const query = qs.parse(search);\n\n  const status = typeof query.status !== 'undefined' ? query.status : DEFAULT_STATUS;\n\n  const queryParams = {\n    status,\n    ...pick(query, ['cursor', ...Object.values(URL_PARAM)]),\n  };\n\n  return queryParams;\n}\n","import {Link} from 'react-router';\nimport {RouteComponentProps} from 'react-router/lib/Router';\nimport React from 'react';\nimport omit from 'lodash/omit';\nimport styled from '@emotion/styled';\nimport {withProfiler} from '@sentry/react';\n\nimport {Organization, UserReport} from 'app/types';\nimport {PageContent} from 'app/styles/organization';\nimport {Panel, PanelBody} from 'app/components/panels';\nimport {t} from 'app/locale';\nimport AsyncView from 'app/views/asyncView';\nimport CompactIssue from 'app/components/issues/compactIssue';\nimport EventUserFeedback from 'app/components/events/userFeedback';\nimport GlobalSelectionHeader from 'app/components/organizations/globalSelectionHeader';\nimport LightWeightNoProjectMessage from 'app/components/lightWeightNoProjectMessage';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport PageHeading from 'app/components/pageHeading';\nimport Pagination from 'app/components/pagination';\nimport space from 'app/styles/space';\nimport withOrganization from 'app/utils/withOrganization';\n\nimport {getQuery} from './utils';\nimport UserFeedbackEmpty from './userFeedbackEmpty';\n\ntype State = AsyncView['state'] & {\n  reportList: UserReport[];\n};\n\ntype Props = RouteComponentProps<{orgId: string}, {}> & {\n  organization: Organization;\n};\n\nclass OrganizationUserFeedback extends AsyncView<Props, State> {\n  getEndpoints(): [string, string, any][] {\n    const {\n      organization,\n      location: {search},\n    } = this.props;\n\n    return [\n      [\n        'reportList',\n        `/organizations/${organization.slug}/user-feedback/`,\n        {\n          query: getQuery(search),\n        },\n      ],\n    ];\n  }\n\n  getTitle() {\n    return `${t('User Feedback')} - ${this.props.organization.slug}`;\n  }\n\n  get projectIds() {\n    const {project} = this.props.location.query;\n\n    return Array.isArray(project)\n      ? project\n      : typeof project === 'string'\n      ? [project]\n      : [];\n  }\n\n  renderResults() {\n    const {orgId} = this.props.params;\n\n    return (\n      <div data-test-id=\"user-feedback-list\">\n        {this.state.reportList.map(item => {\n          const issue = item.issue;\n          return (\n            <CompactIssue key={item.id} id={issue.id} data={issue} eventId={item.eventID}>\n              <StyledEventUserFeedback report={item} orgId={orgId} issueId={issue.id} />\n            </CompactIssue>\n          );\n        })}\n      </div>\n    );\n  }\n\n  renderEmpty() {\n    return <UserFeedbackEmpty projectIds={this.projectIds} />;\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderStreamBody() {\n    const {loading, reportList} = this.state;\n\n    if (loading) {\n      return <LoadingIndicator />;\n    }\n\n    if (!reportList.length) {\n      return this.renderEmpty();\n    }\n\n    return this.renderResults();\n  }\n\n  renderBody() {\n    const {organization} = this.props;\n    const {location} = this.props;\n    const {pathname, search, query} = location;\n    const {status} = getQuery(search);\n    const {reportListPageLinks} = this.state;\n\n    const unresolvedQuery = omit(query, 'status');\n    const allIssuesQuery = {...query, status: ''};\n\n    return (\n      <GlobalSelectionHeader>\n        <PageContent>\n          <LightWeightNoProjectMessage organization={organization}>\n            <div data-test-id=\"user-feedback\">\n              <Header>\n                <PageHeading>{t('User Feedback')}</PageHeading>\n                <div className=\"btn-group\">\n                  <Link\n                    to={{pathname, query: unresolvedQuery}}\n                    className={\n                      'btn btn-sm btn-default' +\n                      (status === 'unresolved' ? ' active' : '')\n                    }\n                  >\n                    {t('Unresolved')}\n                  </Link>\n                  <Link\n                    to={{pathname, query: allIssuesQuery}}\n                    className={\n                      'btn btn-sm btn-default' + (status === '' ? ' active' : '')\n                    }\n                  >\n                    {t('All Issues')}\n                  </Link>\n                </div>\n              </Header>\n              <Panel>\n                <PanelBody className=\"issue-list\">{this.renderStreamBody()}</PanelBody>\n              </Panel>\n              <Pagination pageLinks={reportListPageLinks} />\n            </div>\n          </LightWeightNoProjectMessage>\n        </PageContent>\n      </GlobalSelectionHeader>\n    );\n  }\n}\n\nexport default withOrganization(withProfiler(OrganizationUserFeedback));\n\nconst Header = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: ${space(2)};\n`;\n\nconst StyledEventUserFeedback = styled(EventUserFeedback)`\n  margin: ${space(2)} 0 0;\n`;\n"],"sourceRoot":""}