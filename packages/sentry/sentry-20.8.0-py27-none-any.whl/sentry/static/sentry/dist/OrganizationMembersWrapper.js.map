{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/components/navTabs.tsx","webpack:///./app/components/links/listLink.tsx","webpack:///./app/components/badge.tsx","webpack:///./app/views/settings/organizationMembers/organizationMembersWrapper.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","SettingsPageHeading","props","icon","action","tabs","noTitleStyles","TitleAndActions","Icon","Title","styled","Action","React","Component","defaultProps","p","space","StyledSettingsPageHeading","routeTitleGen","routeName","orgSlug","withSentry","tmpl","NavTabs","underlined","className","tabProps","mergedClassName","classnames","ListLink","isActive","to","query","index","context","router","pathname","getClassName","_classNames","activeClassName","classNames","children","carriedProps","omit","onlyActiveOnIndex","displayName","contextTypes","PropTypes","object","isRequired","priorityColors","new","theme","red400","strong","blue400","highlight","green400","Badge","priority","text","gray400","propTypes","oneOfType","string","number","oneOf","OrganizationMembersWrapper","removeAccessRequest","id","setState","state","requestList","filter","request","removeInviteRequest","inviteRequests","updateInviteRequest","data","inviteIndex","findIndex","orgId","params","t","organization","Fragment","StyledPanel","size","TextContainer","Heading","SubText","onClick","openInviteMembersModal","source","showNavTabs","onRequestsTab","data-test-id","showInviteRequests","trackAnalyticsEvent","eventKey","eventName","organization_id","requestCount","StyledBadge","cloneElement","onRemoveInviteRequest","onUpdateInviteRequest","onRemoveAccessRequest","location","includes","access","hasWriteAccess","length","count","toString","Panel","fontSizeExtraLarge","gray600","breakpoints","withOrganization"],"mappings":"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","file":"OrganizationMembersWrapper.js","sourcesContent":["import DocumentTitle from 'react-document-title';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'app/styles/space';\nimport {HeaderTitle} from 'app/styles/organization';\n\ntype Props = {\n  // The title\n  title: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n\n  className?: string;\n\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // Actions on opposite end of title bar from the title\n  action?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass SettingsPageHeading extends React.Component<Props> {\n  static propTypes = {\n    icon: PropTypes.node,\n    title: PropTypes.node.isRequired,\n    action: PropTypes.node,\n    tabs: PropTypes.node,\n    // Disables font styles in the title. Allows for more custom titles.\n    noTitleStyles: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          {icon && <Icon>{icon}</Icon>}\n          {title && (\n            <Title tabs={tabs} styled={noTitleStyles}>\n              <HeaderTitle>{title}</HeaderTitle>\n            </Title>\n          )}\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p =>\n    p.tabs\n      ? `${space(4)} ${space(2)} ${space(2)} 0`\n      : `${space(4)} ${space(2)} ${space(4)} 0`};\n  flex: 1;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst StyledSettingsPageHeading = styled(SettingsPageHeading)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default StyledSettingsPageHeading;\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true\n): string {\n  const tmpl = `${routeName} - ${orgSlug}`;\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\ntype Props = {\n  underlined?: boolean;\n  className?: string;\n};\n\ntype NavProps = Omit<React.HTMLProps<HTMLUListElement>, keyof Props> & Props;\n\nfunction NavTabs(props: NavProps) {\n  const {underlined, className, ...tabProps} = props;\n  const mergedClassName = classnames('nav nav-tabs', className, {\n    'border-bottom': underlined,\n  });\n  return <ul className={mergedClassName} {...tabProps} />;\n}\n\nNavTabs.propTypes = {\n  underlined: PropTypes.bool,\n};\n\nexport default NavTabs;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport omit from 'lodash/omit';\nimport {Link} from 'react-router';\nimport classNames from 'classnames';\nimport {LocationDescriptor} from 'history';\n\ntype DefaultProps = {\n  index: boolean;\n  activeClassName: string;\n};\n\ntype Props = DefaultProps & {\n  to: LocationDescriptor;\n  className?: string;\n  query?: string;\n  onClick?: () => void;\n  // If supplied by parent component, decides whether link element\n  // is \"active\" or not ... overriding default behavior of strict\n  // route matching\n  isActive?: (location: LocationDescriptor, indexOnly?: boolean) => boolean;\n};\n\nclass ListLink extends React.Component<Props> {\n  static displayName = 'ListLink';\n\n  static contextTypes = {\n    router: PropTypes.object.isRequired,\n  };\n\n  static defaultProps: DefaultProps = {\n    activeClassName: 'active',\n    index: false,\n  };\n\n  isActive = () => {\n    const {isActive, to, query, index} = this.props;\n\n    return (isActive || this.context.router.isActive)({pathname: to, query}, index);\n  };\n\n  getClassName = () => {\n    const _classNames = {};\n    const {className, activeClassName} = this.props;\n\n    if (className) {\n      _classNames[className] = true;\n    }\n\n    if (this.isActive()) {\n      _classNames[activeClassName] = true;\n    }\n\n    return classNames(_classNames);\n  };\n\n  render() {\n    const {index, children} = this.props;\n    const carriedProps = omit(this.props, 'activeClassName', 'isActive', 'index');\n\n    return (\n      <li className={this.getClassName()}>\n        <Link {...carriedProps} onlyActiveOnIndex={index}>\n          {children}\n        </Link>\n      </li>\n    );\n  }\n}\n\nexport default ListLink;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'app/styles/space';\nimport theme from 'app/utils/theme';\n\nconst priorityColors = {\n  new: theme.red400,\n  strong: theme.blue400,\n  highlight: theme.green400,\n} as const;\n\ntype Props = React.HTMLProps<HTMLSpanElement> & {\n  text?: string | number | null;\n  priority?: keyof typeof priorityColors;\n  className?: string;\n};\n\nconst Badge = styled(({priority: _priority, text, ...props}: Props) => (\n  <span {...props}>{text}</span>\n))<Props>`\n  display: inline-block;\n  height: 20px;\n  min-width: 20px;\n  line-height: 20px;\n  border-radius: 20px;\n  padding: 0 5px;\n  margin-left: ${space(0.5)};\n  font-size: 75%;\n  font-weight: 600;\n  text-align: center;\n  color: #fff;\n  background: ${p => (p.priority ? priorityColors[p.priority] : theme.gray400)};\n  transition: background 100ms linear;\n\n  position: relative;\n  top: -1px;\n`;\n\nBadge.propTypes = {\n  text: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  priority: PropTypes.oneOf(['strong', 'new', 'highlight']),\n} as any;\n\nexport default Badge;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport {RouteComponentProps} from 'react-router/lib/Router';\n\nimport {openInviteMembersModal} from 'app/actionCreators/modal';\nimport {Organization, Member} from 'app/types';\nimport {Panel} from 'app/components/panels';\nimport {t} from 'app/locale';\nimport {trackAnalyticsEvent} from 'app/utils/analytics';\nimport AsyncView from 'app/views/asyncView';\nimport Badge from 'app/components/badge';\nimport Button from 'app/components/button';\nimport {IconMail} from 'app/icons';\nimport ListLink from 'app/components/links/listLink';\nimport NavTabs from 'app/components/navTabs';\nimport routeTitleGen from 'app/utils/routeTitle';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport space from 'app/styles/space';\nimport withOrganization from 'app/utils/withOrganization';\n\ntype Props = {\n  children?: any;\n  organization: Organization;\n} & RouteComponentProps<{orgId: string}, {}>;\n\ntype State = AsyncView['state'] & {\n  inviteRequests: Member[];\n};\n\nclass OrganizationMembersWrapper extends AsyncView<Props, State> {\n  getEndpoints(): [string, string][] {\n    const {orgId} = this.props.params;\n\n    return [\n      ['inviteRequests', `/organizations/${orgId}/invite-requests/`],\n      ['requestList', `/organizations/${orgId}/access-requests/`],\n    ];\n  }\n\n  getTitle() {\n    const {orgId} = this.props.params;\n    return routeTitleGen(t('Members'), orgId, false);\n  }\n\n  get onRequestsTab() {\n    return location.pathname.includes('/requests/');\n  }\n\n  get hasWriteAccess() {\n    const {organization} = this.props;\n    if (!organization || !organization.access) {\n      return false;\n    }\n    return organization.access.includes('member:write');\n  }\n\n  get showInviteRequests() {\n    return this.hasWriteAccess;\n  }\n\n  get showNavTabs() {\n    const {requestList} = this.state;\n\n    // show the requests tab if there are pending team requests,\n    // or if the user has access to approve or deny invite requests\n    return (requestList && requestList.length > 0) || this.showInviteRequests;\n  }\n\n  get requestCount() {\n    const {requestList, inviteRequests} = this.state;\n    let count = requestList.length;\n\n    // if the user can't see the invite requests panel,\n    // exclude those requests from the total count\n    if (this.showInviteRequests) {\n      count += inviteRequests.length;\n    }\n    return count ? count.toString() : null;\n  }\n\n  removeAccessRequest = (id: string) =>\n    this.setState(state => ({\n      requestList: state.requestList.filter(request => request.id !== id),\n    }));\n\n  removeInviteRequest = (id: string) =>\n    this.setState(state => ({\n      inviteRequests: state.inviteRequests.filter(request => request.id !== id),\n    }));\n\n  updateInviteRequest = (id: string, data: Partial<Member>) =>\n    this.setState(state => {\n      const inviteRequests = [...state.inviteRequests];\n      const inviteIndex = inviteRequests.findIndex(request => request.id === id);\n\n      inviteRequests[inviteIndex] = {...inviteRequests[inviteIndex], ...data};\n\n      return {inviteRequests};\n    });\n\n  renderBody() {\n    const {\n      children,\n      organization,\n      params: {orgId},\n    } = this.props;\n    const {requestList, inviteRequests} = this.state;\n\n    return (\n      <React.Fragment>\n        <SettingsPageHeader title=\"Members\" />\n\n        <StyledPanel>\n          <IconMail size=\"lg\" />\n          <TextContainer>\n            <Heading>{t('Invite new members')}</Heading>\n            <SubText>\n              {t('Invite new members by email to join your organization')}\n            </SubText>\n          </TextContainer>\n          <Button\n            priority=\"primary\"\n            onClick={() => openInviteMembersModal({source: 'members_settings'})}\n          >\n            {t('Invite Members')}\n          </Button>\n        </StyledPanel>\n\n        {this.showNavTabs && (\n          <NavTabs underlined>\n            <ListLink\n              to={`/settings/${orgId}/members/`}\n              isActive={() => !this.onRequestsTab}\n              data-test-id=\"members-tab\"\n            >\n              {t('Members')}\n            </ListLink>\n            <ListLink\n              to={`/settings/${orgId}/members/requests/`}\n              isActive={() => this.onRequestsTab}\n              data-test-id=\"requests-tab\"\n              onClick={() => {\n                this.showInviteRequests &&\n                  trackAnalyticsEvent({\n                    eventKey: 'invite_request.tab_clicked',\n                    eventName: 'Invite Request Tab Clicked',\n                    organization_id: organization.id,\n                  });\n              }}\n            >\n              {t('Requests')}\n            </ListLink>\n            {this.requestCount && <StyledBadge text={this.requestCount} />}\n          </NavTabs>\n        )}\n\n        {children &&\n          React.cloneElement(children, {\n            requestList,\n            inviteRequests,\n            onRemoveInviteRequest: this.removeInviteRequest,\n            onUpdateInviteRequest: this.updateInviteRequest,\n            onRemoveAccessRequest: this.removeAccessRequest,\n            showInviteRequests: this.showInviteRequests,\n          })}\n      </React.Fragment>\n    );\n  }\n}\n\nconst StyledPanel = styled(Panel)`\n  padding: 18px;\n  margin-top: -14px;\n  margin-bottom: 40px;\n  display: grid;\n  grid-template-columns: max-content auto max-content;\n  grid-gap: ${space(3)};\n  align-content: center;\n`;\n\nconst TextContainer = styled('div')`\n  display: inline-grid;\n  grid-gap: ${space(1)};\n`;\n\nconst Heading = styled('h1')`\n  margin: 0;\n  font-weight: 400;\n  font-size: ${p => p.theme.fontSizeExtraLarge};\n`;\n\nconst SubText = styled('p')`\n  margin: 0;\n  color: ${p => p.theme.gray600};\n  font-size: 15px;\n`;\n\nconst StyledBadge = styled(Badge)`\n  margin-left: -12px;\n\n  @media (max-width: ${p => p.theme.breakpoints[0]}) {\n    margin-left: -6px;\n  }\n`;\n\nexport default withOrganization(OrganizationMembersWrapper);\n"],"sourceRoot":""}