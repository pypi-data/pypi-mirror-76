{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/components/layouts/thirds.tsx","webpack:///./app/components/avatar/avatarList.tsx","webpack:///./app/components/well.tsx","webpack:///./app/views/releasesV2/detail/utils.tsx","webpack:///./app/views/releasesV2/detail/releaseNoCommitData.tsx","webpack:///./app/components/listGroup.tsx","webpack:///./app/components/fileIcon.tsx","webpack:///./app/components/fileChange.tsx","webpack:///./app/components/repositoryFileSummary.jsx","webpack:///./app/views/releasesV2/detail/filesChanged/index.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","routeTitleGen","routeName","orgSlug","withSentry","tmpl","Body","space","p","theme","white","breakpoints","HeaderContent","HeaderActions","Title","headerFontSize","gray700","overflowEllipsis","Header","borderDark","Main","fullWidth","Side","AvatarList","props","className","users","avatarSize","maxVisibleAvatars","renderTooltip","typeMembers","tooltipOptions","visibleUsers","slice","numCollapsedUsers","length","position","AvatarListWrapper","CollapsedUsers","size","Plus","map","user","StyledAvatar","key","id","email","hasTooltip","React","Component","defaultProps","Circle","UserAvatar","gray300","gray500","Math","floor","Well","borderLight","gray100","hasImage","centered","propTypes","PropTypes","bool","deleteRelease","orgId","version","Client","requestPromise","encodeURIComponent","method","getFilesByRepository","fileList","reduce","filesByRepository","file","filename","repoName","author","type","hasOwnProperty","authors","types","Set","add","getCommitsByRepository","commitList","commitsByRepository","commit","repositoryName","repository","name","t","push","ReleaseNoCommitData","StyledWell","priority","to","ListGroupItem","borderRadius","ListGroup","striped","FILE_EXTENSION_TO_ICON","jsx","tsx","js","ts","php","py","vue","go","java","perl","rb","rs","rlib","swift","h","m","mm","M","cs","ex","exs","FileIcon","fileName","providedSize","fileExtension","split","pop","iconName","iconSizes","src","require","width","height","FileChange","FileItem","Filename","StyledFileIcon","fontSizeMedium","gray400","Collapsed","onClick","tn","count","RepositoryFileSummary","args","onCollapseToggle","setState","collapsed","state","loading","fileChangeSummary","collapsable","maxWhenCollapsed","files","Object","keys","fileCount","sort","numCollapsed","canCollapse","Container","values","FilesChanged","params","organization","formatVersion","release","slug","repos","Fragment","small","StyledMain","gray600","withOrganization"],"mappings":"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","file":"ReleasesV2DetailFilesChanged.js","sourcesContent":["import DocumentTitle from 'react-document-title';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true\n): string {\n  const tmpl = `${routeName} - ${orgSlug}`;\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import styled from '@emotion/styled';\n\nimport space from 'app/styles/space';\nimport overflowEllipsis from 'app/styles/overflowEllipsis';\n\n/**\n * Base container for 66/33 containers.\n */\nexport const Body = styled('div')`\n  padding: ${space(2)} ${space(4)};\n  margin: 0;\n  background-color: ${p => p.theme.white};\n  flex-grow: 1;\n\n  @media (min-width: ${p => p.theme.breakpoints[1]}) {\n    display: grid;\n    grid-template-columns: 66% auto;\n    align-content: start;\n    grid-gap: ${space(3)};\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints[2]}) {\n    grid-template-columns: minmax(100px, auto) 325px;\n  }\n`;\n\n/**\n * Use HeaderContent to create horizontal regions in the header\n * that contain a heading/breadcrumbs and a button group.\n */\nexport const HeaderContent = styled('div')`\n  display: flex;\n  flex-direction: column;\n  justify-content: normal;\n  margin-bottom: ${space(2)};\n  overflow: hidden;\n\n  @media (max-width: ${p => p.theme.breakpoints[1]}) {\n    margin-bottom: ${space(1)};\n  }\n`;\n\n/**\n * Container for action buttons and secondary information that\n * flows on the top right of the header.\n */\nexport const HeaderActions = styled('div')`\n  display: flex;\n  flex-direction: column;\n  justify-content: normal;\n  min-width: max-content;\n\n  @media (max-width: ${p => p.theme.breakpoints[1]}) {\n    width: max-content;\n    margin-bottom: ${space(2)};\n  }\n`;\n\n/**\n * Heading container that includes margins.\n */\nexport const Title = styled('h2')`\n  font-size: ${p => p.theme.headerFontSize};\n  font-weight: normal;\n  line-height: 1.2;\n  color: ${p => p.theme.gray700};\n  margin-top: ${space(3)};\n  /* TODO(bootstrap) Remove important when bootstrap headings are removed */\n  margin-bottom: 0 !important;\n  min-height: 30px;\n  align-self: center;\n  ${overflowEllipsis};\n\n  @media (max-width: ${p => p.theme.breakpoints[1]}) {\n    margin-top: ${space(1)};\n  }\n`;\n\n/**\n * Header container for header content and header actions.\n *\n * Uses a horizontal layout in wide viewports to put space between\n * the headings and the actions container. In narrow viewports these elements\n * are stacked vertically.\n */\nexport const Header = styled('div')`\n  display: flex;\n  flex-direction: row;\n  flex-grow: 0;\n  justify-content: space-between;\n  padding: ${space(2)} ${space(4)} 0 ${space(4)};\n  margin: 0;\n\n  background-color: transparent;\n  border-bottom: 1px solid ${p => p.theme.borderDark};\n\n  @media (max-width: ${p => p.theme.breakpoints[1]}) {\n    flex-direction: column;\n  }\n`;\n\n/**\n * Containers for two column 66/33 layout.\n */\nexport const Main = styled('section')<{fullWidth?: boolean}>`\n  grid-column: ${p => (p.fullWidth ? '1/3' : '1/2')};\n  max-width: 100%;\n`;\nexport const Side = styled('aside')`\n  grid-column: 2/3;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport {css} from '@emotion/core';\n\nimport {AvatarUser} from 'app/types';\nimport SentryTypes from 'app/sentryTypes';\nimport UserAvatar from 'app/components/avatar/userAvatar';\nimport Tooltip from 'app/components/tooltip';\n\nconst defaultProps = {\n  avatarSize: 28,\n  maxVisibleAvatars: 5,\n  typeMembers: 'users',\n  tooltipOptions: {},\n};\n\ntype DefaultProps = Readonly<typeof defaultProps>;\ntype Mutable<T> = {-readonly [P in keyof T]: T[P]};\n\ntype Props = {\n  className?: string;\n  users: AvatarUser[];\n  renderTooltip?: UserAvatar['props']['renderTooltip'];\n  tooltipOptions: Mutable<UserAvatar['props']['tooltipOptions']>;\n} & DefaultProps;\n\nexport default class AvatarList extends React.Component<Props> {\n  static propTypes = {\n    users: PropTypes.arrayOf(SentryTypes.User).isRequired,\n    avatarSize: PropTypes.number,\n    maxVisibleAvatars: PropTypes.number,\n    renderTooltip: PropTypes.func,\n    tooltipOptions: PropTypes.object,\n    typeMembers: PropTypes.string,\n  };\n\n  static defaultProps = defaultProps;\n\n  render() {\n    const {\n      className,\n      users,\n      avatarSize,\n      maxVisibleAvatars,\n      renderTooltip,\n      typeMembers,\n      tooltipOptions,\n    } = this.props;\n\n    const visibleUsers = users.slice(0, maxVisibleAvatars);\n    const numCollapsedUsers = users.length - visibleUsers.length;\n\n    if (!tooltipOptions.position) {\n      tooltipOptions.position = 'top';\n    }\n\n    return (\n      <AvatarListWrapper className={className}>\n        {!!numCollapsedUsers && (\n          <Tooltip title={`${numCollapsedUsers} other ${typeMembers}`}>\n            <CollapsedUsers size={avatarSize}>\n              {numCollapsedUsers < 99 && <Plus>+</Plus>}\n              {numCollapsedUsers}\n            </CollapsedUsers>\n          </Tooltip>\n        )}\n        {visibleUsers.map(user => (\n          <StyledAvatar\n            key={`${user.id}-${user.email}`}\n            user={user}\n            size={avatarSize}\n            renderTooltip={renderTooltip}\n            tooltipOptions={tooltipOptions}\n            hasTooltip\n          />\n        ))}\n      </AvatarListWrapper>\n    );\n  }\n}\n\n// used in releases list page to do some alignment\nexport const AvatarListWrapper = styled('div')`\n  display: flex;\n  flex-direction: row-reverse;\n`;\n\nconst Circle = css`\n  border-radius: 50%;\n  border: 2px solid white;\n  margin-left: -8px;\n  cursor: default;\n\n  &:hover {\n    z-index: 1;\n  }\n`;\n\nconst StyledAvatar = styled(UserAvatar)`\n  overflow: hidden;\n  ${Circle};\n`;\n\nconst CollapsedUsers = styled('div')<{size: number}>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  text-align: center;\n  font-weight: 600;\n  background-color: ${p => p.theme.gray300};\n  color: ${p => p.theme.gray500};\n  font-size: ${p => Math.floor(p.size / 2.3)}px;\n  width: ${p => p.size}px;\n  height: ${p => p.size}px;\n  ${Circle};\n`;\n\nconst Plus = styled('span')`\n  font-size: 10px;\n  margin-left: 1px;\n  margin-right: -1px;\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\n\ntype Props = {\n  hasImage?: boolean;\n  centered?: boolean;\n  children: React.ReactNode;\n  theme?: any;\n};\n\ntype WellProps = Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props;\n\nconst Well = styled('div')<WellProps>`\n  border: 1px solid ${p => p.theme.borderLight};\n  box-shadow: none;\n  background: ${p => p.theme.gray100};\n  padding: ${p => (p.hasImage ? '80px 30px' : '15px 20px')};\n  margin-bottom: 20px;\n  border-radius: 3px;\n  ${p => p.centered && 'text-align: center'};\n`;\n\nWell.propTypes = {\n  hasImage: PropTypes.bool,\n  centered: PropTypes.bool,\n};\n\nexport default Well;\n","import {Client} from 'app/api';\nimport {CommitFile, Commit} from 'app/types';\nimport {t} from 'app/locale';\n\nexport type CommitsByRepository = {\n  [key: string]: Commit[];\n};\n\nexport const deleteRelease = (orgId: string, version: string) => {\n  const api = new Client();\n\n  return api.requestPromise(\n    `/organizations/${orgId}/releases/${encodeURIComponent(version)}/`,\n    {\n      method: 'DELETE',\n    }\n  );\n};\n\n/**\n * Convert list of individual file changes into a per-file summary grouped by repository\n */\nexport function getFilesByRepository(fileList: CommitFile[]) {\n  return fileList.reduce((filesByRepository, file) => {\n    const {filename, repoName, author, type} = file;\n\n    if (!filesByRepository.hasOwnProperty(repoName)) {\n      filesByRepository[repoName] = {};\n    }\n\n    if (!filesByRepository[repoName].hasOwnProperty(filename)) {\n      filesByRepository[repoName][filename] = {\n        authors: {},\n        types: new Set(),\n      };\n    }\n\n    filesByRepository[repoName][filename].authors[author.email] = author;\n    filesByRepository[repoName][filename].types.add(type);\n\n    return filesByRepository;\n  }, {});\n}\n\n/**\n * Convert list of individual commits into a summary grouped by repository\n */\nexport function getCommitsByRepository(commitList: Commit[]): CommitsByRepository {\n  return commitList.reduce((commitsByRepository, commit) => {\n    const repositoryName = commit.repository?.name ?? t('unknown');\n\n    if (!commitsByRepository.hasOwnProperty(repositoryName)) {\n      commitsByRepository[repositoryName] = [];\n    }\n\n    commitsByRepository[repositoryName].push(commit);\n\n    return commitsByRepository;\n  }, {});\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport Button from 'app/components/button';\nimport Well from 'app/components/well';\nimport {IconCommit} from 'app/icons';\n\ntype Props = {\n  orgId: string;\n};\n\nconst ReleaseNoCommitData = ({orgId}: Props) => (\n  <StyledWell centered>\n    <IconCommit size=\"xl\" />\n    <h4>{t('Releases are better with commit data!')}</h4>\n    <p>\n      {t(\n        'Connect a repository to see commit info, files changed, and authors involved in future releases.'\n      )}\n    </p>\n    <Button priority=\"primary\" to={`/settings/${orgId}/repos/`}>\n      {t('Connect a repository')}\n    </Button>\n  </StyledWell>\n);\n\nconst StyledWell = styled(Well)`\n  background-color: ${p => p.theme.white};\n  padding-top: ${space(2)};\n  padding-bottom: ${space(4)};\n`;\n\nexport default ReleaseNoCommitData;\n","import styled from '@emotion/styled';\n\nimport space from 'app/styles/space';\n\ntype ListGroupProps = {\n  striped?: boolean;\n};\n\ntype ListGroupItemProps = {\n  centered?: boolean;\n};\n\nconst ListGroupItem = styled('li')<ListGroupItemProps>`\n  position: relative;\n  display: block;\n  min-height: 36px;\n  border: 1px solid ${p => p.theme.borderLight};\n\n  padding: ${space(0.5)} ${space(1.5)};\n\n  margin-bottom: -1px;\n  ${p => (p.centered ? 'text-align: center;' : '')}\n\n  &:first-child {\n    border-top-left-radius: ${p => p.theme.borderRadius};\n    border-top-right-radius: ${p => p.theme.borderRadius};\n  }\n  &:last-child {\n    border-bottom-left-radius: ${p => p.theme.borderRadius};\n    border-bottom-right-radius: ${p => p.theme.borderRadius};\n  }\n`;\n\nconst ListGroup = styled('ul')<ListGroupProps>`\n  box-shadow: 0 1px 0px rgba(0, 0, 0, 0.03);\n  background: ${p => p.theme.white};\n  padding: 0;\n  margin: 0;\n\n  ${p =>\n    p.striped\n      ? `\n    & > li:nth-child(odd) {\n      background: ${p.theme.gray100};\n    }\n  `\n      : ''}\n`;\n\nexport {ListGroup, ListGroupItem};\n","import React from 'react';\n\nimport {IconFile} from 'app/icons';\nimport theme from 'app/utils/theme';\n\nconst FILE_EXTENSION_TO_ICON = {\n  jsx: 'react',\n  tsx: 'react',\n  js: 'javascript',\n  ts: 'javascript',\n  php: 'php',\n  py: 'python',\n  vue: 'vue',\n  go: 'go',\n  java: 'java',\n  perl: 'perl',\n  rb: 'ruby',\n  rs: 'rust',\n  rlib: 'rust',\n  swift: 'swift',\n  h: 'apple',\n  m: 'apple',\n  mm: 'apple',\n  M: 'apple',\n  cs: 'csharp',\n  ex: 'elixir',\n  exs: 'elixir',\n};\n\ntype Props = {\n  fileName: string;\n  size?: string;\n  className?: string;\n};\n\nconst FileIcon = ({fileName, size: providedSize = 'sm', className}: Props) => {\n  const fileExtension = fileName.split('.').pop();\n  const iconName = fileExtension ? FILE_EXTENSION_TO_ICON[fileExtension] : null;\n  const size = theme.iconSizes[providedSize] ?? providedSize;\n\n  if (!iconName) {\n    return <IconFile size={size} className={className} />;\n  }\n\n  return (\n    <img\n      src={require(`platformicons/svg/${iconName}.svg`)}\n      width={size}\n      height={size}\n      className={className}\n    />\n  );\n};\n\nexport default FileIcon;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport {ListGroupItem} from 'app/components/listGroup';\nimport space from 'app/styles/space';\nimport {AvatarUser} from 'app/types';\nimport AvatarList from 'app/components/avatar/avatarList';\nimport FileIcon from 'app/components/fileIcon';\nimport TextOverflow from 'app/components/textOverflow';\n\ntype Props = {\n  filename: string;\n  authors: AvatarUser[];\n};\n\nconst FileChange = ({filename, authors}: Props) => (\n  <FileItem>\n    <Filename>\n      <StyledFileIcon fileName={filename} />\n      <TextOverflow>{filename}</TextOverflow>\n    </Filename>\n    <div>\n      <AvatarList users={authors} avatarSize={25} typeMembers=\"authors\" />\n    </div>\n  </FileItem>\n);\n\nFileChange.propTypes = {\n  filename: PropTypes.string.isRequired,\n  authors: PropTypes.array.isRequired,\n};\n\nconst FileItem = styled(ListGroupItem)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Filename = styled('div')`\n  font-size: ${p => p.theme.fontSizeMedium};\n  display: grid;\n  grid-gap: ${space(1)};\n  margin-right: ${space(3)};\n  align-items: center;\n  grid-template-columns: max-content 1fr;\n`;\n\nconst StyledFileIcon = styled(FileIcon)`\n  color: ${p => p.theme.gray400};\n  border-radius: 3px;\n`;\n\nexport default FileChange;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport {ListGroup, ListGroupItem} from 'app/components/listGroup';\nimport FileChange from 'app/components/fileChange';\nimport {t, tn} from 'app/locale';\nimport space from 'app/styles/space';\n\nfunction Collapsed(props) {\n  return (\n    <ListGroupItem centered>\n      <a onClick={props.onClick}>\n        {tn('Show %s collapsed file', 'Show %s collapsed files', props.count)}\n      </a>\n    </ListGroupItem>\n  );\n}\n\nCollapsed.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  count: PropTypes.number.isRequired,\n};\n\nclass RepositoryFileSummary extends React.Component {\n  static propTypes = {\n    fileChangeSummary: PropTypes.object,\n    repository: PropTypes.string,\n    collapsable: PropTypes.bool,\n    maxWhenCollapsed: PropTypes.number,\n  };\n\n  static defaultProps = {\n    collapsable: true,\n    maxWhenCollapsed: 5,\n  };\n\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      collapsed: true,\n    };\n  }\n\n  onCollapseToggle = () => {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  };\n\n  render() {\n    const {repository, fileChangeSummary, collapsable, maxWhenCollapsed} = this.props;\n    let files = Object.keys(fileChangeSummary);\n    const fileCount = files.length;\n    files.sort();\n    if (this.state.collapsed && collapsable && fileCount > maxWhenCollapsed) {\n      files = files.slice(0, maxWhenCollapsed);\n    }\n    const numCollapsed = fileCount - files.length;\n    const canCollapse = collapsable && fileCount > maxWhenCollapsed;\n    return (\n      <Container>\n        <h5>\n          {tn(\n            '%s file changed in ' + repository,\n            '%s files changed in ' + repository,\n            fileCount\n          )}\n        </h5>\n        <ListGroup striped>\n          {files.map(filename => {\n            const {authors, types} = fileChangeSummary[filename];\n            return (\n              <FileChange\n                key={filename}\n                filename={filename}\n                authors={Object.values(authors)}\n                types={types}\n              />\n            );\n          })}\n          {numCollapsed > 0 && (\n            <Collapsed onClick={this.onCollapseToggle} count={numCollapsed} />\n          )}\n          {numCollapsed === 0 && canCollapse && (\n            <ListGroupItem centered>\n              <a onClick={this.onCollapseToggle}>{t('Collapse')}</a>\n            </ListGroupItem>\n          )}\n        </ListGroup>\n      </Container>\n    );\n  }\n}\n\nconst Container = styled('div')`\n  margin-bottom: ${space(2)};\n`;\n\nexport default RepositoryFileSummary;\n","import React from 'react';\nimport {RouteComponentProps} from 'react-router/lib/Router';\nimport styled from '@emotion/styled';\n\nimport AsyncComponent from 'app/components/asyncComponent';\nimport RepositoryFileSummary from 'app/components/repositoryFileSummary';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {CommitFile, Repository, Organization} from 'app/types';\nimport EmptyStateWarning from 'app/components/emptyStateWarning';\nimport AsyncView from 'app/views/asyncView';\nimport withOrganization from 'app/utils/withOrganization';\nimport routeTitleGen from 'app/utils/routeTitle';\nimport {formatVersion} from 'app/utils/formatters';\nimport {Panel, PanelBody} from 'app/components/panels';\nimport {Main} from 'app/components/layouts/thirds';\n\nimport {getFilesByRepository} from '../utils';\nimport ReleaseNoCommitData from '../releaseNoCommitData';\n\ntype RouteParams = {\n  orgId: string;\n  release: string;\n};\n\ntype Props = RouteComponentProps<RouteParams, {}> & {\n  organization: Organization;\n};\n\ntype State = {\n  fileList: CommitFile[];\n  repos: Repository[];\n} & AsyncComponent['state'];\n\nclass FilesChanged extends AsyncView<Props, State> {\n  getTitle() {\n    const {params, organization} = this.props;\n    return routeTitleGen(\n      t('Files Changed - Release %s', formatVersion(params.release)),\n      organization.slug,\n      false\n    );\n  }\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {orgId, release} = this.props.params;\n\n    return [\n      [\n        'fileList',\n        `/organizations/${orgId}/releases/${encodeURIComponent(release)}/commitfiles/`,\n      ],\n      ['repos', `/organizations/${orgId}/repos/`],\n    ];\n  }\n\n  renderBody() {\n    const {orgId} = this.props.params;\n    const {fileList, repos} = this.state;\n    const filesByRepository = getFilesByRepository(fileList);\n\n    if (repos.length === 0) {\n      return <ReleaseNoCommitData orgId={orgId} />;\n    }\n\n    return (\n      <React.Fragment>\n        {fileList.length ? (\n          Object.keys(filesByRepository).map(repository => (\n            <RepositoryFileSummary\n              key={repository}\n              repository={repository}\n              fileChangeSummary={filesByRepository[repository]}\n              collapsable={false}\n            />\n          ))\n        ) : (\n          <Panel>\n            <PanelBody>\n              <EmptyStateWarning small>\n                {t('There are no changed files.')}\n              </EmptyStateWarning>\n            </PanelBody>\n          </Panel>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  renderComponent() {\n    return <StyledMain fullWidth>{super.renderComponent()}</StyledMain>;\n  }\n}\n\nconst StyledMain = styled(Main)`\n  h5 {\n    color: ${p => p.theme.gray600};\n    font-size: ${p => p.theme.fontSizeMedium};\n    margin-bottom: ${space(1.5)};\n  }\n`;\n\nexport default withOrganization(FilesChanged);\n"],"sourceRoot":""}