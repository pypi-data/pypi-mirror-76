{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/components/switch.tsx","webpack:///./app/views/settings/organizationMembers/organizationMemberRow.jsx","webpack:///./app/views/settings/organizationMembers/components/membersFilter.tsx","webpack:///./app/views/settings/organizationMembers/organizationMembersList.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","routeTitleGen","routeName","orgSlug","withSentry","tmpl","recreateRoute","to","options","lastRootIndex","routeIndex","routes","params","location","stepBack","paths","map","path","indexOf","findLastIndex","slice","baseRoute","search","hash","fullRoute","join","replaceRouterParams","Switch","forwardRef","size","isActive","isLoading","isDisabled","toggle","id","name","className","SwitchButton","ref","type","onClick","undefined","role","aria-checked","data-test-id","Toggle","getSize","p","getToggleSize","getToggleTop","getTranslateX","theme","borderDark","borderLight","green400","gray400","React","props","OrganizationMemberRow","state","busy","handleRemove","e","onRemove","setState","member","handleLeave","onLeave","handleSendInvite","onSendInvite","orgName","status","requireLink","memberCanLeave","currentUser","canRemoveMembers","canAddMembers","flags","email","roleName","pending","expired","user","needsSso","isCurrentUser","showRemoveButton","showLeaveButton","canRemoveMember","has2fa","detailsUrl","isInviteSuccessful","isInviting","showResendButton","StyledPanelItem","MemberHeading","MemberDescription","style","margin","UserName","Email","InvitedRole","t","tct","Fragment","LoadingContainer","mini","disabled","priority","AuthStatus","isCircled","color","message","onConfirm","onSuccess","onError","icon","PureComponent","PanelItem","space","Section","Link","fontSizeLarge","gray700","fontSizeMedium","getBoolean","list","Array","isArray","v","toLowerCase","includes","MembersFilter","roles","query","onChange","tokenizeSearch","filters","getTags","isInvited","ssoLinked","handleRoleFilter","roleList","Set","has","add","newSearch","copy","setTag","stringifyQueryObject","handleBoolFilter","key","value","newQueryObject","removeTag","Boolean","toString","FilterContainer","FilterHeader","FilterLists","Filters","checked","BooleanFilter","children","dropShadowLight","gray100","gray600","fontSizeExtraSmall","fontSizeSmall","OrganizationMembersList","removeMember","a","orgId","api","requestPromise","method","data","members","filter","organization","slug","addErrorMessage","addSuccessMessage","redirectToRemainingOrganization","removeOrg","invited","resendMemberInvite","memberId","regenerate","paginate","allowError","error","membersPageLinks","currentMember","access","canRemove","ConfigStore","get","isOnlyOwner","find","authProvider","require_link","renderSearch","defaultSearchBar","handleChange","SearchWrapper","closeOnEscape","getActorProps","isOpen","FilterWrapper","StyledMembersFilter","MEMBER_ROLES","css","renderSearchInput","updateRoute","placeholder","length","pageLinks","zIndex","dropdown","withOrganization"],"mappings":"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","file":"OrganizationMembersList.js","sourcesContent":["import DocumentTitle from 'react-document-title';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true\n): string {\n  const tmpl = `${routeName} - ${orgSlug}`;\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import {Location} from 'history';\nimport {PlainRoute} from 'react-router/lib/Route';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'app/utils/replaceRouterParams';\n\ntype Options = {\n  routes: PlainRoute[];\n  location: Location;\n\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(to: string | PlainRoute, options: Options): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\ntype Props = {\n  forwardRef?: React.Ref<HTMLButtonElement>;\n  className?: string;\n  id?: string;\n  name?: string;\n  size?: 'sm' | 'lg';\n  isActive?: boolean;\n  isLoading?: boolean;\n  isDisabled?: boolean;\n  toggle: React.HTMLProps<HTMLButtonElement>['onClick'];\n};\n\nconst Switch = ({\n  forwardRef,\n  size = 'sm',\n  isActive,\n  isLoading,\n  isDisabled,\n  toggle,\n  id,\n  name,\n  className,\n}: Props) => (\n  <SwitchButton\n    ref={forwardRef}\n    id={id}\n    name={name}\n    type=\"button\"\n    className={className}\n    onClick={isDisabled ? undefined : toggle}\n    role=\"checkbox\"\n    aria-checked={isActive}\n    isLoading={isLoading}\n    isDisabled={isDisabled}\n    isActive={isActive}\n    size={size}\n    data-test-id=\"switch\"\n  >\n    <Toggle isDisabled={isDisabled} isActive={isActive} size={size} />\n  </SwitchButton>\n);\n\nSwitch.propTypes = {\n  id: PropTypes.string,\n  forwardRef: PropTypes.any,\n  size: PropTypes.oneOf(['sm', 'lg']),\n  isActive: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  toggle: PropTypes.func.isRequired,\n};\n\ntype StyleProps = Partial<Props>;\n\nconst getSize = (p: StyleProps) => (p.size === 'sm' ? 16 : 24);\nconst getToggleSize = (p: StyleProps) => getSize(p) - (p.size === 'sm' ? 6 : 10);\nconst getToggleTop = (p: StyleProps) => (p.size === 'sm' ? 2 : 4);\nconst getTranslateX = (p: StyleProps) =>\n  p.isActive ? getToggleTop(p) + getSize(p) : getToggleTop(p);\n\nconst SwitchButton = styled('button')<StyleProps>`\n  display: inline-block;\n  background: none;\n  padding: 0;\n  border: 1px solid ${p => (p.isActive ? p.theme.borderDark : p.theme.borderLight)};\n  position: relative;\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.04);\n  transition: 0.15s border ease;\n  cursor: ${p => (p.isLoading || p.isDisabled ? 'not-allowed' : 'pointer')};\n  pointer-events: ${p => (p.isLoading || p.isDisabled ? 'none' : null)};\n  height: ${getSize}px;\n  width: ${p => getSize(p) * 2}px;\n  border-radius: ${getSize}px;\n\n  &:hover,\n  &:focus {\n    outline: none;\n    border-color: ${p => p.theme.borderDark};\n  }\n\n  &:focus,\n  &.focus-visible {\n    outline: none;\n    box-shadow: rgba(209, 202, 216, 0.5) 0 0 0 3px;\n  }\n`;\n\nconst Toggle = styled('span')<StyleProps>`\n  display: block;\n  position: absolute;\n  border-radius: 50%;\n  transition: 0.25s all ease;\n  top: ${getToggleTop}px;\n  transform: translateX(${getTranslateX}px);\n  width: ${getToggleSize}px;\n  height: ${getToggleSize}px;\n  background: ${p => (p.isActive ? p.theme.green400 : p.theme.gray400)};\n  opacity: ${p => (p.isDisabled ? 0.4 : null)};\n`;\n\nexport default React.forwardRef<HTMLButtonElement, Props>((props, ref) => (\n  <Switch {...props} forwardRef={ref} />\n));\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport {PanelItem} from 'app/components/panels';\nimport {t, tct} from 'app/locale';\nimport UserAvatar from 'app/components/avatar/userAvatar';\nimport Button from 'app/components/button';\nimport Confirm from 'app/components/confirm';\nimport {IconClose, IconCheckmark, IconFlag, IconMail, IconSubtract} from 'app/icons';\nimport Link from 'app/components/links/link';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport SentryTypes from 'app/sentryTypes';\nimport space from 'app/styles/space';\nimport recreateRoute from 'app/utils/recreateRoute';\n\nexport default class OrganizationMemberRow extends React.PureComponent {\n  static propTypes = {\n    routes: PropTypes.array,\n    // XXX: Spreading this does not work :(\n    member: SentryTypes.Member,\n    onRemove: PropTypes.func.isRequired,\n    onLeave: PropTypes.func.isRequired,\n    onSendInvite: PropTypes.func.isRequired,\n    orgName: PropTypes.string.isRequired,\n    memberCanLeave: PropTypes.bool,\n    requireLink: PropTypes.bool,\n    canRemoveMembers: PropTypes.bool,\n    canAddMembers: PropTypes.bool,\n    currentUser: SentryTypes.User,\n    status: PropTypes.oneOf(['', 'loading', 'success', 'error']),\n  };\n\n  state = {busy: false};\n\n  handleRemove = e => {\n    const {onRemove} = this.props;\n\n    if (typeof onRemove !== 'function') {\n      return;\n    }\n\n    this.setState({busy: true});\n    onRemove(this.props.member, e);\n  };\n\n  handleLeave = e => {\n    const {onLeave} = this.props;\n\n    if (typeof onLeave !== 'function') {\n      return;\n    }\n\n    this.setState({busy: true});\n    onLeave(this.props.member, e);\n  };\n\n  handleSendInvite = e => {\n    const {onSendInvite, member} = this.props;\n\n    if (typeof onSendInvite !== 'function') {\n      return;\n    }\n\n    onSendInvite(member, e);\n  };\n\n  render() {\n    const {\n      params,\n      routes,\n      member,\n      orgName,\n      status,\n      requireLink,\n      memberCanLeave,\n      currentUser,\n      canRemoveMembers,\n      canAddMembers,\n    } = this.props;\n\n    const {id, flags, email, name, roleName, pending, expired, user} = member;\n\n    // if member is not the only owner, they can leave\n    const needsSso = !flags['sso:linked'] && requireLink;\n    const isCurrentUser = currentUser.email === email;\n    const showRemoveButton = !isCurrentUser;\n    const showLeaveButton = isCurrentUser;\n    const canRemoveMember = canRemoveMembers && !isCurrentUser;\n    // member has a `user` property if they are registered with sentry\n    // i.e. has accepted an invite to join org\n    const has2fa = user && user.has2fa;\n    const detailsUrl = recreateRoute(id, {routes, params});\n    const isInviteSuccessful = status === 'success';\n    const isInviting = status === 'loading';\n    const showResendButton = pending || needsSso;\n\n    return (\n      <StyledPanelItem data-test-id={email}>\n        <MemberHeading>\n          <UserAvatar size={32} user={user ? user : {id: email, email}} />\n          <MemberDescription to={detailsUrl}>\n            <h5 style={{margin: '0 0 3px'}}>\n              <UserName>{name}</UserName>\n            </h5>\n            <Email>{email}</Email>\n          </MemberDescription>\n        </MemberHeading>\n\n        <div data-test-id=\"member-role\">\n          {pending ? (\n            <InvitedRole>\n              <IconMail size=\"md\" />\n              {expired ? t('Expired Invite') : tct('Invited [roleName]', {roleName})}\n            </InvitedRole>\n          ) : (\n            roleName\n          )}\n        </div>\n\n        <div data-test-id=\"member-status\">\n          {showResendButton ? (\n            <React.Fragment>\n              {isInviting && (\n                <LoadingContainer>\n                  <LoadingIndicator mini />\n                </LoadingContainer>\n              )}\n              {isInviteSuccessful && <span>Sent!</span>}\n              {!isInviting && !isInviteSuccessful && (\n                <Button\n                  disabled={!canAddMembers}\n                  priority=\"primary\"\n                  size=\"small\"\n                  onClick={this.handleSendInvite}\n                >\n                  {pending ? t('Resend invite') : t('Resend SSO link')}\n                </Button>\n              )}\n            </React.Fragment>\n          ) : (\n            <AuthStatus>\n              {has2fa ? (\n                <IconCheckmark isCircled color=\"success\" />\n              ) : (\n                <IconFlag color=\"error\" />\n              )}\n              {has2fa ? t('2FA Enabled') : t('2FA Not Enabled')}\n            </AuthStatus>\n          )}\n        </div>\n\n        {showRemoveButton || showLeaveButton ? (\n          <div>\n            {showRemoveButton && canRemoveMember && (\n              <Confirm\n                message={tct('Are you sure you want to remove [name] from [orgName]?', {\n                  name,\n                  orgName,\n                })}\n                onConfirm={this.handleRemove}\n                onSuccess={tct('Removed [name] from [orgName]', {\n                  name,\n                  orgName,\n                })}\n                onError={tct('Error removing [name] from [orgName]', {\n                  name,\n                  orgName,\n                })}\n              >\n                <Button\n                  data-test-id=\"remove\"\n                  icon={<IconSubtract isCircled size=\"xs\" />}\n                  size=\"small\"\n                  busy={this.state.busy}\n                >\n                  {t('Remove')}\n                </Button>\n              </Confirm>\n            )}\n\n            {showRemoveButton && !canRemoveMember && (\n              <Button\n                disabled\n                size=\"small\"\n                title={t('You do not have access to remove members')}\n                icon={<IconSubtract isCircled size=\"xs\" />}\n              >\n                {t('Remove')}\n              </Button>\n            )}\n\n            {showLeaveButton && memberCanLeave && (\n              <Confirm\n                message={tct('Are you sure you want to leave [orgName]?', {\n                  orgName,\n                })}\n                onConfirm={this.handleLeave}\n                onSuccess={tct('Left [orgName]', {\n                  orgName,\n                })}\n                onError={tct('Error leaving [orgName]', {\n                  orgName,\n                })}\n              >\n                <Button priority=\"danger\" size=\"small\" icon={<IconClose size=\"xs\" />}>\n                  {t('Leave')}\n                </Button>\n              </Confirm>\n            )}\n\n            {showLeaveButton && !memberCanLeave && (\n              <Button\n                size=\"small\"\n                icon={<IconClose size=\"xs\" />}\n                disabled\n                title={t(\n                  'You cannot leave this organization as you are the only organization owner.'\n                )}\n              >\n                {t('Leave')}\n              </Button>\n            )}\n          </div>\n        ) : null}\n      </StyledPanelItem>\n    );\n  }\n}\n\nconst StyledPanelItem = styled(PanelItem)`\n  display: grid;\n  grid-template-columns: minmax(150px, 2fr) minmax(90px, 1fr) minmax(120px, 1fr) 90px;\n  grid-gap: ${space(2)};\n  align-items: center;\n`;\n\nconst Section = styled('div')`\n  display: inline-grid;\n  grid-template-columns: max-content auto;\n  grid-gap: ${space(1)};\n  align-items: center;\n`;\n\nconst MemberHeading = styled(Section)``;\nconst MemberDescription = styled(Link)`\n  overflow: hidden;\n`;\n\nconst UserName = styled('div')`\n  display: block;\n  font-size: ${p => p.theme.fontSizeLarge};\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst Email = styled('div')`\n  color: ${p => p.theme.gray700};\n  font-size: ${p => p.theme.fontSizeMedium};\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst InvitedRole = styled(Section)``;\nconst LoadingContainer = styled('div')`\n  margin-top: 0;\n  margin-bottom: ${space(1.5)};\n`;\n\nconst AuthStatus = styled(Section)``;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\n\nimport {t} from 'app/locale';\nimport {MemberRole} from 'app/types';\nimport space from 'app/styles/space';\nimport Checkbox from 'app/components/checkbox';\nimport Switch from 'app/components/switch';\nimport {tokenizeSearch, stringifyQueryObject} from 'app/utils/tokenizeSearch';\n\ntype Props = {\n  className?: string;\n  roles: MemberRole[];\n  query: string;\n  onChange: (query: string) => void;\n};\n\ntype BooleanFilterProps = {\n  onChange: (value: boolean | null) => void;\n  value: boolean | null;\n  children: React.ReactNode;\n};\n\ntype Filters = {\n  roles: string[];\n  isInvited: boolean | null;\n  ssoLinked: boolean | null;\n  has2fa: boolean | null;\n};\n\nconst getBoolean = (list: string[]) =>\n  Array.isArray(list) ? list && list.map(v => v.toLowerCase()).includes('true') : null;\n\nconst MembersFilter = ({className, roles, query, onChange}: Props) => {\n  const search = tokenizeSearch(query);\n\n  const filters = {\n    roles: search.getTags('role') || [],\n    isInvited: getBoolean(search.getTags('isInvited')),\n    ssoLinked: getBoolean(search.getTags('ssoLinked')),\n    has2fa: getBoolean(search.getTags('has2fa')),\n  };\n\n  const handleRoleFilter = (id: string) => () => {\n    const roleList = new Set(search.getTags('role') ? [...search.getTags('role')] : []);\n\n    if (roleList.has(id)) {\n      roleList.delete(id);\n    } else {\n      roleList.add(id);\n    }\n\n    const newSearch = search.copy();\n    newSearch.setTag('role', [...roleList]);\n    onChange(stringifyQueryObject(newSearch));\n  };\n\n  const handleBoolFilter = (key: keyof Filters) => (value: boolean | null) => {\n    const newQueryObject = search.copy();\n    newQueryObject.removeTag(key);\n    if (value !== null) {\n      newQueryObject.setTag(key, [Boolean(value).toString()]);\n    }\n\n    onChange(stringifyQueryObject(newQueryObject));\n  };\n\n  return (\n    <FilterContainer className={className}>\n      <FilterHeader>{t('Filter By')}</FilterHeader>\n\n      <FilterLists>\n        <Filters>\n          <h3>{t('User Role')}</h3>\n          {roles.map(({id, name}) => (\n            <label key={id}>\n              <Checkbox\n                data-test-id={`filter-role-${id}`}\n                checked={filters.roles.includes(id)}\n                onChange={handleRoleFilter(id)}\n              />\n              {name}\n            </label>\n          ))}\n        </Filters>\n\n        <Filters>\n          <h3>{t('Status')}</h3>\n          <BooleanFilter\n            data-test-id=\"filter-isInvited\"\n            onChange={handleBoolFilter('isInvited')}\n            value={filters.isInvited}\n          >\n            {t('Invited')}\n          </BooleanFilter>\n          <BooleanFilter\n            data-test-id=\"filter-has2fa\"\n            onChange={handleBoolFilter('has2fa')}\n            value={filters.has2fa}\n          >\n            {t('2FA')}\n          </BooleanFilter>\n          <BooleanFilter\n            data-test-id=\"filter-ssoLinked\"\n            onChange={handleBoolFilter('ssoLinked')}\n            value={filters.ssoLinked}\n          >\n            {t('SSO Linked')}\n          </BooleanFilter>\n        </Filters>\n      </FilterLists>\n    </FilterContainer>\n  );\n};\n\nconst BooleanFilter = ({onChange, value, children}: BooleanFilterProps) => (\n  <label>\n    <Checkbox\n      checked={value !== null}\n      onChange={() => onChange(value === null ? true : null)}\n    />\n    {children}\n    <Switch\n      isDisabled={value === null}\n      isActive={value === true}\n      toggle={() => onChange(!value)}\n    />\n  </label>\n);\n\nMembersFilter.propTypes = {\n  roles: PropTypes.arrayOf(PropTypes.object).isRequired as any,\n  query: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nBooleanFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.oneOf([null, true, false]),\n};\n\nconst FilterContainer = styled('div')`\n  border-radius: 4px;\n  background: #fff;\n  box-shadow: ${p => p.theme.dropShadowLight};\n  border: 1px solid ${p => p.theme.borderLight};\n`;\n\nconst FilterHeader = styled('h2')`\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n  border-bottom: 1px solid ${p => p.theme.borderLight};\n  background: ${p => p.theme.gray100};\n  color: ${p => p.theme.gray600};\n  text-transform: uppercase;\n  font-size: ${p => p.theme.fontSizeExtraSmall};\n  padding: ${space(1)};\n  margin: 0;\n`;\n\nconst FilterLists = styled('div')`\n  display: grid;\n  grid-template-columns: 100px max-content;\n  grid-gap: ${space(3)};\n  margin: ${space(1.5)};\n  margin-top: ${space(0.75)};\n`;\n\nconst Filters = styled('div')`\n  display: grid;\n  grid-template-rows: repeat(auto-fit, minmax(0, max-content));\n  grid-gap: ${space(1)};\n  font-size: ${p => p.theme.fontSizeMedium};\n\n  h3 {\n    color: #000;\n    font-size: ${p => p.theme.fontSizeSmall};\n    text-transform: uppercase;\n    margin: ${space(1)} 0;\n  }\n\n  label {\n    display: grid;\n    grid-template-columns: max-content 1fr max-content;\n    grid-gap: ${space(0.75)};\n    align-items: center;\n    font-weight: normal;\n    white-space: nowrap;\n    height: ${space(2)};\n  }\n\n  input,\n  label {\n    margin: 0;\n  }\n`;\nexport default MembersFilter;\n","import {ClassNames} from '@emotion/core';\nimport {RouteComponentProps} from 'react-router/lib/Router';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport {Organization, Member, MemberRole} from 'app/types';\nimport {IconSliders} from 'app/icons';\nimport {t, tct} from 'app/locale';\nimport AsyncView from 'app/views/asyncView';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport ConfigStore from 'app/stores/configStore';\nimport Pagination from 'app/components/pagination';\nimport routeTitleGen from 'app/utils/routeTitle';\nimport SentryTypes from 'app/sentryTypes';\nimport {redirectToRemainingOrganization} from 'app/actionCreators/organizations';\nimport {resendMemberInvite} from 'app/actionCreators/members';\nimport withOrganization from 'app/utils/withOrganization';\nimport Button from 'app/components/button';\nimport DropdownMenu from 'app/components/dropdownMenu';\nimport space from 'app/styles/space';\nimport {MEMBER_ROLES} from 'app/constants';\nimport theme from 'app/utils/theme';\n\nimport OrganizationMemberRow from './organizationMemberRow';\nimport MembersFilter from './components/membersFilter';\n\ntype Props = {\n  organization: Organization;\n} & RouteComponentProps<{orgId: string}, {}>;\n\ntype State = AsyncView['state'] & {\n  member: Member & {roles: MemberRole[]};\n  members: Member[];\n  invited: {[key: string]: 'loading' | 'success' | null};\n};\n\nclass OrganizationMembersList extends AsyncView<Props, State> {\n  static propTypes = {\n    organization: SentryTypes.Organization,\n  };\n\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      members: [],\n      invited: {},\n    };\n  }\n\n  getEndpoints(): [\n    string,\n    string,\n    {query?: {query: string}},\n    {paginate?: boolean; allowError?: (error: any) => boolean}\n  ][] {\n    const {orgId} = this.props.params;\n\n    return [\n      ['members', `/organizations/${orgId}/members/`, {}, {paginate: true}],\n      [\n        'member',\n        `/organizations/${orgId}/members/me/`,\n        {},\n        {allowError: error => error.status === 404},\n      ],\n      [\n        'authProvider',\n        `/organizations/${orgId}/auth-provider/`,\n        {},\n        {allowError: error => error.status === 403},\n      ],\n    ];\n  }\n\n  getTitle() {\n    const orgId = this.props.organization.slug;\n    return routeTitleGen(t('Members'), orgId, false);\n  }\n\n  removeMember = async (id: string) => {\n    const {orgId} = this.props.params;\n\n    await this.api.requestPromise(`/organizations/${orgId}/members/${id}/`, {\n      method: 'DELETE',\n      data: {},\n    });\n\n    this.setState(state => ({\n      members: state.members.filter(({id: existingId}) => existingId !== id),\n    }));\n  };\n\n  handleRemove = async ({id, name}: Member) => {\n    const {organization} = this.props;\n    const {slug: orgName} = organization;\n\n    try {\n      await this.removeMember(id);\n    } catch {\n      addErrorMessage(tct('Error removing [name] from [orgName]', {name, orgName}));\n      return;\n    }\n\n    addSuccessMessage(tct('Removed [name] from [orgName]', {name, orgName}));\n  };\n\n  handleLeave = async ({id}: Member) => {\n    const {organization} = this.props;\n    const {slug: orgName} = organization;\n\n    try {\n      await this.removeMember(id);\n    } catch {\n      addErrorMessage(tct('Error leaving [orgName]', {orgName}));\n      return;\n    }\n\n    redirectToRemainingOrganization({orgId: orgName, removeOrg: true});\n    addSuccessMessage(tct('You left [orgName]', {orgName}));\n  };\n\n  handleSendInvite = async ({id, expired}) => {\n    this.setState(state => ({\n      invited: {...state.invited, [id]: 'loading'},\n    }));\n\n    try {\n      await resendMemberInvite(this.api, {\n        orgId: this.props.params.orgId,\n        memberId: id,\n        regenerate: expired,\n      });\n    } catch {\n      this.setState(state => ({invited: {...state.invited, [id]: null}}));\n      addErrorMessage(t('Error sending invite'));\n      return;\n    }\n\n    this.setState(state => ({invited: {...state.invited, [id]: 'success'}}));\n  };\n\n  renderBody() {\n    const {params, organization, routes} = this.props;\n    const {membersPageLinks, members, member: currentMember} = this.state;\n    const {name: orgName, access} = organization;\n\n    const canAddMembers = access.includes('member:write');\n    const canRemove = access.includes('member:admin');\n    const currentUser = ConfigStore.get('user');\n\n    // Find out if current user is the only owner\n    const isOnlyOwner = !members.find(\n      ({role, email, pending}) =>\n        role === 'owner' && email !== currentUser.email && !pending\n    );\n\n    // Only admins/owners can remove members\n    const requireLink = !!this.state.authProvider && this.state.authProvider.require_link;\n\n    type RenderSearch = React.ComponentProps<\n      typeof AsyncView.prototype.renderSearchInput\n    >['children'];\n\n    // eslint-disable-next-line react/prop-types\n    const renderSearch: RenderSearch = ({defaultSearchBar, value, handleChange}) => (\n      <SearchWrapper>\n        {defaultSearchBar}\n        <DropdownMenu closeOnEscape>\n          {({getActorProps, isOpen}) => (\n            <FilterWrapper>\n              <Button\n                size=\"small\"\n                icon={<IconSliders size=\"xs\" />}\n                {...getActorProps({})}\n              >\n                {t('Search Filters')}\n              </Button>\n              {isOpen && (\n                <StyledMembersFilter\n                  roles={currentMember.roles || MEMBER_ROLES}\n                  query={value}\n                  onChange={(query: string) => handleChange(query)}\n                />\n              )}\n            </FilterWrapper>\n          )}\n        </DropdownMenu>\n      </SearchWrapper>\n    );\n\n    return (\n      <React.Fragment>\n        <ClassNames>\n          {({css}) =>\n            this.renderSearchInput({\n              updateRoute: true,\n              placeholder: t('Search Members'),\n              children: renderSearch,\n              className: css`\n                font-size: ${theme.fontSizeMedium};\n                padding: ${space(0.75)};\n              `,\n            })\n          }\n        </ClassNames>\n        <Panel data-test-id=\"org-member-list\">\n          <PanelHeader>{t('Members')}</PanelHeader>\n\n          <PanelBody>\n            {members.map(member => (\n              <OrganizationMemberRow\n                routes={routes}\n                params={params}\n                key={member.id}\n                member={member}\n                status={this.state.invited[member.id]}\n                orgId={params.orgId}\n                orgName={orgName}\n                memberCanLeave={!isOnlyOwner}\n                currentUser={currentUser}\n                canRemoveMembers={canRemove}\n                canAddMembers={canAddMembers}\n                requireLink={requireLink}\n                onSendInvite={this.handleSendInvite}\n                onRemove={this.handleRemove}\n                onLeave={this.handleLeave}\n              />\n            ))}\n            {members.length === 0 && (\n              <EmptyMessage>{t('No members found.')}</EmptyMessage>\n            )}\n          </PanelBody>\n        </Panel>\n\n        <Pagination pageLinks={membersPageLinks} />\n      </React.Fragment>\n    );\n  }\n}\n\nconst SearchWrapper = styled('div')`\n  display: grid;\n  grid-template-columns: 1fr max-content;\n  grid-gap: ${space(1.5)};\n  margin-bottom: ${space(3)};\n  position: relative;\n`;\n\nconst FilterWrapper = styled('div')`\n  position: relative;\n`;\n\nconst StyledMembersFilter = styled(MembersFilter)`\n  position: absolute;\n  right: 0;\n  top: 42px;\n  z-index: ${p => p.theme.zIndex.dropdown};\n\n  &:before,\n  &:after {\n    position: absolute;\n    top: -16px;\n    right: 32px;\n    content: '';\n    height: 16px;\n    width: 16px;\n    border: 8px solid transparent;\n    border-bottom-color: ${p => p.theme.gray100};\n  }\n\n  &:before {\n    margin-top: -1px;\n    border-bottom-color: ${p => p.theme.borderLight};\n  }\n`;\nexport default withOrganization(OrganizationMembersList);\n"],"sourceRoot":""}