{"version":3,"sources":["webpack:///./app/components/navTabs.tsx","webpack:///./app/views/auth/loginForm.jsx","webpack:///./app/views/auth/registerForm.jsx","webpack:///./app/views/auth/ssoForm.jsx","webpack:///./app/views/auth/login.jsx"],"names":["NavTabs","props","underlined","className","tabProps","mergedClassName","classnames","LoginProviders","vstsLoginLink","githubLoginLink","googleLoginLink","ProviderWrapper","ProviderHeading","t","align","size","icon","href","LoginForm","state","errorMessage","errors","handleSubmit","data","onSuccess","onError","a","api","requestPromise","method","response","ConfigStore","set","user","browserHistory","push","pathname","nextUri","responseJSON","message","detail","__all__","setState","this","authConfig","hasLoginProvider","css","FormWrapper","submitLabel","onSubmit","footerClass","formFooterClass","extraButton","LostPasswordLink","to","name","placeholder","label","error","username","required","password","React","Component","p","space","theme","borderLight","Link","gray500","gray800","SubscribeField","yesLabel","noLabel","help","tct","link","RegisterForm","hasNewsletter","initialData","subscribe","PrivacyPolicyLink","maxlength","ExternalLink","SlugExample","hostname","slug","SsoForm","serverHostname","example","FORM_COMPONENTS","login","register","sso","Login","loading","activeTab","handleSetTab","event","preventDefault","fetchData","vsts_login_link","github_login_link","google_login_link","config","FormComponent","tabs","canRegister","Fragment","Header","Heading","AuthNavTabs","map","key","onClick","e","StyledLoadingError","onRetry","hasAuthProviders","LoadingError","withApi"],"mappings":"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","file":"AuthLogin.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\ntype Props = {\n  underlined?: boolean;\n  className?: string;\n};\n\ntype NavProps = Omit<React.HTMLProps<HTMLUListElement>, keyof Props> & Props;\n\nfunction NavTabs(props: NavProps) {\n  const {underlined, className, ...tabProps} = props;\n  const mergedClassName = classnames('nav nav-tabs', className, {\n    'border-bottom': underlined,\n  });\n  return <ul className={mergedClassName} {...tabProps} />;\n}\n\nNavTabs.propTypes = {\n  underlined: PropTypes.bool,\n};\n\nexport default NavTabs;\n","import {ClassNames} from '@emotion/core';\nimport {browserHistory} from 'react-router';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport {formFooterClass} from 'app/views/auth/login';\nimport {t} from 'app/locale';\nimport Button from 'app/components/button';\nimport ConfigStore from 'app/stores/configStore';\nimport Form from 'app/components/forms/form';\nimport Link from 'app/components/links/link';\nimport PasswordField from 'app/components/forms/passwordField';\nimport {IconGithub, IconGoogle, IconVsts} from 'app/icons';\nimport SentryTypes from 'app/sentryTypes';\nimport TextField from 'app/components/forms/textField';\nimport space from 'app/styles/space';\n\n// TODO(epurkhiser): The abstraction here would be much nicer if we just\n// exposed a configuration object telling us what auth providers there are.\nconst LoginProviders = ({vstsLoginLink, githubLoginLink, googleLoginLink}) => (\n  <ProviderWrapper>\n    <ProviderHeading>{t('External Account Login')}</ProviderHeading>\n    {googleLoginLink && (\n      <Button\n        align=\"left\"\n        size=\"small\"\n        icon={<IconGoogle size=\"xs\" />}\n        href={googleLoginLink}\n      >\n        {t('Sign in with Google')}\n      </Button>\n    )}\n    {githubLoginLink && (\n      <Button\n        align=\"left\"\n        size=\"small\"\n        icon={<IconGithub size=\"xs\" />}\n        href={githubLoginLink}\n      >\n        {t('Sign in with GitHub')}\n      </Button>\n    )}\n    {vstsLoginLink && (\n      <Button\n        align=\"left\"\n        size=\"small\"\n        icon={<IconVsts size=\"xs\" />}\n        href={vstsLoginLink}\n      >\n        {t('Sign in with Azure DevOps')}\n      </Button>\n    )}\n  </ProviderWrapper>\n);\n\nLoginProviders.propTypes = {\n  githubLoginLink: PropTypes.string,\n  vstsLoginLink: PropTypes.string,\n  googleLoginLink: PropTypes.string,\n};\n\nclass LoginForm extends React.Component {\n  static propTypes = {\n    api: PropTypes.object,\n    authConfig: SentryTypes.AuthConfig,\n  };\n\n  state = {\n    errorMessage: null,\n    errors: {},\n  };\n\n  handleSubmit = async (data, onSuccess, onError) => {\n    try {\n      const response = await this.props.api.requestPromise('/auth/login/', {\n        method: 'POST',\n        data,\n      });\n      onSuccess(data);\n\n      // TODO(epurkhiser): There is likely more that needs to happen to update\n      // the application state after user login.\n\n      ConfigStore.set('user', response.user);\n\n      // TODO(epurkhiser): Reconfigure sentry SDK identity\n\n      browserHistory.push({pathname: response.nextUri});\n    } catch (e) {\n      if (!e.responseJSON || !e.responseJSON.errors) {\n        onError(e);\n        return;\n      }\n\n      let message = e.responseJSON.detail;\n      if (e.responseJSON.errors.__all__) {\n        message = e.responseJSON.errors.__all__;\n      }\n\n      this.setState({\n        errorMessage: message,\n        errors: e.responseJSON.errors || {},\n      });\n\n      onError(e);\n    }\n  };\n\n  render() {\n    const {errorMessage, errors} = this.state;\n    const {githubLoginLink, vstsLoginLink} = this.props.authConfig;\n\n    const hasLoginProvider = githubLoginLink || vstsLoginLink;\n\n    return (\n      <ClassNames>\n        {({css}) => (\n          <FormWrapper hasLoginProvider={hasLoginProvider}>\n            <Form\n              submitLabel={t('Continue')}\n              onSubmit={this.handleSubmit}\n              footerClass={css`\n                ${formFooterClass}\n              `}\n              errorMessage={errorMessage}\n              extraButton={\n                <LostPasswordLink to=\"/account/recover/\">\n                  {t('Lost your password?')}\n                </LostPasswordLink>\n              }\n            >\n              <TextField\n                name=\"username\"\n                placeholder={t('username or email')}\n                label={t('Account')}\n                error={errors.username}\n                required\n              />\n              <PasswordField\n                name=\"password\"\n                placeholder={t('password')}\n                label={t('Password')}\n                error={errors.password}\n                required\n              />\n            </Form>\n            {hasLoginProvider && <LoginProviders {...{vstsLoginLink, githubLoginLink}} />}\n          </FormWrapper>\n        )}\n      </ClassNames>\n    );\n  }\n}\n\nconst FormWrapper = styled('div')`\n  display: grid;\n  grid-gap: 60px;\n  grid-template-columns: ${p => (p.hasLoginProvider ? '1fr 0.8fr' : '1fr')};\n`;\n\nconst ProviderHeading = styled('div')`\n  margin: 0;\n  font-size: 15px;\n  font-weight: bold;\n  line-height: 24px;\n`;\n\nconst ProviderWrapper = styled('div')`\n  position: relative;\n  display: grid;\n  grid-auto-rows: max-content;\n  grid-gap: ${space(1.5)};\n\n  &:before {\n    position: absolute;\n    display: block;\n    content: '';\n    top: 0;\n    bottom: 0;\n    left: -30px;\n    border-left: 1px solid ${p => p.theme.borderLight};\n  }\n`;\n\nconst LostPasswordLink = styled(Link)`\n  color: ${p => p.theme.gray500};\n\n  &:hover {\n    color: ${p => p.theme.gray800};\n  }\n`;\n\nexport default LoginForm;\n","import {ClassNames} from '@emotion/core';\nimport {browserHistory} from 'react-router';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport {formFooterClass} from 'app/views/auth/login';\nimport {t, tct} from 'app/locale';\nimport ConfigStore from 'app/stores/configStore';\nimport ExternalLink from 'app/components/links/externalLink';\nimport Form from 'app/components/forms/form';\nimport PasswordField from 'app/components/forms/passwordField';\nimport RadioBooleanField from 'app/components/forms/radioBooleanField';\nimport SentryTypes from 'app/sentryTypes';\nimport TextField from 'app/components/forms/textField';\n\nconst SubscribeField = () => (\n  <RadioBooleanField\n    name=\"subscribe\"\n    yesLabel={t('Yes, I would like to receive updates via email')}\n    noLabel={t(\"No, I'd prefer not to receive these updates\")}\n    help={tct(\n      `We'd love to keep you updated via email with product and feature\n           announcements, promotions, educational materials, and events. Our\n           updates focus on relevant information, and we'll never sell your data\n           to third parties. See our [link] for more details.`,\n      {\n        link: <a href=\"https://sentry.io/privacy/\">Privacy Policy</a>,\n      }\n    )}\n  />\n);\n\nclass RegisterForm extends React.Component {\n  static propTypes = {\n    api: PropTypes.object,\n    authConfig: SentryTypes.AuthConfig,\n  };\n\n  state = {\n    errorMessage: null,\n    errors: {},\n  };\n\n  handleSubmit = async (data, onSuccess, onError) => {\n    const {api} = this.props;\n\n    try {\n      const response = await api.requestPromise('/auth/register/', {\n        method: 'POST',\n        data,\n      });\n      onSuccess(data);\n\n      // TODO(epurkhiser): There is more we need to do to setup the user. but\n      // definitely primarily we need to init our user.\n      ConfigStore.set('user', response.user);\n\n      browserHistory.push({pathname: response.nextUri});\n    } catch (e) {\n      if (!e.responseJSON || !e.responseJSON.errors) {\n        onError(e);\n        return;\n      }\n\n      let message = e.responseJSON.detail;\n      if (e.responseJSON.errors.__all__) {\n        message = e.responseJSON.errors.__all__;\n      }\n\n      this.setState({\n        errorMessage: message,\n        errors: e.responseJSON.errors || {},\n      });\n\n      onError(e);\n    }\n  };\n\n  render() {\n    const {hasNewsletter} = this.props.authConfig;\n    const {errorMessage, errors} = this.state;\n\n    return (\n      <ClassNames>\n        {({css}) => (\n          <Form\n            initialData={{subscribe: true}}\n            submitLabel={t('Continue')}\n            onSubmit={this.handleSubmit}\n            footerClass={css`\n              ${formFooterClass}\n            `}\n            errorMessage={errorMessage}\n            extraButton={\n              <PrivacyPolicyLink href=\"https://sentry.io/privacy/\">\n                {t('Privacy Policy')}\n              </PrivacyPolicyLink>\n            }\n          >\n            <TextField\n              name=\"name\"\n              placeholder={t('Jane Bloggs')}\n              maxlength={30}\n              label={t('Name')}\n              error={errors.name}\n              required\n            />\n            <TextField\n              name=\"username\"\n              placeholder={t('you@example.com')}\n              maxlength={128}\n              label={t('Email')}\n              error={errors.username}\n              required\n            />\n            <PasswordField\n              name=\"password\"\n              placeholder={t('something super secret')}\n              label={t('Password')}\n              error={errors.password}\n              required\n            />\n            {hasNewsletter && <SubscribeField />}\n          </Form>\n        )}\n      </ClassNames>\n    );\n  }\n}\n\nconst PrivacyPolicyLink = styled(ExternalLink)`\n  color: ${p => p.theme.gray500};\n\n  &:hover {\n    color: ${p => p.theme.gray800};\n  }\n`;\n\nexport default RegisterForm;\n","import {browserHistory} from 'react-router';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {t, tct} from 'app/locale';\nimport Form from 'app/components/forms/form';\nimport SentryTypes from 'app/sentryTypes';\nimport TextField from 'app/components/forms/textField';\n\nconst SlugExample = p => (\n  <code>\n    {p.hostname}/<strong>{p.slug}</strong>\n  </code>\n);\n\nclass SsoForm extends React.Component {\n  static propTypes = {\n    api: PropTypes.object,\n    authConfig: SentryTypes.AuthConfig,\n  };\n\n  state = {\n    errorMessage: null,\n  };\n\n  handleSubmit = async (data, onSuccess, onError) => {\n    const {api} = this.props;\n    try {\n      const response = await api.requestPromise('/auth/sso-locate/', {\n        method: 'POST',\n        data,\n      });\n      onSuccess(data);\n      browserHistory.push({pathname: response.nextUri});\n    } catch (e) {\n      if (!e.responseJSON) {\n        onError(e);\n        return;\n      }\n      const message = e.responseJSON.detail;\n      this.setState({errorMessage: message});\n      onError(e);\n    }\n  };\n\n  render() {\n    const {serverHostname} = this.props.authConfig;\n    const {errorMessage} = this.state;\n\n    return (\n      <Form\n        className=\"form-stacked\"\n        submitLabel={t('Continue')}\n        onSubmit={this.handleSubmit}\n        footerClass=\"auth-footer\"\n        errorMessage={errorMessage}\n      >\n        <TextField\n          name=\"organization\"\n          placeholder=\"acme\"\n          label={t('Organization ID')}\n          required\n          help={tct('Your ID is the slug after the hostname. e.g. [example] is [slug].', {\n            slug: <strong>acme</strong>,\n            example: <SlugExample slug=\"acme\" hostname={serverHostname} />,\n          })}\n        />\n      </Form>\n    );\n  }\n}\n\nexport default SsoForm;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport {t} from 'app/locale';\nimport LoadingError from 'app/components/loadingError';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport NavTabs from 'app/components/navTabs';\nimport space from 'app/styles/space';\nimport withApi from 'app/utils/withApi';\n\nimport LoginForm from './loginForm';\nimport RegisterForm from './registerForm';\nimport SsoForm from './ssoForm';\n\nconst FORM_COMPONENTS = {\n  login: LoginForm,\n  register: RegisterForm,\n  sso: SsoForm,\n};\n\nclass Login extends React.Component {\n  static propTypes = {\n    api: PropTypes.object,\n  };\n\n  state = {\n    loading: true,\n    error: null,\n    activeTab: 'login',\n    authConfig: {},\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  handleSetTab = (activeTab, event) => {\n    this.setState({activeTab});\n    event.preventDefault();\n  };\n\n  fetchData = async () => {\n    const {api} = this.props;\n    try {\n      const response = await api.requestPromise('/auth/config/');\n\n      const {vsts_login_link, github_login_link, google_login_link, ...config} = response;\n      const authConfig = {\n        ...config,\n        vstsLoginLink: vsts_login_link,\n        githubLoginLink: github_login_link,\n        googleLoginLink: google_login_link,\n      };\n\n      this.setState({authConfig});\n    } catch (e) {\n      this.setState({error: true});\n    }\n\n    this.setState({loading: false});\n  };\n\n  get hasAuthProviders() {\n    const {githubLoginLink, googleLoginLink, vstsLoginLink} = this.state.authConfig;\n    return githubLoginLink || vstsLoginLink || googleLoginLink;\n  }\n\n  render() {\n    const {api} = this.props;\n    const {loading, error, activeTab, authConfig} = this.state;\n\n    const FormComponent = FORM_COMPONENTS[activeTab];\n\n    const tabs = [\n      ['login', t('Login')],\n      ['sso', t('Single Sign-On')],\n      ['register', t('Register'), !authConfig.canRegister],\n    ];\n\n    const renderTab = ([key, label, disabled]) =>\n      !disabled && (\n        <li key={key} className={activeTab === key ? 'active' : ''}>\n          <a href=\"#\" onClick={e => this.handleSetTab(key, e)}>\n            {label}\n          </a>\n        </li>\n      );\n\n    return (\n      <React.Fragment>\n        <Header>\n          <Heading>{t('Sign in to continue')}</Heading>\n          <AuthNavTabs>{tabs.map(renderTab)}</AuthNavTabs>\n        </Header>\n        {loading && <LoadingIndicator />}\n        {error && (\n          <StyledLoadingError\n            message={t('Unable to load authentication configuration')}\n            onRetry={this.fetchData}\n          />\n        )}\n        {!loading && !error && (\n          <FormWrapper hasAuthProviders={this.hasAuthProviders}>\n            <FormComponent {...{api, authConfig}} />\n          </FormWrapper>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nconst StyledLoadingError = styled(LoadingError)`\n  margin: ${space(2)};\n`;\n\nconst Header = styled('div')`\n  border-bottom: 1px solid ${p => p.theme.borderLight};\n  padding: 20px 40px 0;\n`;\n\nconst Heading = styled('h3')`\n  font-size: 24px;\n  margin: 0 0 20px 0;\n`;\n\nconst AuthNavTabs = styled(NavTabs)`\n  margin: 0;\n`;\n\nconst FormWrapper = styled('div')`\n  padding: 35px;\n  width: ${p => (p.hasAuthProviders ? '600px' : '490px')};\n`;\n\nconst formFooterClass = `\n  display: grid;\n  grid-template-columns: max-content 1fr;\n  grid-gap: ${space(1)};\n  align-items: center;\n  justify-items: end;\n  border-top: none;\n  margin-bottom: 0;\n  padding: 0;\n`;\n\nexport {formFooterClass};\n\nexport default withApi(Login);\n"],"sourceRoot":""}