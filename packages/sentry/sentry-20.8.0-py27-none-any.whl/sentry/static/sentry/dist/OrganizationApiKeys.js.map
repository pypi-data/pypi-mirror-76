{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/components/links/linkWithConfirmation.tsx","webpack:///./app/views/settings/organizationApiKeys/organizationApiKeysList.jsx","webpack:///./app/views/settings/organizationApiKeys/index.jsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","SettingsPageHeading","props","icon","action","tabs","noTitleStyles","TitleAndActions","Icon","Title","styled","Action","React","Component","defaultProps","p","space","StyledSettingsPageHeading","recreateRoute","to","options","lastRootIndex","routeIndex","routes","params","location","stepBack","paths","map","path","indexOf","findLastIndex","slice","baseRoute","search","hash","fullRoute","join","replaceRouterParams","LinkWithConfirmation","className","disabled","children","otherProps","href","classNames","PureComponent","OrganizationApiKeysList","keys","busy","onAddApiKey","onRemove","hasKeys","length","priority","size","isCircled","onClick","t","tct","api","tokens","disablePadding","alignItems","flex","px","width","id","key","label","apiDetailsUrl","py","onConfirm","e","message","css","OrganizationApiKeys","handleRemove","Client","request","orgId","method","data","success","setState","state","filter","error","handleAddApiKey","browserHistory","push","addSuccessMessage","org","context","organization","name","contextTypes","SentryTypes","Organization"],"mappings":"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","file":"OrganizationApiKeys.js","sourcesContent":["import DocumentTitle from 'react-document-title';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'app/styles/space';\nimport {HeaderTitle} from 'app/styles/organization';\n\ntype Props = {\n  // The title\n  title: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n\n  className?: string;\n\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // Actions on opposite end of title bar from the title\n  action?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass SettingsPageHeading extends React.Component<Props> {\n  static propTypes = {\n    icon: PropTypes.node,\n    title: PropTypes.node.isRequired,\n    action: PropTypes.node,\n    tabs: PropTypes.node,\n    // Disables font styles in the title. Allows for more custom titles.\n    noTitleStyles: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          {icon && <Icon>{icon}</Icon>}\n          {title && (\n            <Title tabs={tabs} styled={noTitleStyles}>\n              <HeaderTitle>{title}</HeaderTitle>\n            </Title>\n          )}\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p =>\n    p.tabs\n      ? `${space(4)} ${space(2)} ${space(2)} 0`\n      : `${space(4)} ${space(2)} ${space(4)} 0`};\n  flex: 1;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst StyledSettingsPageHeading = styled(SettingsPageHeading)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default StyledSettingsPageHeading;\n","import {Location} from 'history';\nimport {PlainRoute} from 'react-router/lib/Route';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'app/utils/replaceRouterParams';\n\ntype Options = {\n  routes: PlainRoute[];\n  location: Location;\n\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(to: string | PlainRoute, options: Options): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport Button from 'app/components/button';\nimport Confirm from 'app/components/confirm';\n\ntype Props = {\n  message: React.ReactNode;\n  title: string;\n  onConfirm: () => void;\n  disabled?: boolean;\n  className?: string;\n  priority?: React.ComponentProps<typeof Button>['priority'];\n};\n\n/**\n * <Confirm> is a more generic version of this component\n */\nclass LinkWithConfirmation extends React.PureComponent<Props> {\n  render() {\n    const {className, disabled, title, children, ...otherProps} = this.props;\n    return (\n      <Confirm {...otherProps} disabled={disabled}>\n        <a href=\"#\" className={classNames(className || '', {disabled})} title={title}>\n          {children}\n        </a>\n      </Confirm>\n    );\n  }\n}\n\nexport default LinkWithConfirmation;\n","import {Box, Flex} from 'reflexbox';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';\nimport {t, tct} from 'app/locale';\nimport AutoSelectText from 'app/components/autoSelectText';\nimport Button from 'app/components/button';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport ExternalLink from 'app/components/links/externalLink';\nimport {IconDelete, IconAdd} from 'app/icons';\nimport Link from 'app/components/links/link';\nimport LinkWithConfirmation from 'app/components/links/linkWithConfirmation';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\nimport recreateRoute from 'app/utils/recreateRoute';\n\nclass OrganizationApiKeysList extends React.Component {\n  static propTypes = {\n    routes: PropTypes.array,\n    keys: PropTypes.array,\n    busy: PropTypes.bool,\n    onRemove: PropTypes.func,\n    onAddApiKey: PropTypes.func,\n  };\n\n  render() {\n    const {params, routes, keys, busy, onAddApiKey, onRemove} = this.props;\n    const hasKeys = keys && keys.length;\n\n    const action = (\n      <Button\n        priority=\"primary\"\n        size=\"small\"\n        icon={<IconAdd size=\"xs\" isCircled />}\n        busy={busy}\n        disabled={busy}\n        onClick={onAddApiKey}\n      >\n        {t('New API Key')}\n      </Button>\n    );\n    return (\n      <div>\n        <SettingsPageHeader title={t('API Keys')} action={action} />\n\n        <TextBlock>\n          {tct(\n            `API keys grant access to the [api:developer web API].\n          If you're looking to configure a Sentry client, you'll need a\n          client key which is available in your project settings.`,\n            {\n              api: <ExternalLink href=\"https://docs.sentry.io/api/\" />,\n            }\n          )}\n        </TextBlock>\n\n        <div className=\"alert alert-block alert-info\">\n          {tct(\n            'psst. Until Sentry supports OAuth, you might want to switch to using [tokens:Auth Tokens] instead.',\n            {\n              tokens: <Link to=\"/settings/account/api/auth-tokens/\" />,\n            }\n          )}\n        </div>\n\n        <Panel>\n          <PanelHeader disablePadding>\n            <Flex alignItems=\"center\" flex=\"1\">\n              <Box px={2} flex=\"1\">\n                {t('Name')}\n              </Box>\n              <Box px={2} flex=\"2\">\n                {t('Key')}\n              </Box>\n            </Flex>\n\n            <Box px={2} width={100}>\n              {t('Actions')}\n            </Box>\n          </PanelHeader>\n\n          <PanelBody>\n            {!hasKeys && (\n              <EmptyMessage>{t('No API keys for this organization')}</EmptyMessage>\n            )}\n\n            {keys &&\n              keys.map(({id, key, label}) => {\n                const apiDetailsUrl = recreateRoute(`${id}/`, {\n                  params,\n                  routes,\n                });\n\n                return (\n                  <PanelItem alignItems=\"center\" p={0} py={1} key={id}>\n                    <Flex alignItems=\"center\" flex=\"1\">\n                      <Box px={2} flex=\"1\" alignItems=\"center\">\n                        <Link to={apiDetailsUrl}>{label}</Link>\n                      </Box>\n                      <Box px={2} flex=\"2\">\n                        <AutoSelectText className=\"form-control disabled\">\n                          {key}\n                        </AutoSelectText>\n                      </Box>\n                    </Flex>\n\n                    <Box px={2} width={100}>\n                      <LinkWithConfirmation\n                        className=\"btn btn-default btn-sm\"\n                        onConfirm={e => onRemove(id, e)}\n                        message={t('Are you sure you want to remove this API key?')}\n                        title={t('Remove API Key?')}\n                      >\n                        <IconDelete size=\"xs\" css={{position: 'relative', top: '2px'}} />\n                      </LinkWithConfirmation>\n                    </Box>\n                  </PanelItem>\n                );\n              })}\n          </PanelBody>\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default OrganizationApiKeysList;\n","import {browserHistory} from 'react-router';\nimport React from 'react';\n\nimport {Client} from 'app/api';\nimport {addSuccessMessage} from 'app/actionCreators/indicator';\nimport {t} from 'app/locale';\nimport AsyncView from 'app/views/asyncView';\nimport SentryTypes from 'app/sentryTypes';\nimport recreateRoute from 'app/utils/recreateRoute';\n\nimport OrganizationApiKeysList from './organizationApiKeysList';\n\nclass OrganizationApiKeys extends AsyncView {\n  static contextTypes = {\n    organization: SentryTypes.Organization,\n  };\n\n  getEndpoints() {\n    return [['keys', `/organizations/${this.props.params.orgId}/api-keys/`]];\n  }\n\n  getTitle() {\n    const org = this.context.organization;\n    return `${org.name} API Keys`;\n  }\n\n  handleRemove = id => {\n    const api = new Client();\n    api.request(`/organizations/${this.props.params.orgId}/api-keys/${id}/`, {\n      method: 'DELETE',\n      data: {},\n      success: () => {\n        this.setState(state => ({\n          keys: state.keys.filter(({id: existingId}) => existingId !== id),\n        }));\n      },\n      error: () => {\n        this.setState({busy: false});\n      },\n    });\n  };\n\n  handleAddApiKey = () => {\n    const api = new Client();\n    this.setState({\n      busy: true,\n    });\n    api.request(`/organizations/${this.props.params.orgId}/api-keys/`, {\n      method: 'POST',\n      data: {},\n      success: data => {\n        this.setState({busy: false});\n        browserHistory.push(\n          recreateRoute(`${data.id}/`, {\n            params: this.props.params,\n            routes: this.props.routes,\n          })\n        );\n        addSuccessMessage(t(`Created a new API key \"${data.label}\"`));\n      },\n      error: () => {\n        this.setState({busy: false});\n      },\n    });\n  };\n\n  renderBody() {\n    return (\n      <OrganizationApiKeysList\n        busy={this.state.busy}\n        keys={this.state.keys}\n        organization={this.context.organization}\n        onRemove={this.handleRemove}\n        onAddApiKey={this.handleAddApiKey}\n        {...this.props}\n      />\n    );\n  }\n}\n\nexport default OrganizationApiKeys;\n"],"sourceRoot":""}