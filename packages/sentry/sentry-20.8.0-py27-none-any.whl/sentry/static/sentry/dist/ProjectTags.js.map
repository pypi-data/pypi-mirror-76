{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/settings/project/permissionAlert.tsx","webpack:///./app/components/links/linkWithConfirmation.tsx","webpack:///./app/views/settings/projectTags.jsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","SettingsPageHeading","props","icon","action","tabs","noTitleStyles","TitleAndActions","Icon","Title","styled","Action","React","Component","defaultProps","p","space","StyledSettingsPageHeading","routeTitleGen","routeName","orgSlug","withSentry","tmpl","PermissionAlert","access","hasAccess","type","size","t","LinkWithConfirmation","className","disabled","children","otherProps","href","classNames","PureComponent","ProjectTags","params","projectId","orgId","key","idx","api","request","method","success","tags","state","slice","splice","setState","error","loading","isEmpty","length","Fragment","tct","link","map","enabled","canDelete","TagPanelItem","data-test-id","TagName","Actions","message","onConfirm","onDelete","PanelItem"],"mappings":"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","file":"ProjectTags.js","sourcesContent":["import DocumentTitle from 'react-document-title';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'app/styles/space';\nimport {HeaderTitle} from 'app/styles/organization';\n\ntype Props = {\n  // The title\n  title: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n\n  className?: string;\n\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // Actions on opposite end of title bar from the title\n  action?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass SettingsPageHeading extends React.Component<Props> {\n  static propTypes = {\n    icon: PropTypes.node,\n    title: PropTypes.node.isRequired,\n    action: PropTypes.node,\n    tabs: PropTypes.node,\n    // Disables font styles in the title. Allows for more custom titles.\n    noTitleStyles: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          {icon && <Icon>{icon}</Icon>}\n          {title && (\n            <Title tabs={tabs} styled={noTitleStyles}>\n              <HeaderTitle>{title}</HeaderTitle>\n            </Title>\n          )}\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p =>\n    p.tabs\n      ? `${space(4)} ${space(2)} ${space(2)} 0`\n      : `${space(4)} ${space(2)} ${space(4)} 0`};\n  flex: 1;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst StyledSettingsPageHeading = styled(SettingsPageHeading)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default StyledSettingsPageHeading;\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true\n): string {\n  const tmpl = `${routeName} - ${orgSlug}`;\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {t} from 'app/locale';\nimport Access from 'app/components/acl/access';\nimport Alert from 'app/components/alert';\nimport {IconWarning} from 'app/icons';\n\ntype Props = React.ComponentPropsWithoutRef<typeof Alert> &\n  Pick<React.ComponentProps<typeof Access>, 'access'>;\n\nconst PermissionAlert = ({access = ['project:write'], ...props}: Props) => (\n  <Access access={access}>\n    {({hasAccess}) =>\n      !hasAccess && (\n        <Alert type=\"warning\" icon={<IconWarning size=\"xs\" />} {...props}>\n          {t(\n            'These settings can only be edited by users with the organization owner, manager, or admin role.'\n          )}\n        </Alert>\n      )\n    }\n  </Access>\n);\n\nPermissionAlert.propTypes = {\n  access: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default PermissionAlert;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport Button from 'app/components/button';\nimport Confirm from 'app/components/confirm';\n\ntype Props = {\n  message: React.ReactNode;\n  title: string;\n  onConfirm: () => void;\n  disabled?: boolean;\n  className?: string;\n  priority?: React.ComponentProps<typeof Button>['priority'];\n};\n\n/**\n * <Confirm> is a more generic version of this component\n */\nclass LinkWithConfirmation extends React.PureComponent<Props> {\n  render() {\n    const {className, disabled, title, children, ...otherProps} = this.props;\n    return (\n      <Confirm {...otherProps} disabled={disabled}>\n        <a href=\"#\" className={classNames(className || '', {disabled})} title={title}>\n          {children}\n        </a>\n      </Confirm>\n    );\n  }\n}\n\nexport default LinkWithConfirmation;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';\nimport {t, tct} from 'app/locale';\nimport Access from 'app/components/acl/access';\nimport AsyncView from 'app/views/asyncView';\nimport Button from 'app/components/button';\nimport {IconDelete} from 'app/icons';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport ExternalLink from 'app/components/links/externalLink';\nimport LinkWithConfirmation from 'app/components/links/linkWithConfirmation';\nimport PermissionAlert from 'app/views/settings/project/permissionAlert';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\nimport Tooltip from 'app/components/tooltip';\nimport routeTitleGen from 'app/utils/routeTitle';\nimport space from 'app/styles/space';\n\nexport default class ProjectTags extends AsyncView {\n  getEndpoints() {\n    const {projectId, orgId} = this.props.params;\n    return [['tags', `/projects/${orgId}/${projectId}/tags/`]];\n  }\n\n  getTitle() {\n    const {projectId} = this.props.params;\n    return routeTitleGen(t('Tags'), projectId, false);\n  }\n\n  onDelete(key, idx) {\n    const {projectId, orgId} = this.props.params;\n\n    this.api.request(`/projects/${orgId}/${projectId}/tags/${key}/`, {\n      method: 'DELETE',\n      success: () => {\n        const tags = this.state.tags.slice();\n        tags.splice(idx, 1);\n        this.setState({tags});\n      },\n      error: () => {\n        this.setState({\n          error: true,\n          loading: false,\n        });\n      },\n    });\n  }\n\n  renderBody() {\n    const {tags} = this.state;\n    const isEmpty = !tags || tags.length === 0;\n\n    return (\n      <React.Fragment>\n        <SettingsPageHeader title={t('Tags')} />\n        <PermissionAlert />\n\n        <TextBlock>\n          {tct(\n            `Each event in Sentry may be annotated with various tags (key and value pairs).\n                 Learn how to [link:add custom tags].`,\n            {\n              link: (\n                <ExternalLink href=\"https://docs.sentry.io/enriching-error-data/additional-data/\" />\n              ),\n            }\n          )}\n        </TextBlock>\n\n        <Panel>\n          <PanelHeader>{t('Tags')}</PanelHeader>\n\n          <PanelBody>\n            {isEmpty && (\n              <EmptyMessage>\n                {tct('There are no tags, [link:learn how to add tags]', {\n                  link: (\n                    <ExternalLink href=\"https://docs.sentry.io/enriching-error-data/additional-data/\" />\n                  ),\n                })}\n              </EmptyMessage>\n            )}\n\n            <Access access={['project:write']}>\n              {({hasAccess}) =>\n                !isEmpty &&\n                tags.map(({key, canDelete}, idx) => {\n                  const enabled = canDelete && hasAccess;\n                  return (\n                    <TagPanelItem key={key} data-test-id=\"tag-row\">\n                      <TagName>{key}</TagName>\n\n                      <Actions>\n                        <Tooltip\n                          disabled={enabled}\n                          title={\n                            hasAccess\n                              ? t('This tag cannot be deleted.')\n                              : t('You do not have permission to remove tags.')\n                          }\n                        >\n                          <LinkWithConfirmation\n                            title=\"Remove tag?\"\n                            message=\"Are you sure you want to remove this tag?\"\n                            onConfirm={() => this.onDelete(key, idx)}\n                            disabled={!enabled}\n                          >\n                            <Button\n                              size=\"xsmall\"\n                              icon={<IconDelete size=\"xs\" />}\n                              data-test-id=\"delete\"\n                              disabled={!enabled}\n                            />\n                          </LinkWithConfirmation>\n                        </Tooltip>\n                      </Actions>\n                    </TagPanelItem>\n                  );\n                })\n              }\n            </Access>\n          </PanelBody>\n        </Panel>\n      </React.Fragment>\n    );\n  }\n}\n\nconst TagPanelItem = styled(PanelItem)`\n  padding: 0;\n  align-items: center;\n`;\n\nconst TagName = styled('div')`\n  flex: 1;\n  padding: ${space(2)};\n`;\n\nconst Actions = styled('div')`\n  display: flex;\n  align-items: center;\n  padding: ${space(2)};\n`;\n"],"sourceRoot":""}