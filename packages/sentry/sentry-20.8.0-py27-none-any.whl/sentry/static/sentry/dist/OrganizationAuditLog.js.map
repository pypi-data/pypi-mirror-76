{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/components/dateTime.tsx","webpack:///./app/views/settings/organizationAuditLog/auditLogList.jsx","webpack:///./app/views/settings/organizationAuditLog/index.jsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","SettingsPageHeading","props","icon","action","tabs","noTitleStyles","TitleAndActions","Icon","Title","styled","Action","React","Component","defaultProps","p","space","StyledSettingsPageHeading","routeTitleGen","routeName","orgSlug","withSentry","tmpl","DateTime","getFormat","clock24Hours","dateOnly","timeOnly","seconds","shortDate","timeAndDate","date","utc","carriedProps","user","ConfigStore","get","options","format","moment","tz","timezone","UserInfo","NameContainer","Name","Note","OverflowBox","overflowEllipsis","StyledPanelHeader","PanelHeader","StyledPanelItem","PanelItem","avatarStyle","width","height","marginRight","AuditLogList","pageLinks","entries","eventType","eventTypes","onEventSelect","hasEntries","length","value","label","t","clearableVaue","map","type","clearableValue","deprecatedSelectControl","name","onChange","style","clearable","disablePadding","entry","alignItems","key","id","actor","email","data-test-id","isSuperuser","note","event","ipAddress","disabled","dateCreated","EVENT_TYPES","sort","OrganizationAuditLog","handleEventSelect","location","query","browserHistory","push","pathname","search","params","orgId","context","organization","slug","currentEventType","state","entryList","contextTypes","SentryTypes","Organization"],"mappings":"8fAQqBA,E,8RAKjB,MAAO,K,+BAIP,IAAMC,EAAQC,KAAKC,WACnB,OACE,YAAC,IAAD,CAAeF,MAAK,UAAKA,EAAQ,GAAH,OAAMA,EAAN,OAAmB,GAA7B,WACjBC,KAAKE,uB,GATJC,KAHWL,E,+cCiBfM,E,4RAcK,MACsDJ,KAAKK,MAA3DC,EADA,EACAA,KAAMP,EADN,EACMA,MAAOQ,EADb,EACaA,OAAQC,EADrB,EACqBA,KAAMC,EAD3B,EAC2BA,cAAkBJ,EAD7C,wDAEP,OACE,kBAASA,EACP,YAACK,EAAD,KACGJ,GAAQ,YAACK,EAAD,KAAOL,GACfP,GACC,YAACa,EAAD,CAAOJ,KAAMA,EAAMK,OAAQJ,GACzB,YAAC,IAAD,KAAcV,IAGjBQ,GAAU,YAACO,EAAD,CAAQN,KAAMA,GAAOD,IAGjCC,GAAQ,uBAAMA,Q,GA5BWO,IAAMC,WAAlCZ,E,kCAAAA,EAUGa,aAAe,CACpBR,eAAe,GA4BnB,IAAMC,EAAkB,YAAO,MAAP,8CAAH,2DAKfE,EAAQ,YAAO,MAAP,qCACV,SAAAM,GAAC,OACAA,EAAEL,QAAH,mDAFO,YAMC,SAAAK,GAAC,OACTA,EAAEV,KAAF,UACOW,YAAM,GADb,YACmBA,YAAM,GADzB,YAC+BA,YAAM,GADrC,gBAEOA,YAAM,GAFb,YAEmBA,YAAM,GAFzB,YAE+BA,YAAM,GAFrC,QAPO,YAaLR,EAAO,YAAO,MAAP,mCAAH,gBACQQ,YAAM,GADd,KAIJL,EAAS,YAAO,MAAP,sCACX,SAAAI,GAAC,OAAKA,EAAEV,KAAF,sBAAwBW,YAAM,IAAO,OADnC,KAINC,EAA4B,YAAOhB,EAAP,wDAAH,8BAIde,YAAM,GAJQ,KAOhBC,O,kCCxFAC,IATf,SACEC,EACAC,GAEQ,IADRC,IACQ,yDACFC,EAAO,GAAH,OAAMH,EAAN,cAAqBC,GAC/B,OAAOC,EAAa,GAAH,OAAMC,EAAN,aAAwBA,I,ybCarCC,E,yUAeJC,UAAY,YAAqD,IAAnDC,EAAmD,EAAnDA,aAAmD,EACD,EAAKvB,MAA5DwB,EADwD,EACxDA,SAAUC,EAD8C,EAC9CA,SAAUC,EADoC,EACpCA,QAASC,EAD2B,EAC3BA,UAAWC,EADgB,EAChBA,YAG/C,OAAIJ,EACK,KAILI,EACK,aAILH,EACK,KAGLE,EACK,aAGLJ,EACK,yBAILG,EACK,WAIF,O,+CAGA,QAUH/B,KAAKK,MARP6B,EAFK,EAELA,KACAC,EAHK,EAGLA,IAMGC,GATE,EAILL,QAJK,EAKLC,UALK,EAMLH,SANK,EAOLC,SAPK,EAQLG,YARK,iFAWDI,EAAOC,UAAYC,IAAI,QACvBC,EAAUH,aAAH,EAAGA,EAAMG,QAChBC,EAASzC,KAAK2B,UAAUa,GAE9B,OACE,mBAAUJ,EACPD,EACGO,IAAOP,IAAID,GAAMO,OAAOA,GACxBC,IAAOC,GAAGT,EAAV,UAAgBM,aAAhB,EAAgBA,EAASI,gBAAzB,QAAqC,IAAIH,OAAOA,Q,GArErC1B,IAAMC,WAAvBU,E,uBAAAA,EAWGT,aAA6B,CAClCc,SAAS,GA+DEL,O,4jBC9Ef,IAAMmB,EAAW,YAAO,MAAP,uCAAH,8EAORC,EAAgB,YAAO,MAAP,4CAAH,qFAMbC,EAAO,YAAO,MAAP,mCAAH,2DAIJC,EAAO,YAAO,MAAP,mCAAH,gEAIJC,EAAc,YAAO,MAAP,0CAChBC,IADa,KAIXC,EAAoB,YAAOC,IAAP,gDAAH,4EAGFjC,YAAM,GAHJ,YAIVA,YAAM,GAJI,KAOjBkC,EAAkB,YAAOC,IAAP,8CAAH,4EAGAnC,YAAM,GAHN,YAIRA,YAAM,GAJE,KAOfoC,EAAc,CAClBC,MAAO,GACPC,OAAQ,GACRC,YAAa,GAGTC,E,4RASK,MAC4D3D,KAAKK,MAAjEuD,EADA,EACAA,UAAWC,EADX,EACWA,QAASC,EADpB,EACoBA,UAAWC,EAD/B,EAC+BA,WAAYC,EAD3C,EAC2CA,cAC5CC,EAAaJ,GAAWA,EAAQK,OAAS,EAEzC1B,EAAU,CACd,CAAC2B,MAAO,GAAIC,MAAOC,YAAE,cAAeC,eAAe,IADxC,WAERP,EAAWQ,KAAI,SAAAC,GAAI,MAAK,CAACJ,MAAOI,EAAML,MAAOK,EAAMC,gBAAgB,QAGlElE,EACJ,wBACE,YAAC,IAAD,CACEmE,yBAAuB,EACvBC,KAAK,QACLC,SAAUZ,EACVG,MAAOL,EACPe,MAAO,CAACrB,MAAO,KACfhB,QAASA,EACTsC,WAAS,KAKf,OACE,uBACE,YAAC,IAAD,CAAoB/E,MAAOsE,YAAE,aAAc9D,OAAQA,IACnD,YAAC,IAAD,KACE,YAAC4C,EAAD,CAAmB4B,gBAAc,GAC/B,uBAAMV,YAAE,WACR,uBAAMA,YAAE,WACR,uBAAMA,YAAE,OACR,uBAAMA,YAAE,UAGV,YAAC,IAAD,MACIJ,GACA,YAAC,IAAD,KAAeI,YAAE,+BAGlBJ,GACCJ,EAAQU,KAAI,SAAAS,GAAK,OACf,YAAC3B,EAAD,CAAiB4B,WAAW,SAASC,IAAKF,EAAMG,IAC9C,YAACtC,EAAD,KACE,uBACGmC,EAAMI,MAAMC,OACX,YAAC,IAAD,CAAYR,MAAOtB,EAAalB,KAAM2C,EAAMI,SAGhD,YAACtC,EAAD,KACE,YAACC,EAAD,CAAMuC,eAAa,cAChBN,EAAMI,MAAMG,YACTlB,YAAE,oBAAqBW,EAAMI,MAAMT,MACnCK,EAAMI,MAAMT,MAElB,YAAC3B,EAAD,KAAOgC,EAAMQ,QAGjB,uBAAMR,EAAMS,OACZ,uBACE,YAAC,IAAD,CACE1F,MAAOiF,EAAMU,UACbC,SAAUX,EAAMU,WAAaV,EAAMU,UAAUxB,QA1D5C,IA4DD,YAACjB,EAAD,KAAc+B,EAAMU,aAGxB,uBACE,YAAC,IAAD,CAAUxD,KAAM8C,EAAMY,qBAMjChC,GAAa,YAAC,IAAD,KAAYA,UAAWA,GAAe5D,KAAKK,a,GAlFtCU,IAAMC,WAA3B2C,E,2BAwFSA,Q,0PC1If,IAAMkC,EAAc,CAClB,gBACA,aACA,uBACA,gBACA,cACA,mBACA,oBACA,iBACA,cACA,YACA,cACA,iBACA,eACA,iBACA,qBACA,sBACA,2BACA,0BACA,aACA,WACA,aACA,cACA,gBACA,oBACA,kBACA,oBACA,oBACA,qBACA,aACA,cACA,WACA,oBACA,iBACA,eACA,iBACA,cACA,YACA,cACA,qBACA,mBACA,qBACA,qBACA,sBACA,kBACA,mBACA,qBACA,gBACA,gBACA,eACA,kBACAC,OAEIC,E,yUAyBJC,kBAAoB,SAAA7B,GAEd,EAAK9D,MAAM4F,SAASC,MAAMT,QAAUtB,GAIxCgC,iBAAeC,KAAK,CAClBC,SAAU,EAAKhG,MAAM4F,SAASI,SAC9BC,OAAQ,UAAF,OAAYnC,M,qDAvBpB,MAAO,CACL,CACE,YADF,yBAEoBnE,KAAKK,MAAMkG,OAAOC,MAFtC,gBAGE,CACEN,MAAOlG,KAAKK,MAAM4F,SAASC,W,iCAOjC,OAAO7E,YAAcgD,YAAE,aAAcrE,KAAKyG,QAAQC,aAAaC,MAAM,K,mCAgBrE,IAAMC,EAAmB5G,KAAKK,MAAM4F,SAASC,MAAMT,MAEnD,OACE,YAAC,EAAD,KACE5B,QAAS7D,KAAK6G,MAAMC,UACpBlD,UAAW5D,KAAK6G,MAAMjD,UACtBE,UAAW8C,EACX7C,WAAY8B,EACZ7B,cAAehE,KAAKgG,mBAChBhG,KAAKK,Y,GA/CkBP,KAA7BiG,EAKGgB,aAAe,CACpBL,aAAcM,IAAYC,cA+CflB","file":"OrganizationAuditLog.js","sourcesContent":["import DocumentTitle from 'react-document-title';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'app/styles/space';\nimport {HeaderTitle} from 'app/styles/organization';\n\ntype Props = {\n  // The title\n  title: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n\n  className?: string;\n\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // Actions on opposite end of title bar from the title\n  action?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass SettingsPageHeading extends React.Component<Props> {\n  static propTypes = {\n    icon: PropTypes.node,\n    title: PropTypes.node.isRequired,\n    action: PropTypes.node,\n    tabs: PropTypes.node,\n    // Disables font styles in the title. Allows for more custom titles.\n    noTitleStyles: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          {icon && <Icon>{icon}</Icon>}\n          {title && (\n            <Title tabs={tabs} styled={noTitleStyles}>\n              <HeaderTitle>{title}</HeaderTitle>\n            </Title>\n          )}\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p =>\n    p.tabs\n      ? `${space(4)} ${space(2)} ${space(2)} 0`\n      : `${space(4)} ${space(2)} ${space(4)} 0`};\n  flex: 1;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst StyledSettingsPageHeading = styled(SettingsPageHeading)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default StyledSettingsPageHeading;\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true\n): string {\n  const tmpl = `${routeName} - ${orgSlug}`;\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport moment from 'moment-timezone';\n\nimport ConfigStore from 'app/stores/configStore';\n\ntype DefaultProps = {\n  seconds: boolean;\n};\n\ntype Props = DefaultProps & {\n  date: moment.MomentInput;\n  dateOnly?: boolean;\n  timeOnly?: boolean;\n  shortDate?: boolean;\n  timeAndDate?: boolean;\n  utc?: boolean;\n};\n\nclass DateTime extends React.Component<Props> {\n  static propTypes = {\n    date: PropTypes.any.isRequired,\n    dateOnly: PropTypes.bool,\n    timeOnly: PropTypes.bool,\n    shortDate: PropTypes.bool,\n    seconds: PropTypes.bool,\n    timeAndDate: PropTypes.bool,\n    utc: PropTypes.bool,\n  };\n\n  static defaultProps: DefaultProps = {\n    seconds: true,\n  };\n\n  getFormat = ({clock24Hours}: {clock24Hours: boolean}): string => {\n    const {dateOnly, timeOnly, seconds, shortDate, timeAndDate} = this.props;\n\n    // October 26, 2017\n    if (dateOnly) {\n      return 'LL';\n    }\n\n    // Oct 26, 2017 11:30:30 AM\n    if (timeAndDate) {\n      return 'MMM DD, LT';\n    }\n\n    // 4:57 PM\n    if (timeOnly) {\n      return 'LT';\n    }\n\n    if (shortDate) {\n      return 'MM/DD/YYYY';\n    }\n\n    if (clock24Hours) {\n      return 'MMMM D YYYY HH:mm:ss z';\n    }\n\n    // Oct 26, 2017 11:30:30 AM\n    if (seconds) {\n      return 'll LTS z';\n    }\n\n    // Default is Oct 26, 2017 11:30 AM\n    return 'lll';\n  };\n\n  render() {\n    const {\n      date,\n      utc,\n      seconds: _seconds,\n      shortDate: _shortDate,\n      dateOnly: _dateOnly,\n      timeOnly: _timeOnly,\n      timeAndDate: _timeAndDate,\n      ...carriedProps\n    } = this.props;\n    const user = ConfigStore.get('user');\n    const options = user?.options;\n    const format = this.getFormat(options);\n\n    return (\n      <time {...carriedProps}>\n        {utc\n          ? moment.utc(date).format(format)\n          : moment.tz(date, options?.timezone ?? '').format(format)}\n      </time>\n    );\n  }\n}\n\nexport default DateTime;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport {t} from 'app/locale';\nimport UserAvatar from 'app/components/avatar/userAvatar';\nimport DateTime from 'app/components/dateTime';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport Pagination from 'app/components/pagination';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';\nimport SelectField from 'app/components/forms/selectField';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport Tooltip from 'app/components/tooltip';\nimport overflowEllipsis from 'app/styles/overflowEllipsis';\nimport space from 'app/styles/space';\n\nconst UserInfo = styled('div')`\n  display: flex;\n  line-height: 1.2;\n  font-size: 13px;\n  flex: 1;\n`;\n\nconst NameContainer = styled('div')`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst Name = styled('div')`\n  font-weight: 600;\n  font-size: 15px;\n`;\nconst Note = styled('div')`\n  font-size: 13px;\n  word-break: break-word;\n`;\nconst OverflowBox = styled('div')`\n  ${overflowEllipsis};\n`;\n\nconst StyledPanelHeader = styled(PanelHeader)`\n  display: grid;\n  grid-template-columns: 1fr 150px 130px 150px;\n  grid-column-gap: ${space(2)};\n  padding: ${space(2)};\n`;\n\nconst StyledPanelItem = styled(PanelItem)`\n  display: grid;\n  grid-template-columns: 1fr 150px 130px 150px;\n  grid-column-gap: ${space(2)};\n  padding: ${space(2)};\n`;\n\nconst avatarStyle = {\n  width: 36,\n  height: 36,\n  marginRight: 8,\n};\n\nclass AuditLogList extends React.Component {\n  static propTypes = {\n    entries: PropTypes.array,\n    pageLinks: PropTypes.string,\n    eventType: PropTypes.string,\n    eventTypes: PropTypes.arrayOf(PropTypes.string),\n    onEventSelect: PropTypes.func,\n  };\n\n  render() {\n    const {pageLinks, entries, eventType, eventTypes, onEventSelect} = this.props;\n    const hasEntries = entries && entries.length > 0;\n    const ipv4Length = 15;\n    const options = [\n      {value: '', label: t('Any action'), clearableVaue: false},\n      ...eventTypes.map(type => ({label: type, value: type, clearableValue: false})),\n    ];\n\n    const action = (\n      <form>\n        <SelectField\n          deprecatedSelectControl\n          name=\"event\"\n          onChange={onEventSelect}\n          value={eventType}\n          style={{width: 250}}\n          options={options}\n          clearable\n        />\n      </form>\n    );\n\n    return (\n      <div>\n        <SettingsPageHeader title={t('Audit Log')} action={action} />\n        <Panel>\n          <StyledPanelHeader disablePadding>\n            <div>{t('Member')}</div>\n            <div>{t('Action')}</div>\n            <div>{t('IP')}</div>\n            <div>{t('Time')}</div>\n          </StyledPanelHeader>\n\n          <PanelBody>\n            {!hasEntries && (\n              <EmptyMessage>{t('No audit entries available')}</EmptyMessage>\n            )}\n\n            {hasEntries &&\n              entries.map(entry => (\n                <StyledPanelItem alignItems=\"center\" key={entry.id}>\n                  <UserInfo>\n                    <div>\n                      {entry.actor.email && (\n                        <UserAvatar style={avatarStyle} user={entry.actor} />\n                      )}\n                    </div>\n                    <NameContainer>\n                      <Name data-test-id=\"actor-name\">\n                        {entry.actor.isSuperuser\n                          ? t('%s (Sentry Staff)', entry.actor.name)\n                          : entry.actor.name}\n                      </Name>\n                      <Note>{entry.note}</Note>\n                    </NameContainer>\n                  </UserInfo>\n                  <div>{entry.event}</div>\n                  <div>\n                    <Tooltip\n                      title={entry.ipAddress}\n                      disabled={entry.ipAddress && entry.ipAddress.length <= ipv4Length}\n                    >\n                      <OverflowBox>{entry.ipAddress}</OverflowBox>\n                    </Tooltip>\n                  </div>\n                  <div>\n                    <DateTime date={entry.dateCreated} />\n                  </div>\n                </StyledPanelItem>\n              ))}\n          </PanelBody>\n        </Panel>\n        {pageLinks && <Pagination pageLinks={pageLinks} {...this.props} />}\n      </div>\n    );\n  }\n}\n\nexport default AuditLogList;\n","import {browserHistory} from 'react-router';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport AsyncView from 'app/views/asyncView';\nimport SentryTypes from 'app/sentryTypes';\nimport {t} from 'app/locale';\nimport routeTitleGen from 'app/utils/routeTitle';\n\nimport AuditLogList from './auditLogList';\n\nconst EVENT_TYPES = [\n  'member.invite',\n  'member.add',\n  'member.accept-invite',\n  'member.remove',\n  'member.edit',\n  'member.join-team',\n  'member.leave-team',\n  'member.pending',\n  'team.create',\n  'team.edit',\n  'team.remove',\n  'project.create',\n  'project.edit',\n  'project.remove',\n  'project.set-public',\n  'project.set-private',\n  'project.request-transfer',\n  'project.accept-transfer',\n  'org.create',\n  'org.edit',\n  'org.remove',\n  'org.restore',\n  'tagkey.remove',\n  'projectkey.create',\n  'projectkey.edit',\n  'projectkey.remove',\n  'projectkey.enable',\n  'projectkey.disable',\n  'sso.enable',\n  'sso.disable',\n  'sso.edit',\n  'sso-identity.link',\n  'api-key.create',\n  'api-key.edit',\n  'api-key.remove',\n  'rule.create',\n  'rule.edit',\n  'rule.remove',\n  'servicehook.create',\n  'servicehook.edit',\n  'servicehook.remove',\n  'servicehook.enable',\n  'servicehook.disable',\n  'integration.add',\n  'integration.edit',\n  'integration.remove',\n  'ondemand.edit',\n  'trial.started',\n  'plan.changed',\n  'plan.cancelled',\n].sort();\n\nclass OrganizationAuditLog extends AsyncView {\n  static propTypes = {\n    routes: PropTypes.array,\n  };\n\n  static contextTypes = {\n    organization: SentryTypes.Organization,\n  };\n\n  getEndpoints() {\n    return [\n      [\n        'entryList',\n        `/organizations/${this.props.params.orgId}/audit-logs/`,\n        {\n          query: this.props.location.query,\n        },\n      ],\n    ];\n  }\n\n  getTitle() {\n    return routeTitleGen(t('Audit Log'), this.context.organization.slug, false);\n  }\n\n  handleEventSelect = value => {\n    // Dont update if event has not changed\n    if (this.props.location.query.event === value) {\n      return;\n    }\n\n    browserHistory.push({\n      pathname: this.props.location.pathname,\n      search: `?event=${value}`,\n    });\n  };\n\n  renderBody() {\n    const currentEventType = this.props.location.query.event;\n\n    return (\n      <AuditLogList\n        entries={this.state.entryList}\n        pageLinks={this.state.pageLinks}\n        eventType={currentEventType}\n        eventTypes={EVENT_TYPES}\n        onEventSelect={this.handleEventSelect}\n        {...this.props}\n      />\n    );\n  }\n}\n\nexport default OrganizationAuditLog;\n"],"sourceRoot":""}