{"version":3,"sources":["webpack:///./app/components/alertLink.tsx","webpack:///./app/views/settings/account/accountNotifications.jsx"],"names":["AlertLink","this","props","size","priority","icon","children","onClick","withoutMarginBottom","openInNewTab","to","href","StyledLink","IconWrapper","AlertLinkText","IconLink","direction","React","Component","defaultProps","linkProps","omit","p","theme","alert","backgroundLight","gray700","border","space","FINE_TUNE_FOOTERS","t","text","path","AccountNotifications","title","initialData","state","data","saveOnBlur","apiMethod","apiEndpoint","forms","accountNotificationFields","renderFooter","FineTuningFooter","AsyncView","FineTuneLink","Link","css"],"mappings":"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","file":"AccountNotifications.js","sourcesContent":["import styled from '@emotion/styled';\nimport React from 'react';\nimport omit from 'lodash/omit';\n\nimport Link from 'app/components/links/link';\nimport ExternalLink from 'app/components/links/externalLink';\nimport {IconChevron} from 'app/icons';\nimport space from 'app/styles/space';\n\ntype Size = 'small' | 'normal';\ntype Priority = 'info' | 'warning' | 'success' | 'error' | 'muted';\n\ntype LinkProps = React.ComponentPropsWithoutRef<typeof Link>;\n\ntype OtherProps = {\n  icon?: string | React.ReactNode;\n  onClick?: (e: React.MouseEvent) => void;\n};\n\ntype DefaultProps = {\n  size: Size;\n  priority: Priority;\n  withoutMarginBottom: boolean;\n  openInNewTab: boolean;\n  href?: string;\n};\n\ntype Props = OtherProps & DefaultProps & Partial<Pick<LinkProps, 'to'>>;\n\ntype StyledLinkProps = DefaultProps &\n  Partial<Pick<LinkProps, 'to'>> &\n  Omit<LinkProps, 'to' | 'size'>;\n\nclass AlertLink extends React.Component<Props> {\n  static defaultProps: DefaultProps = {\n    priority: 'warning',\n    size: 'normal',\n    withoutMarginBottom: false,\n    openInNewTab: false,\n  };\n\n  render() {\n    const {\n      size,\n      priority,\n      icon,\n      children,\n      onClick,\n      withoutMarginBottom,\n      openInNewTab,\n      to,\n      href,\n    } = this.props;\n\n    return (\n      <StyledLink\n        to={to}\n        href={href}\n        onClick={onClick}\n        size={size}\n        priority={priority}\n        withoutMarginBottom={withoutMarginBottom}\n        openInNewTab={openInNewTab}\n      >\n        {icon && <IconWrapper>{icon}</IconWrapper>}\n        <AlertLinkText>{children}</AlertLinkText>\n        <IconLink>\n          <IconChevron direction=\"right\" />\n        </IconLink>\n      </StyledLink>\n    );\n  }\n}\n\nexport default AlertLink;\n\nconst StyledLink = styled(({openInNewTab, to, href, ...props}: StyledLinkProps) => {\n  const linkProps = omit(props, ['withoutMarginBottom', 'priority', 'size']);\n  if (href) {\n    return <ExternalLink {...linkProps} href={href} openInNewTab={openInNewTab} />;\n  }\n\n  return <Link {...linkProps} to={to || ''} />;\n})`\n  display: flex;\n  background-color: ${p => p.theme.alert[p.priority].backgroundLight};\n  color: ${p => p.theme.gray700};\n  border: 1px dashed ${p => p.theme.alert[p.priority].border};\n  padding: ${p => (p.size === 'small' ? `${space(1)} ${space(1.5)}` : space(2))};\n  margin-bottom: ${p => (p.withoutMarginBottom ? 0 : space(3))};\n  border-radius: 0.25em;\n  transition: 0.2s border-color;\n\n  &.focus-visible {\n    outline: none;\n    box-shadow: ${p => p.theme.alert[p.priority].border}7f 0 0 0 2px;\n  }\n`;\n\nconst IconWrapper = styled('span')`\n  display: flex;\n  margin: ${space(0.5)} ${space(1.5)} ${space(0.5)} 0;\n`;\n\nconst IconLink = styled(IconWrapper)`\n  margin: ${space(0.5)} 0;\n`;\n\nconst AlertLinkText = styled('div')`\n  line-height: 1.5;\n  flex-grow: 1;\n`;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport {t} from 'app/locale';\nimport AlertLink from 'app/components/alertLink';\nimport AsyncView from 'app/views/asyncView';\nimport Form from 'app/views/settings/components/forms/form';\nimport {IconChevron, IconMail} from 'app/icons';\nimport JsonForm from 'app/views/settings/components/forms/jsonForm';\nimport Link from 'app/components/links/link';\nimport {PanelFooter} from 'app/components/panels';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport accountNotificationFields from 'app/data/forms/accountNotificationSettings';\n\nconst FINE_TUNE_FOOTERS = {\n  [t('Alerts')]: {\n    text: t('Fine tune alerts by project'),\n    path: 'alerts/',\n  },\n  [t('Workflow Notifications')]: {\n    text: t('Fine tune workflow notifications by project'),\n    path: 'workflow/',\n  },\n  [t('Email Routing')]: {\n    text: t('Fine tune email routing by project'),\n    path: 'email/',\n  },\n  [t('Weekly Reports')]: {\n    text: t('Fine tune weekly reports by organization'),\n    path: 'reports/',\n  },\n  [t('Deploy Notifications')]: {\n    text: t('Fine tune deploy notifications by organization'),\n    path: 'deploy/',\n  },\n};\n\nexport default class AccountNotifications extends AsyncView {\n  getEndpoints() {\n    return [['data', '/users/me/notifications/']];\n  }\n\n  getTitle() {\n    return 'Notifications';\n  }\n\n  renderBody() {\n    return (\n      <div>\n        <SettingsPageHeader title=\"Notifications\" />\n        <Form\n          initialData={this.state.data}\n          saveOnBlur\n          apiMethod=\"PUT\"\n          apiEndpoint=\"/users/me/notifications/\"\n        >\n          <JsonForm\n            forms={accountNotificationFields}\n            renderFooter={({title}) => {\n              if (FINE_TUNE_FOOTERS[title]) {\n                return <FineTuningFooter {...FINE_TUNE_FOOTERS[title]} />;\n              }\n              return null;\n            }}\n          />\n          <AlertLink to=\"/settings/account/emails\" icon={<IconMail />}>\n            {t('Looking to add or remove an email address? Use the emails panel.')}\n          </AlertLink>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst FineTuneLink = styled(Link)`\n  display: flex;\n  justify-content: space-between;\n  padding: 15px 20px;\n  color: inherit;\n`;\n\nclass FineTuningFooter extends React.Component {\n  static propTypes = {\n    path: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n  };\n\n  render() {\n    const {path, text} = this.props;\n    const baseUrl = '/settings/account/notifications/';\n\n    return (\n      <PanelFooter css={{borderTop: 'none'}}>\n        <FineTuneLink to={`${baseUrl}${path}`}>\n          <span>{text}</span>\n          <IconChevron direction=\"right\" size=\"15px\" />\n        </FineTuneLink>\n      </PanelFooter>\n    );\n  }\n}\n"],"sourceRoot":""}