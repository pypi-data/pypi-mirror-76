{"version":3,"sources":["webpack:///./app/components/modals/commandPalette.jsx"],"names":["CommandPaletteModal","handleSuccess","data","props","onClose","closeModal","analytics","Body","this","injectedCss","css","entryPoint","minSearch","maxResults","dropdownStyle","theme","borderLight","renderInput","getInputProps","InputWrapper","Input","autoFocus","ref","searchInput","type","placeholder","t","React","Component","modalCss"],"mappings":"85BAUMA,E,yUAWJC,cAAgB,SAAAC,GACV,EAAKC,MAAMC,SACb,EAAKD,MAAMC,QAAQF,GAGrB,EAAKC,MAAME,c,0DARXC,YAAU,qB,+BAWH,WACAC,EAAQC,KAAKL,MAAbI,KAEP,OACE,YAACA,EAAD,KACE,YAAC,IAAD,MACG,gBAAOE,EAAP,EAAEC,IAAF,OACC,YAAC,IAAD,OACM,EAAKP,MADX,CAEEQ,WAAW,kBACXC,UAAW,EACXC,WAAY,GACZC,cAAeL,EAAF,IAOaM,IAAMC,aAEhCC,YAAa,gBAAEC,EAAF,EAAEA,cAAF,OACX,YAACC,EAAD,KACE,YAACC,EAAD,KACEC,WAAS,EACTC,IAAK,SAAAA,GAAG,OAAK,EAAKC,YAAcD,IAC5BJ,EAAc,CAChBM,KAAM,OACNC,YAAaC,YAAE,iE,GA/CHC,IAAMC,WAAlC5B,E,kCA4DSA,YAER,IAAM6B,EAAW,CAAH,6EAMfV,EAAe,YAAO,MAAP,0CAAH,wCAIZC,EAAQ,YAAO,QAAP,mCAAH","file":"CommandPalette.js","sourcesContent":["import {ClassNames, css} from '@emotion/core';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport {analytics} from 'app/utils/analytics';\nimport {t} from 'app/locale';\nimport Search from 'app/components/search';\nimport theme from 'app/utils/theme';\n\nclass CommandPaletteModal extends React.Component {\n  static propTypes = {\n    closeModal: PropTypes.func,\n    onClose: PropTypes.func,\n    Body: PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n  };\n\n  componentDidMount() {\n    analytics('omnisearch.open');\n  }\n\n  handleSuccess = data => {\n    if (this.props.onClose) {\n      this.props.onClose(data);\n    }\n\n    this.props.closeModal();\n  };\n\n  render() {\n    const {Body} = this.props;\n\n    return (\n      <Body>\n        <ClassNames>\n          {({css: injectedCss}) => (\n            <Search\n              {...this.props}\n              entryPoint=\"command_palette\"\n              minSearch={1}\n              maxResults={10}\n              dropdownStyle={injectedCss`\n                width: 100%;\n                border: transparent;\n                border-top-left-radius: 0;\n                border-top-right-radius: 0;\n                position: initial;\n                box-shadow: none;\n                border-top: 1px solid ${theme.borderLight};\n              `}\n              renderInput={({getInputProps}) => (\n                <InputWrapper>\n                  <Input\n                    autoFocus\n                    ref={ref => (this.searchInput = ref)}\n                    {...getInputProps({\n                      type: 'text',\n                      placeholder: t('Search for projects, teams, settings, etc...'),\n                    })}\n                  />\n                </InputWrapper>\n              )}\n            />\n          )}\n        </ClassNames>\n      </Body>\n    );\n  }\n}\n\nexport default CommandPaletteModal;\n\nexport const modalCss = css`\n  .modal-content {\n    padding: 0;\n  }\n`;\n\nconst InputWrapper = styled('div')`\n  padding: 2px;\n`;\n\nconst Input = styled('input')`\n  width: 100%;\n  padding: 8px;\n  border: none;\n  border-radius: 8px;\n  outline: none;\n\n  &:focus {\n    outline: none;\n  }\n`;\n"],"sourceRoot":""}